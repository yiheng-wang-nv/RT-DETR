W1225 03:43:41.811000 304107 torch/distributed/run.py:793] 
W1225 03:43:41.811000 304107 torch/distributed/run.py:793] *****************************************
W1225 03:43:41.811000 304107 torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1225 03:43:41.811000 304107 torch/distributed/run.py:793] *****************************************
Initialized distributed mode...
cfg:  {'task': 'detection', '_model': None, '_postprocessor': None, '_criterion': None, '_optimizer': None, '_lr_scheduler': None, '_lr_warmup_scheduler': None, '_train_dataloader': None, '_val_dataloader': None, '_ema': None, '_scaler': None, '_train_dataset': None, '_val_dataset': None, '_collate_fn': None, '_evaluator': None, '_writer': None, 'num_workers': 0, 'batch_size': None, '_train_batch_size': None, '_val_batch_size': None, '_train_shuffle': None, '_val_shuffle': None, 'resume': None, 'tuning': '/colon_workspace/RT-DETR/rtdetrv2_pytorch/output/rtdetrv2_tresnet_6x_colon/checkpoint0001.pth', 'epoches': 20, 'last_epoch': -1, 'use_amp': True, 'use_ema': True, 'ema_decay': 0.9999, 'ema_warmups': 2000, 'sync_bn': True, 'clip_max_norm': 0.1, 'find_unused_parameters': False, 'seed': 0, 'print_freq': 100, 'checkpoint_freq': 1, 'output_dir': './output/rtdetrv2_tresnet_6x_colon', 'summary_dir': None, 'device': '', 'yaml_cfg': {'task': 'detection', 'evaluator': {'type': 'CocoEvaluator', 'iou_types': ['bbox']}, 'num_classes': 1, 'remap_mscoco_category': True, 'train_dataloader': {'type': 'DataLoader', 'dataset': {'type': 'CocoDetection', 'img_folder': '/colon_workspace/real-colon-dataset/real_colon_dataset_coco_fmt_3subsets_poslesion1000_negratio0/train_images', 'ann_file': '/colon_workspace/real-colon-dataset/real_colon_dataset_coco_fmt_3subsets_poslesion1000_negratio0/train_ann.json', 'return_masks': False, 'transforms': {'type': 'Compose', 'ops': [{'type': 'RandomPhotometricDistort', 'p': 0.5}, {'type': 'RandomZoomOut', 'fill': 0}, {'type': 'RandomIoUCrop', 'p': 0.8}, {'type': 'SanitizeBoundingBoxes', 'min_size': 1}, {'type': 'RandomHorizontalFlip'}, {'type': 'Resize', 'size': [640, 640]}, {'type': 'SanitizeBoundingBoxes', 'min_size': 1}, {'type': 'ConvertPILImage', 'dtype': 'float32', 'scale': True}, {'type': 'ConvertBoxes', 'fmt': 'cxcywh', 'normalize': True}], 'policy': {'name': 'stop_epoch', 'epoch': 19, 'ops': ['RandomPhotometricDistort', 'RandomZoomOut', 'RandomIoUCrop']}}}, 'shuffle': True, 'num_workers': 16, 'drop_last': True, 'collate_fn': {'type': 'BatchImageCollateFuncion', 'scales': [480, 512, 544, 576, 608, 640, 640, 640, 672, 704, 736, 768, 800], 'stop_epoch': 19}, 'total_batch_size': 64}, 'val_dataloader': {'type': 'DataLoader', 'dataset': {'type': 'CocoDetection', 'img_folder': '/colon_workspace/real-colon-dataset/real_colon_dataset_coco_fmt_3subsets_poslesion1000_negratio0/validation_images', 'ann_file': '/colon_workspace/real-colon-dataset/real_colon_dataset_coco_fmt_3subsets_poslesion1000_negratio0/validation_ann.json', 'return_masks': False, 'transforms': {'type': 'Compose', 'ops': [{'type': 'Resize', 'size': [640, 640]}, {'type': 'ConvertPILImage', 'dtype': 'float32', 'scale': True}]}}, 'shuffle': False, 'num_workers': 16, 'drop_last': False, 'collate_fn': {'type': 'BatchImageCollateFuncion'}, 'total_batch_size': 128}, 'print_freq': 100, 'output_dir': './output/rtdetrv2_tresnet_6x_colon', 'checkpoint_freq': 1, 'sync_bn': True, 'find_unused_parameters': False, 'use_amp': True, 'scaler': {'type': 'GradScaler', 'enabled': True}, 'use_ema': True, 'ema': {'type': 'ModelEMA', 'decay': 0.9999, 'warmups': 2000}, 'epoches': 20, 'clip_max_norm': 0.1, 'optimizer': {'type': 'AdamW', 'params': [{'params': '^(?=.*(?:encoder|decoder))(?=.*(?:norm|bn)).*$', 'weight_decay': 0.0}], 'lr': 0.0004, 'betas': [0.9, 0.999], 'weight_decay': 0.0001, 'eps': 1e-05}, 'lr_scheduler': {'type': 'MultiStepLR', 'milestones': [1000], 'gamma': 0.1}, '__include__': ['/colon_workspace/RT-DETR/rtdetrv2_pytorch/configs/dataset/colon_detection.yml', '/colon_workspace/RT-DETR/rtdetrv2_pytorch/configs/runtime.yml', '/colon_workspace/RT-DETR/rtdetrv2_pytorch/configs/rtdetrv2/include/dataloader.yml', '/colon_workspace/RT-DETR/rtdetrv2_pytorch/configs/rtdetrv2/include/optimizer.yml'], 'model': 'RTDETR', 'criterion': 'RTDETRCriterionv2', 'postprocessor': 'RTDETRPostProcessor', 'use_focal_loss': True, 'eval_spatial_size': [640, 640], 'RTDETR': {'backbone': 'TResNetBackbone', 'encoder': 'HybridEncoder', 'decoder': 'RTDETRTransformerv2'}, 'TResNetBackbone': {'pretrained_path': '/colon_workspace/mtresnet_opim_86.72.pth', 'freeze_norm': False}, 'HybridEncoder': {'in_channels': [128, 1024, 2048], 'feat_strides': [4, 8, 16], 'hidden_dim': 384, 'use_encoder_idx': [2], 'num_encoder_layers': 1, 'nhead': 8, 'dim_feedforward': 2048, 'dropout': 0.0, 'enc_act': 'gelu', 'expansion': 1.0, 'depth_mult': 1, 'act': 'silu'}, 'RTDETRTransformerv2': {'feat_channels': [384, 384, 384], 'feat_strides': [4, 8, 16], 'hidden_dim': 256, 'num_levels': 3, 'num_layers': 6, 'num_queries': 300, 'num_denoising': 100, 'label_noise_ratio': 0.5, 'box_noise_scale': 1.0, 'eval_idx': -1, 'num_points': [4, 4, 4], 'cross_attn_method': 'default', 'query_select_method': 'default'}, 'RTDETRPostProcessor': {'num_top_queries': 300}, 'RTDETRCriterionv2': {'weight_dict': {'loss_vfl': 1, 'loss_bbox': 5, 'loss_giou': 2}, 'losses': ['vfl', 'boxes'], 'alpha': 0.75, 'gamma': 2.0, 'matcher': {'type': 'HungarianMatcher', 'weight_dict': {'cost_class': 2, 'cost_bbox': 5, 'cost_giou': 2}, 'alpha': 0.25, 'gamma': 2.0}}, 'config': '/colon_workspace/RT-DETR/rtdetrv2_pytorch/configs/rtdetrv2/rtdetrv2_tresnet_6x_colon.yml', 'tuning': '/colon_workspace/RT-DETR/rtdetrv2_pytorch/output/rtdetrv2_tresnet_6x_colon/checkpoint0001.pth', 'seed': 0, 'test_only': False, 'print_method': 'builtin', 'print_rank': 0}}
Start training
Initialized distributed mode...
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Initialized distributed mode...Initialized distributed mode...

Initialized distributed mode...
Initialized distributed mode...
Initialized distributed mode...
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Initialized distributed mode...
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Initialized distributed mode...
Initialized distributed mode...
Initialized distributed mode...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/nn/backbone/tresnet.py:170: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(pretrained_path)["model"]
Load 371 keys
tuning checkpoint from /colon_workspace/RT-DETR/rtdetrv2_pytorch/output/rtdetrv2_tresnet_6x_colon/checkpoint0001.pth
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/solver/_solver.py:155: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location='cpu')
Load model.state_dict, {'missed': [], 'unmatched': []}
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
Initial lr: [0.0004, 0.0004]
building train_dataloader with batch_size=4...
loading annotations into memory...
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
/colon_workspace/RT-DETR/rtdetrv2_pytorch/tools/../src/core/workspace.py:179: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  return module(**module_kwargs)
Done (t=0.99s)
creating index...
index created!
building val_dataloader with batch_size=8...
loading annotations into memory...
Done (t=0.06s)
creating index...
index created!
number of trainable parameters: 63146659
Epoch: [0]  [   0/1519]  eta: 5:20:02  lr: 0.000400  lr2: 0.000400  loss: 20.0659 (20.0659)  loss_bbox: 0.2919 (0.2919)  loss_bbox_aux_0: 0.2723 (0.2723)  loss_bbox_aux_1: 0.2593 (0.2593)  loss_bbox_aux_2: 0.2702 (0.2702)  loss_bbox_aux_3: 0.2522 (0.2522)  loss_bbox_aux_4: 0.2705 (0.2705)  loss_bbox_dn_0: 0.4020 (0.4020)  loss_bbox_dn_1: 0.3320 (0.3320)  loss_bbox_dn_2: 0.3243 (0.3243)  loss_bbox_dn_3: 0.3193 (0.3193)  loss_bbox_dn_4: 0.3248 (0.3248)  loss_bbox_dn_5: 0.3258 (0.3258)  loss_bbox_enc_0: 0.3354 (0.3354)  loss_giou: 0.5175 (0.5175)  loss_giou_aux_0: 0.5114 (0.5114)  loss_giou_aux_1: 0.4905 (0.4905)  loss_giou_aux_2: 0.5197 (0.5197)  loss_giou_aux_3: 0.5201 (0.5201)  loss_giou_aux_4: 0.5141 (0.5141)  loss_giou_dn_0: 0.6971 (0.6971)  loss_giou_dn_1: 0.5798 (0.5798)  loss_giou_dn_2: 0.5482 (0.5482)  loss_giou_dn_3: 0.5404 (0.5404)  loss_giou_dn_4: 0.5407 (0.5407)  loss_giou_dn_5: 0.5403 (0.5403)  loss_giou_enc_0: 0.6248 (0.6248)  loss_vfl: 0.7984 (0.7984)  loss_vfl_aux_0: 1.1003 (1.1003)  loss_vfl_aux_1: 1.0549 (1.0549)  loss_vfl_aux_2: 0.8871 (0.8871)  loss_vfl_aux_3: 0.8331 (0.8331)  loss_vfl_aux_4: 0.8344 (0.8344)  loss_vfl_dn_0: 0.4458 (0.4458)  loss_vfl_dn_1: 0.4130 (0.4130)  loss_vfl_dn_2: 0.3953 (0.3953)  loss_vfl_dn_3: 0.3918 (0.3918)  loss_vfl_dn_4: 0.3909 (0.3909)  loss_vfl_dn_5: 0.3913 (0.3913)  loss_vfl_enc_0: 1.0051 (1.0051)  time: 12.6418  data: 6.1698  max mem: 11562
Epoch: [0]  [ 100/1519]  eta: 0:22:49  lr: 0.000400  lr2: 0.000400  loss: 19.2577 (19.6257)  loss_bbox: 0.2399 (0.2365)  loss_bbox_aux_0: 0.2367 (0.2475)  loss_bbox_aux_1: 0.2287 (0.2358)  loss_bbox_aux_2: 0.2336 (0.2356)  loss_bbox_aux_3: 0.2342 (0.2353)  loss_bbox_aux_4: 0.2284 (0.2363)  loss_bbox_dn_0: 0.3973 (0.3875)  loss_bbox_dn_1: 0.3161 (0.3146)  loss_bbox_dn_2: 0.2943 (0.2957)  loss_bbox_dn_3: 0.2913 (0.2908)  loss_bbox_dn_4: 0.2899 (0.2896)  loss_bbox_dn_5: 0.2896 (0.2895)  loss_bbox_enc_0: 0.2849 (0.2984)  loss_giou: 0.4952 (0.5083)  loss_giou_aux_0: 0.5009 (0.5402)  loss_giou_aux_1: 0.4937 (0.5171)  loss_giou_aux_2: 0.4878 (0.5112)  loss_giou_aux_3: 0.4828 (0.5090)  loss_giou_aux_4: 0.4842 (0.5084)  loss_giou_dn_0: 0.6838 (0.7031)  loss_giou_dn_1: 0.5505 (0.5733)  loss_giou_dn_2: 0.5230 (0.5397)  loss_giou_dn_3: 0.5116 (0.5308)  loss_giou_dn_4: 0.5096 (0.5276)  loss_giou_dn_5: 0.5089 (0.5273)  loss_giou_enc_0: 0.5990 (0.6253)  loss_vfl: 0.7730 (0.8071)  loss_vfl_aux_0: 1.0621 (1.0709)  loss_vfl_aux_1: 0.9440 (0.9846)  loss_vfl_aux_2: 0.8733 (0.9057)  loss_vfl_aux_3: 0.8270 (0.8536)  loss_vfl_aux_4: 0.7873 (0.8163)  loss_vfl_dn_0: 0.4446 (0.4457)  loss_vfl_dn_1: 0.4039 (0.4076)  loss_vfl_dn_2: 0.3901 (0.3921)  loss_vfl_dn_3: 0.3858 (0.3882)  loss_vfl_dn_4: 0.3846 (0.3865)  loss_vfl_dn_5: 0.3839 (0.3863)  loss_vfl_enc_0: 1.0652 (1.0669)  time: 0.8104  data: 0.0100  max mem: 15225
Epoch: [0]  [ 200/1519]  eta: 0:19:35  lr: 0.000400  lr2: 0.000400  loss: 19.0450 (19.3593)  loss_bbox: 0.2305 (0.2341)  loss_bbox_aux_0: 0.2354 (0.2428)  loss_bbox_aux_1: 0.2179 (0.2311)  loss_bbox_aux_2: 0.2158 (0.2323)  loss_bbox_aux_3: 0.2262 (0.2338)  loss_bbox_aux_4: 0.2281 (0.2334)  loss_bbox_dn_0: 0.3662 (0.3864)  loss_bbox_dn_1: 0.2865 (0.3118)  loss_bbox_dn_2: 0.2635 (0.2931)  loss_bbox_dn_3: 0.2557 (0.2883)  loss_bbox_dn_4: 0.2548 (0.2871)  loss_bbox_dn_5: 0.2557 (0.2870)  loss_bbox_enc_0: 0.2701 (0.2930)  loss_giou: 0.4844 (0.4970)  loss_giou_aux_0: 0.4953 (0.5267)  loss_giou_aux_1: 0.4889 (0.5032)  loss_giou_aux_2: 0.4909 (0.4997)  loss_giou_aux_3: 0.4873 (0.4990)  loss_giou_aux_4: 0.4842 (0.4971)  loss_giou_dn_0: 0.6667 (0.6903)  loss_giou_dn_1: 0.5317 (0.5592)  loss_giou_dn_2: 0.5001 (0.5268)  loss_giou_dn_3: 0.4914 (0.5180)  loss_giou_dn_4: 0.4887 (0.5148)  loss_giou_dn_5: 0.4885 (0.5146)  loss_giou_enc_0: 0.5720 (0.6101)  loss_vfl: 0.8160 (0.7964)  loss_vfl_aux_0: 1.0390 (1.0612)  loss_vfl_aux_1: 0.9379 (0.9745)  loss_vfl_aux_2: 0.9207 (0.8932)  loss_vfl_aux_3: 0.8622 (0.8396)  loss_vfl_aux_4: 0.8416 (0.8073)  loss_vfl_dn_0: 0.4460 (0.4452)  loss_vfl_dn_1: 0.4039 (0.4060)  loss_vfl_dn_2: 0.3899 (0.3910)  loss_vfl_dn_3: 0.3856 (0.3870)  loss_vfl_dn_4: 0.3852 (0.3852)  loss_vfl_dn_5: 0.3836 (0.3851)  loss_vfl_enc_0: 1.0808 (1.0768)  time: 0.8113  data: 0.0099  max mem: 15225
Epoch: [0]  [ 300/1519]  eta: 0:17:44  lr: 0.000400  lr2: 0.000400  loss: 18.9606 (19.1498)  loss_bbox: 0.2262 (0.2307)  loss_bbox_aux_0: 0.2267 (0.2387)  loss_bbox_aux_1: 0.2247 (0.2274)  loss_bbox_aux_2: 0.2249 (0.2282)  loss_bbox_aux_3: 0.2257 (0.2301)  loss_bbox_aux_4: 0.2259 (0.2302)  loss_bbox_dn_0: 0.3595 (0.3806)  loss_bbox_dn_1: 0.3029 (0.3058)  loss_bbox_dn_2: 0.2767 (0.2874)  loss_bbox_dn_3: 0.2725 (0.2828)  loss_bbox_dn_4: 0.2696 (0.2817)  loss_bbox_dn_5: 0.2700 (0.2815)  loss_bbox_enc_0: 0.2841 (0.2877)  loss_giou: 0.4985 (0.4926)  loss_giou_aux_0: 0.5267 (0.5219)  loss_giou_aux_1: 0.5196 (0.4993)  loss_giou_aux_2: 0.5069 (0.4948)  loss_giou_aux_3: 0.5018 (0.4939)  loss_giou_aux_4: 0.4977 (0.4929)  loss_giou_dn_0: 0.6778 (0.6840)  loss_giou_dn_1: 0.5515 (0.5525)  loss_giou_dn_2: 0.5171 (0.5201)  loss_giou_dn_3: 0.5124 (0.5115)  loss_giou_dn_4: 0.5109 (0.5084)  loss_giou_dn_5: 0.5107 (0.5082)  loss_giou_enc_0: 0.6224 (0.6040)  loss_vfl: 0.7786 (0.7865)  loss_vfl_aux_0: 1.0289 (1.0482)  loss_vfl_aux_1: 0.9208 (0.9618)  loss_vfl_aux_2: 0.8542 (0.8836)  loss_vfl_aux_3: 0.8130 (0.8310)  loss_vfl_aux_4: 0.7780 (0.7972)  loss_vfl_dn_0: 0.4416 (0.4451)  loss_vfl_dn_1: 0.4032 (0.4049)  loss_vfl_dn_2: 0.3871 (0.3901)  loss_vfl_dn_3: 0.3820 (0.3860)  loss_vfl_dn_4: 0.3820 (0.3842)  loss_vfl_dn_5: 0.3818 (0.3841)  loss_vfl_enc_0: 1.0152 (1.0702)  time: 0.9201  data: 0.0109  max mem: 15225
Epoch: [0]  [ 400/1519]  eta: 0:16:00  lr: 0.000400  lr2: 0.000400  loss: 18.5833 (19.0376)  loss_bbox: 0.2208 (0.2289)  loss_bbox_aux_0: 0.2326 (0.2371)  loss_bbox_aux_1: 0.2161 (0.2255)  loss_bbox_aux_2: 0.2115 (0.2258)  loss_bbox_aux_3: 0.2157 (0.2271)  loss_bbox_aux_4: 0.2202 (0.2280)  loss_bbox_dn_0: 0.3883 (0.3815)  loss_bbox_dn_1: 0.3070 (0.3055)  loss_bbox_dn_2: 0.2906 (0.2870)  loss_bbox_dn_3: 0.2843 (0.2821)  loss_bbox_dn_4: 0.2852 (0.2809)  loss_bbox_dn_5: 0.2844 (0.2807)  loss_bbox_enc_0: 0.2832 (0.2874)  loss_giou: 0.4726 (0.4871)  loss_giou_aux_0: 0.5088 (0.5167)  loss_giou_aux_1: 0.4758 (0.4942)  loss_giou_aux_2: 0.4678 (0.4891)  loss_giou_aux_3: 0.4718 (0.4876)  loss_giou_aux_4: 0.4724 (0.4872)  loss_giou_dn_0: 0.6824 (0.6805)  loss_giou_dn_1: 0.5339 (0.5476)  loss_giou_dn_2: 0.5073 (0.5155)  loss_giou_dn_3: 0.4961 (0.5067)  loss_giou_dn_4: 0.4913 (0.5036)  loss_giou_dn_5: 0.4907 (0.5035)  loss_giou_enc_0: 0.5764 (0.5998)  loss_vfl: 0.7422 (0.7791)  loss_vfl_aux_0: 1.0333 (1.0432)  loss_vfl_aux_1: 0.9214 (0.9598)  loss_vfl_aux_2: 0.8491 (0.8821)  loss_vfl_aux_3: 0.7953 (0.8278)  loss_vfl_aux_4: 0.7469 (0.7912)  loss_vfl_dn_0: 0.4457 (0.4451)  loss_vfl_dn_1: 0.4010 (0.4041)  loss_vfl_dn_2: 0.3847 (0.3892)  loss_vfl_dn_3: 0.3790 (0.3850)  loss_vfl_dn_4: 0.3765 (0.3830)  loss_vfl_dn_5: 0.3781 (0.3828)  loss_vfl_enc_0: 1.0525 (1.0685)  time: 0.8085  data: 0.0100  max mem: 15225
Epoch: [0]  [ 500/1519]  eta: 0:14:26  lr: 0.000400  lr2: 0.000400  loss: 18.2631 (18.9656)  loss_bbox: 0.2021 (0.2275)  loss_bbox_aux_0: 0.2442 (0.2366)  loss_bbox_aux_1: 0.2177 (0.2246)  loss_bbox_aux_2: 0.2126 (0.2249)  loss_bbox_aux_3: 0.2111 (0.2263)  loss_bbox_aux_4: 0.2069 (0.2267)  loss_bbox_dn_0: 0.3883 (0.3800)  loss_bbox_dn_1: 0.2992 (0.3043)  loss_bbox_dn_2: 0.2795 (0.2860)  loss_bbox_dn_3: 0.2725 (0.2811)  loss_bbox_dn_4: 0.2705 (0.2798)  loss_bbox_dn_5: 0.2715 (0.2797)  loss_bbox_enc_0: 0.2779 (0.2863)  loss_giou: 0.4541 (0.4850)  loss_giou_aux_0: 0.5018 (0.5149)  loss_giou_aux_1: 0.4634 (0.4919)  loss_giou_aux_2: 0.4622 (0.4868)  loss_giou_aux_3: 0.4553 (0.4854)  loss_giou_aux_4: 0.4521 (0.4849)  loss_giou_dn_0: 0.6585 (0.6771)  loss_giou_dn_1: 0.5332 (0.5449)  loss_giou_dn_2: 0.5044 (0.5132)  loss_giou_dn_3: 0.4911 (0.5044)  loss_giou_dn_4: 0.4871 (0.5013)  loss_giou_dn_5: 0.4867 (0.5012)  loss_giou_enc_0: 0.5709 (0.5975)  loss_vfl: 0.7327 (0.7752)  loss_vfl_aux_0: 0.9685 (1.0361)  loss_vfl_aux_1: 0.9028 (0.9577)  loss_vfl_aux_2: 0.8172 (0.8790)  loss_vfl_aux_3: 0.7705 (0.8244)  loss_vfl_aux_4: 0.7420 (0.7877)  loss_vfl_dn_0: 0.4443 (0.4449)  loss_vfl_dn_1: 0.3995 (0.4036)  loss_vfl_dn_2: 0.3834 (0.3887)  loss_vfl_dn_3: 0.3786 (0.3845)  loss_vfl_dn_4: 0.3774 (0.3825)  loss_vfl_dn_5: 0.3783 (0.3824)  loss_vfl_enc_0: 1.0246 (1.0663)  time: 0.8102  data: 0.0104  max mem: 15225
Epoch: [0]  [ 600/1519]  eta: 0:12:55  lr: 0.000400  lr2: 0.000400  loss: 18.5766 (18.8872)  loss_bbox: 0.2261 (0.2268)  loss_bbox_aux_0: 0.2244 (0.2363)  loss_bbox_aux_1: 0.2190 (0.2241)  loss_bbox_aux_2: 0.2274 (0.2244)  loss_bbox_aux_3: 0.2202 (0.2256)  loss_bbox_aux_4: 0.2201 (0.2261)  loss_bbox_dn_0: 0.3700 (0.3772)  loss_bbox_dn_1: 0.2906 (0.3022)  loss_bbox_dn_2: 0.2734 (0.2842)  loss_bbox_dn_3: 0.2654 (0.2793)  loss_bbox_dn_4: 0.2629 (0.2781)  loss_bbox_dn_5: 0.2633 (0.2780)  loss_bbox_enc_0: 0.2821 (0.2862)  loss_giou: 0.4616 (0.4838)  loss_giou_aux_0: 0.4924 (0.5136)  loss_giou_aux_1: 0.4734 (0.4910)  loss_giou_aux_2: 0.4698 (0.4860)  loss_giou_aux_3: 0.4703 (0.4842)  loss_giou_aux_4: 0.4667 (0.4838)  loss_giou_dn_0: 0.6584 (0.6738)  loss_giou_dn_1: 0.5308 (0.5422)  loss_giou_dn_2: 0.4912 (0.5110)  loss_giou_dn_3: 0.4815 (0.5024)  loss_giou_dn_4: 0.4770 (0.4993)  loss_giou_dn_5: 0.4766 (0.4992)  loss_giou_enc_0: 0.5683 (0.5965)  loss_vfl: 0.7191 (0.7713)  loss_vfl_aux_0: 0.9705 (1.0272)  loss_vfl_aux_1: 0.8925 (0.9510)  loss_vfl_aux_2: 0.8327 (0.8734)  loss_vfl_aux_3: 0.7787 (0.8198)  loss_vfl_aux_4: 0.7495 (0.7831)  loss_vfl_dn_0: 0.4425 (0.4446)  loss_vfl_dn_1: 0.4004 (0.4031)  loss_vfl_dn_2: 0.3848 (0.3883)  loss_vfl_dn_3: 0.3802 (0.3841)  loss_vfl_dn_4: 0.3792 (0.3821)  loss_vfl_dn_5: 0.3785 (0.3820)  loss_vfl_enc_0: 1.0284 (1.0619)  time: 0.8054  data: 0.0108  max mem: 15225
Epoch: [0]  [ 700/1519]  eta: 0:11:31  lr: 0.000400  lr2: 0.000400  loss: 18.3052 (18.8396)  loss_bbox: 0.2126 (0.2262)  loss_bbox_aux_0: 0.2271 (0.2356)  loss_bbox_aux_1: 0.2022 (0.2235)  loss_bbox_aux_2: 0.2103 (0.2239)  loss_bbox_aux_3: 0.2131 (0.2250)  loss_bbox_aux_4: 0.2116 (0.2254)  loss_bbox_dn_0: 0.3516 (0.3747)  loss_bbox_dn_1: 0.2811 (0.3001)  loss_bbox_dn_2: 0.2613 (0.2823)  loss_bbox_dn_3: 0.2570 (0.2775)  loss_bbox_dn_4: 0.2556 (0.2764)  loss_bbox_dn_5: 0.2549 (0.2762)  loss_bbox_enc_0: 0.2713 (0.2856)  loss_giou: 0.4725 (0.4837)  loss_giou_aux_0: 0.5062 (0.5134)  loss_giou_aux_1: 0.4683 (0.4912)  loss_giou_aux_2: 0.4686 (0.4860)  loss_giou_aux_3: 0.4729 (0.4841)  loss_giou_aux_4: 0.4720 (0.4837)  loss_giou_dn_0: 0.6522 (0.6718)  loss_giou_dn_1: 0.5268 (0.5405)  loss_giou_dn_2: 0.4956 (0.5097)  loss_giou_dn_3: 0.4860 (0.5011)  loss_giou_dn_4: 0.4852 (0.4981)  loss_giou_dn_5: 0.4842 (0.4980)  loss_giou_enc_0: 0.5965 (0.5970)  loss_vfl: 0.7467 (0.7685)  loss_vfl_aux_0: 0.9652 (1.0231)  loss_vfl_aux_1: 0.9244 (0.9482)  loss_vfl_aux_2: 0.8607 (0.8700)  loss_vfl_aux_3: 0.7692 (0.8163)  loss_vfl_aux_4: 0.7715 (0.7804)  loss_vfl_dn_0: 0.4415 (0.4445)  loss_vfl_dn_1: 0.4014 (0.4030)  loss_vfl_dn_2: 0.3887 (0.3883)  loss_vfl_dn_3: 0.3859 (0.3841)  loss_vfl_dn_4: 0.3826 (0.3821)  loss_vfl_dn_5: 0.3827 (0.3820)  loss_vfl_enc_0: 1.0378 (1.0584)  time: 0.8097  data: 0.0102  max mem: 15225
Epoch: [0]  [ 800/1519]  eta: 0:10:04  lr: 0.000400  lr2: 0.000400  loss: 18.4876 (18.7805)  loss_bbox: 0.2093 (0.2252)  loss_bbox_aux_0: 0.2300 (0.2350)  loss_bbox_aux_1: 0.2092 (0.2225)  loss_bbox_aux_2: 0.2127 (0.2228)  loss_bbox_aux_3: 0.2084 (0.2239)  loss_bbox_aux_4: 0.2096 (0.2244)  loss_bbox_dn_0: 0.3434 (0.3727)  loss_bbox_dn_1: 0.2797 (0.2984)  loss_bbox_dn_2: 0.2619 (0.2807)  loss_bbox_dn_3: 0.2558 (0.2759)  loss_bbox_dn_4: 0.2574 (0.2748)  loss_bbox_dn_5: 0.2584 (0.2746)  loss_bbox_enc_0: 0.2801 (0.2850)  loss_giou: 0.4775 (0.4824)  loss_giou_aux_0: 0.5216 (0.5128)  loss_giou_aux_1: 0.4829 (0.4899)  loss_giou_aux_2: 0.4758 (0.4846)  loss_giou_aux_3: 0.4728 (0.4828)  loss_giou_aux_4: 0.4693 (0.4822)  loss_giou_dn_0: 0.6534 (0.6701)  loss_giou_dn_1: 0.5273 (0.5389)  loss_giou_dn_2: 0.4932 (0.5082)  loss_giou_dn_3: 0.4819 (0.4996)  loss_giou_dn_4: 0.4768 (0.4967)  loss_giou_dn_5: 0.4787 (0.4966)  loss_giou_enc_0: 0.5916 (0.5968)  loss_vfl: 0.7444 (0.7661)  loss_vfl_aux_0: 0.9668 (1.0178)  loss_vfl_aux_1: 0.9219 (0.9439)  loss_vfl_aux_2: 0.8100 (0.8661)  loss_vfl_aux_3: 0.7795 (0.8137)  loss_vfl_aux_4: 0.7542 (0.7783)  loss_vfl_dn_0: 0.4421 (0.4441)  loss_vfl_dn_1: 0.4014 (0.4025)  loss_vfl_dn_2: 0.3862 (0.3879)  loss_vfl_dn_3: 0.3806 (0.3837)  loss_vfl_dn_4: 0.3786 (0.3817)  loss_vfl_dn_5: 0.3786 (0.3815)  loss_vfl_enc_0: 1.0160 (1.0556)  time: 0.8254  data: 0.0110  max mem: 15225
Epoch: [0]  [ 900/1519]  eta: 0:08:39  lr: 0.000400  lr2: 0.000400  loss: 17.7453 (18.6957)  loss_bbox: 0.2092 (0.2244)  loss_bbox_aux_0: 0.2236 (0.2338)  loss_bbox_aux_1: 0.2054 (0.2214)  loss_bbox_aux_2: 0.2088 (0.2221)  loss_bbox_aux_3: 0.2063 (0.2232)  loss_bbox_aux_4: 0.2046 (0.2236)  loss_bbox_dn_0: 0.3658 (0.3705)  loss_bbox_dn_1: 0.2888 (0.2966)  loss_bbox_dn_2: 0.2619 (0.2788)  loss_bbox_dn_3: 0.2515 (0.2740)  loss_bbox_dn_4: 0.2473 (0.2728)  loss_bbox_dn_5: 0.2472 (0.2727)  loss_bbox_enc_0: 0.2733 (0.2838)  loss_giou: 0.4526 (0.4807)  loss_giou_aux_0: 0.4963 (0.5110)  loss_giou_aux_1: 0.4695 (0.4879)  loss_giou_aux_2: 0.4700 (0.4829)  loss_giou_aux_3: 0.4581 (0.4810)  loss_giou_aux_4: 0.4529 (0.4805)  loss_giou_dn_0: 0.6441 (0.6669)  loss_giou_dn_1: 0.5114 (0.5363)  loss_giou_dn_2: 0.4850 (0.5056)  loss_giou_dn_3: 0.4761 (0.4971)  loss_giou_dn_4: 0.4744 (0.4942)  loss_giou_dn_5: 0.4743 (0.4941)  loss_giou_enc_0: 0.5634 (0.5952)  loss_vfl: 0.7258 (0.7612)  loss_vfl_aux_0: 0.9498 (1.0116)  loss_vfl_aux_1: 0.8916 (0.9384)  loss_vfl_aux_2: 0.8028 (0.8601)  loss_vfl_aux_3: 0.7615 (0.8082)  loss_vfl_aux_4: 0.7199 (0.7734)  loss_vfl_dn_0: 0.4422 (0.4438)  loss_vfl_dn_1: 0.3966 (0.4019)  loss_vfl_dn_2: 0.3828 (0.3874)  loss_vfl_dn_3: 0.3780 (0.3832)  loss_vfl_dn_4: 0.3753 (0.3812)  loss_vfl_dn_5: 0.3759 (0.3810)  loss_vfl_enc_0: 1.0513 (1.0533)  time: 0.8232  data: 0.0096  max mem: 15225
Epoch: [0]  [1000/1519]  eta: 0:07:15  lr: 0.000400  lr2: 0.000400  loss: 18.0214 (18.6518)  loss_bbox: 0.2200 (0.2241)  loss_bbox_aux_0: 0.2216 (0.2331)  loss_bbox_aux_1: 0.2185 (0.2208)  loss_bbox_aux_2: 0.2114 (0.2216)  loss_bbox_aux_3: 0.2220 (0.2229)  loss_bbox_aux_4: 0.2197 (0.2232)  loss_bbox_dn_0: 0.3800 (0.3695)  loss_bbox_dn_1: 0.2929 (0.2955)  loss_bbox_dn_2: 0.2764 (0.2777)  loss_bbox_dn_3: 0.2708 (0.2730)  loss_bbox_dn_4: 0.2707 (0.2719)  loss_bbox_dn_5: 0.2705 (0.2718)  loss_bbox_enc_0: 0.2881 (0.2833)  loss_giou: 0.4505 (0.4798)  loss_giou_aux_0: 0.4726 (0.5100)  loss_giou_aux_1: 0.4541 (0.4869)  loss_giou_aux_2: 0.4467 (0.4819)  loss_giou_aux_3: 0.4478 (0.4801)  loss_giou_aux_4: 0.4479 (0.4796)  loss_giou_dn_0: 0.6382 (0.6655)  loss_giou_dn_1: 0.5073 (0.5349)  loss_giou_dn_2: 0.4782 (0.5042)  loss_giou_dn_3: 0.4698 (0.4958)  loss_giou_dn_4: 0.4663 (0.4930)  loss_giou_dn_5: 0.4656 (0.4929)  loss_giou_enc_0: 0.5753 (0.5941)  loss_vfl: 0.7511 (0.7581)  loss_vfl_aux_0: 0.9998 (1.0093)  loss_vfl_aux_1: 0.9297 (0.9363)  loss_vfl_aux_2: 0.8508 (0.8575)  loss_vfl_aux_3: 0.8071 (0.8052)  loss_vfl_aux_4: 0.7533 (0.7703)  loss_vfl_dn_0: 0.4448 (0.4436)  loss_vfl_dn_1: 0.3973 (0.4017)  loss_vfl_dn_2: 0.3815 (0.3870)  loss_vfl_dn_3: 0.3764 (0.3828)  loss_vfl_dn_4: 0.3743 (0.3808)  loss_vfl_dn_5: 0.3733 (0.3806)  loss_vfl_enc_0: 1.0460 (1.0515)  time: 0.8152  data: 0.0097  max mem: 15225
Epoch: [0]  [1100/1519]  eta: 0:05:51  lr: 0.000400  lr2: 0.000400  loss: 17.8160 (18.5845)  loss_bbox: 0.1954 (0.2229)  loss_bbox_aux_0: 0.2157 (0.2318)  loss_bbox_aux_1: 0.2097 (0.2197)  loss_bbox_aux_2: 0.2041 (0.2206)  loss_bbox_aux_3: 0.2001 (0.2219)  loss_bbox_aux_4: 0.1940 (0.2221)  loss_bbox_dn_0: 0.3547 (0.3681)  loss_bbox_dn_1: 0.2744 (0.2942)  loss_bbox_dn_2: 0.2580 (0.2763)  loss_bbox_dn_3: 0.2529 (0.2716)  loss_bbox_dn_4: 0.2512 (0.2704)  loss_bbox_dn_5: 0.2507 (0.2703)  loss_bbox_enc_0: 0.2771 (0.2828)  loss_giou: 0.4546 (0.4780)  loss_giou_aux_0: 0.5045 (0.5083)  loss_giou_aux_1: 0.4720 (0.4851)  loss_giou_aux_2: 0.4568 (0.4801)  loss_giou_aux_3: 0.4552 (0.4784)  loss_giou_aux_4: 0.4557 (0.4777)  loss_giou_dn_0: 0.6360 (0.6628)  loss_giou_dn_1: 0.4939 (0.5324)  loss_giou_dn_2: 0.4619 (0.5017)  loss_giou_dn_3: 0.4529 (0.4934)  loss_giou_dn_4: 0.4502 (0.4905)  loss_giou_dn_5: 0.4500 (0.4904)  loss_giou_enc_0: 0.5812 (0.5931)  loss_vfl: 0.7075 (0.7540)  loss_vfl_aux_0: 0.9794 (1.0069)  loss_vfl_aux_1: 0.8767 (0.9347)  loss_vfl_aux_2: 0.7991 (0.8544)  loss_vfl_aux_3: 0.7493 (0.8009)  loss_vfl_aux_4: 0.7227 (0.7663)  loss_vfl_dn_0: 0.4395 (0.4433)  loss_vfl_dn_1: 0.3964 (0.4014)  loss_vfl_dn_2: 0.3802 (0.3865)  loss_vfl_dn_3: 0.3750 (0.3823)  loss_vfl_dn_4: 0.3737 (0.3803)  loss_vfl_dn_5: 0.3736 (0.3801)  loss_vfl_enc_0: 1.0215 (1.0487)  time: 0.8137  data: 0.0108  max mem: 15225
Epoch: [0]  [1200/1519]  eta: 0:04:26  lr: 0.000400  lr2: 0.000400  loss: 17.8874 (18.5348)  loss_bbox: 0.1991 (0.2223)  loss_bbox_aux_0: 0.2114 (0.2309)  loss_bbox_aux_1: 0.2066 (0.2189)  loss_bbox_aux_2: 0.2077 (0.2199)  loss_bbox_aux_3: 0.2039 (0.2213)  loss_bbox_aux_4: 0.2002 (0.2215)  loss_bbox_dn_0: 0.3645 (0.3667)  loss_bbox_dn_1: 0.2879 (0.2930)  loss_bbox_dn_2: 0.2660 (0.2751)  loss_bbox_dn_3: 0.2646 (0.2704)  loss_bbox_dn_4: 0.2651 (0.2692)  loss_bbox_dn_5: 0.2650 (0.2691)  loss_bbox_enc_0: 0.2690 (0.2819)  loss_giou: 0.4362 (0.4769)  loss_giou_aux_0: 0.4727 (0.5069)  loss_giou_aux_1: 0.4527 (0.4839)  loss_giou_aux_2: 0.4452 (0.4789)  loss_giou_aux_3: 0.4406 (0.4772)  loss_giou_aux_4: 0.4363 (0.4766)  loss_giou_dn_0: 0.6420 (0.6613)  loss_giou_dn_1: 0.5102 (0.5310)  loss_giou_dn_2: 0.4771 (0.5004)  loss_giou_dn_3: 0.4695 (0.4921)  loss_giou_dn_4: 0.4661 (0.4893)  loss_giou_dn_5: 0.4674 (0.4892)  loss_giou_enc_0: 0.5595 (0.5918)  loss_vfl: 0.7578 (0.7512)  loss_vfl_aux_0: 0.9649 (1.0039)  loss_vfl_aux_1: 0.9132 (0.9321)  loss_vfl_aux_2: 0.8259 (0.8512)  loss_vfl_aux_3: 0.7793 (0.7977)  loss_vfl_aux_4: 0.7622 (0.7634)  loss_vfl_dn_0: 0.4439 (0.4432)  loss_vfl_dn_1: 0.4017 (0.4011)  loss_vfl_dn_2: 0.3816 (0.3862)  loss_vfl_dn_3: 0.3789 (0.3820)  loss_vfl_dn_4: 0.3778 (0.3800)  loss_vfl_dn_5: 0.3770 (0.3798)  loss_vfl_enc_0: 1.0369 (1.0472)  time: 0.8160  data: 0.0105  max mem: 15225
Epoch: [0]  [1300/1519]  eta: 0:03:03  lr: 0.000400  lr2: 0.000400  loss: 17.9202 (18.4901)  loss_bbox: 0.2040 (0.2213)  loss_bbox_aux_0: 0.2174 (0.2300)  loss_bbox_aux_1: 0.1972 (0.2181)  loss_bbox_aux_2: 0.2007 (0.2190)  loss_bbox_aux_3: 0.2022 (0.2203)  loss_bbox_aux_4: 0.2019 (0.2205)  loss_bbox_dn_0: 0.3154 (0.3652)  loss_bbox_dn_1: 0.2484 (0.2915)  loss_bbox_dn_2: 0.2377 (0.2736)  loss_bbox_dn_3: 0.2326 (0.2689)  loss_bbox_dn_4: 0.2318 (0.2677)  loss_bbox_dn_5: 0.2302 (0.2676)  loss_bbox_enc_0: 0.2562 (0.2807)  loss_giou: 0.4651 (0.4760)  loss_giou_aux_0: 0.5105 (0.5062)  loss_giou_aux_1: 0.4811 (0.4830)  loss_giou_aux_2: 0.4689 (0.4780)  loss_giou_aux_3: 0.4744 (0.4763)  loss_giou_aux_4: 0.4721 (0.4757)  loss_giou_dn_0: 0.6473 (0.6603)  loss_giou_dn_1: 0.5153 (0.5298)  loss_giou_dn_2: 0.4863 (0.4993)  loss_giou_dn_3: 0.4797 (0.4909)  loss_giou_dn_4: 0.4765 (0.4881)  loss_giou_dn_5: 0.4760 (0.4880)  loss_giou_enc_0: 0.5738 (0.5905)  loss_vfl: 0.7476 (0.7490)  loss_vfl_aux_0: 1.0094 (1.0020)  loss_vfl_aux_1: 0.9288 (0.9302)  loss_vfl_aux_2: 0.8443 (0.8489)  loss_vfl_aux_3: 0.7735 (0.7953)  loss_vfl_aux_4: 0.7624 (0.7614)  loss_vfl_dn_0: 0.4503 (0.4432)  loss_vfl_dn_1: 0.4005 (0.4009)  loss_vfl_dn_2: 0.3866 (0.3860)  loss_vfl_dn_3: 0.3814 (0.3818)  loss_vfl_dn_4: 0.3798 (0.3798)  loss_vfl_dn_5: 0.3790 (0.3796)  loss_vfl_enc_0: 0.9949 (1.0452)  time: 0.8076  data: 0.0096  max mem: 15225
Epoch: [0]  [1400/1519]  eta: 0:01:39  lr: 0.000400  lr2: 0.000400  loss: 18.1970 (18.4590)  loss_bbox: 0.2276 (0.2206)  loss_bbox_aux_0: 0.2161 (0.2294)  loss_bbox_aux_1: 0.2105 (0.2173)  loss_bbox_aux_2: 0.2205 (0.2182)  loss_bbox_aux_3: 0.2246 (0.2196)  loss_bbox_aux_4: 0.2248 (0.2198)  loss_bbox_dn_0: 0.3312 (0.3636)  loss_bbox_dn_1: 0.2788 (0.2901)  loss_bbox_dn_2: 0.2526 (0.2724)  loss_bbox_dn_3: 0.2488 (0.2677)  loss_bbox_dn_4: 0.2487 (0.2665)  loss_bbox_dn_5: 0.2489 (0.2664)  loss_bbox_enc_0: 0.2705 (0.2798)  loss_giou: 0.4728 (0.4754)  loss_giou_aux_0: 0.5031 (0.5056)  loss_giou_aux_1: 0.4859 (0.4823)  loss_giou_aux_2: 0.4819 (0.4772)  loss_giou_aux_3: 0.4790 (0.4756)  loss_giou_aux_4: 0.4738 (0.4750)  loss_giou_dn_0: 0.6582 (0.6589)  loss_giou_dn_1: 0.5248 (0.5286)  loss_giou_dn_2: 0.5003 (0.4982)  loss_giou_dn_3: 0.4915 (0.4899)  loss_giou_dn_4: 0.4910 (0.4872)  loss_giou_dn_5: 0.4907 (0.4871)  loss_giou_enc_0: 0.5840 (0.5898)  loss_vfl: 0.7011 (0.7471)  loss_vfl_aux_0: 0.9774 (1.0027)  loss_vfl_aux_1: 0.9398 (0.9325)  loss_vfl_aux_2: 0.8202 (0.8483)  loss_vfl_aux_3: 0.7477 (0.7937)  loss_vfl_aux_4: 0.7086 (0.7596)  loss_vfl_dn_0: 0.4397 (0.4432)  loss_vfl_dn_1: 0.3998 (0.4008)  loss_vfl_dn_2: 0.3818 (0.3858)  loss_vfl_dn_3: 0.3777 (0.3816)  loss_vfl_dn_4: 0.3763 (0.3796)  loss_vfl_dn_5: 0.3767 (0.3793)  loss_vfl_enc_0: 1.0140 (1.0425)  time: 0.8046  data: 0.0098  max mem: 15225
Epoch: [0]  [1500/1519]  eta: 0:00:15  lr: 0.000400  lr2: 0.000400  loss: 16.9994 (18.4079)  loss_bbox: 0.1930 (0.2201)  loss_bbox_aux_0: 0.2117 (0.2287)  loss_bbox_aux_1: 0.1947 (0.2167)  loss_bbox_aux_2: 0.1898 (0.2177)  loss_bbox_aux_3: 0.1880 (0.2189)  loss_bbox_aux_4: 0.1886 (0.2192)  loss_bbox_dn_0: 0.3198 (0.3620)  loss_bbox_dn_1: 0.2478 (0.2888)  loss_bbox_dn_2: 0.2354 (0.2710)  loss_bbox_dn_3: 0.2324 (0.2663)  loss_bbox_dn_4: 0.2328 (0.2651)  loss_bbox_dn_5: 0.2320 (0.2650)  loss_bbox_enc_0: 0.2676 (0.2792)  loss_giou: 0.4320 (0.4743)  loss_giou_aux_0: 0.4736 (0.5049)  loss_giou_aux_1: 0.4479 (0.4812)  loss_giou_aux_2: 0.4381 (0.4762)  loss_giou_aux_3: 0.4465 (0.4745)  loss_giou_aux_4: 0.4306 (0.4739)  loss_giou_dn_0: 0.6244 (0.6572)  loss_giou_dn_1: 0.4925 (0.5269)  loss_giou_dn_2: 0.4553 (0.4965)  loss_giou_dn_3: 0.4434 (0.4882)  loss_giou_dn_4: 0.4402 (0.4854)  loss_giou_dn_5: 0.4391 (0.4853)  loss_giou_enc_0: 0.5759 (0.5891)  loss_vfl: 0.6911 (0.7443)  loss_vfl_aux_0: 0.9414 (0.9998)  loss_vfl_aux_1: 0.8637 (0.9299)  loss_vfl_aux_2: 0.7923 (0.8454)  loss_vfl_aux_3: 0.7427 (0.7907)  loss_vfl_aux_4: 0.7060 (0.7568)  loss_vfl_dn_0: 0.4403 (0.4431)  loss_vfl_dn_1: 0.3938 (0.4006)  loss_vfl_dn_2: 0.3795 (0.3855)  loss_vfl_dn_3: 0.3749 (0.3812)  loss_vfl_dn_4: 0.3733 (0.3793)  loss_vfl_dn_5: 0.3726 (0.3790)  loss_vfl_enc_0: 1.0005 (1.0400)  time: 0.7915  data: 0.0092  max mem: 15225
Epoch: [0]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 17.8897 (18.4034)  loss_bbox: 0.2195 (0.2200)  loss_bbox_aux_0: 0.2137 (0.2286)  loss_bbox_aux_1: 0.2068 (0.2166)  loss_bbox_aux_2: 0.2122 (0.2176)  loss_bbox_aux_3: 0.2120 (0.2189)  loss_bbox_aux_4: 0.2102 (0.2192)  loss_bbox_dn_0: 0.3518 (0.3621)  loss_bbox_dn_1: 0.2750 (0.2888)  loss_bbox_dn_2: 0.2592 (0.2710)  loss_bbox_dn_3: 0.2569 (0.2663)  loss_bbox_dn_4: 0.2555 (0.2652)  loss_bbox_dn_5: 0.2546 (0.2650)  loss_bbox_enc_0: 0.2722 (0.2792)  loss_giou: 0.4541 (0.4742)  loss_giou_aux_0: 0.4810 (0.5047)  loss_giou_aux_1: 0.4688 (0.4811)  loss_giou_aux_2: 0.4492 (0.4760)  loss_giou_aux_3: 0.4613 (0.4743)  loss_giou_aux_4: 0.4538 (0.4737)  loss_giou_dn_0: 0.6357 (0.6570)  loss_giou_dn_1: 0.5107 (0.5266)  loss_giou_dn_2: 0.4780 (0.4962)  loss_giou_dn_3: 0.4715 (0.4879)  loss_giou_dn_4: 0.4680 (0.4852)  loss_giou_dn_5: 0.4682 (0.4851)  loss_giou_enc_0: 0.5666 (0.5889)  loss_vfl: 0.7246 (0.7440)  loss_vfl_aux_0: 0.9804 (0.9996)  loss_vfl_aux_1: 0.8824 (0.9294)  loss_vfl_aux_2: 0.8297 (0.8451)  loss_vfl_aux_3: 0.7639 (0.7905)  loss_vfl_aux_4: 0.7440 (0.7566)  loss_vfl_dn_0: 0.4407 (0.4431)  loss_vfl_dn_1: 0.3984 (0.4006)  loss_vfl_dn_2: 0.3822 (0.3854)  loss_vfl_dn_3: 0.3785 (0.3812)  loss_vfl_dn_4: 0.3770 (0.3792)  loss_vfl_dn_5: 0.3758 (0.3790)  loss_vfl_enc_0: 1.0401 (1.0402)  time: 0.7766  data: 0.0092  max mem: 15225
Epoch: [0] Total time: 0:21:05 (0.8333 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 17.8897 (18.4034)  loss_bbox: 0.2195 (0.2200)  loss_bbox_aux_0: 0.2137 (0.2286)  loss_bbox_aux_1: 0.2068 (0.2166)  loss_bbox_aux_2: 0.2122 (0.2176)  loss_bbox_aux_3: 0.2120 (0.2189)  loss_bbox_aux_4: 0.2102 (0.2192)  loss_bbox_dn_0: 0.3518 (0.3621)  loss_bbox_dn_1: 0.2750 (0.2888)  loss_bbox_dn_2: 0.2592 (0.2710)  loss_bbox_dn_3: 0.2569 (0.2663)  loss_bbox_dn_4: 0.2555 (0.2652)  loss_bbox_dn_5: 0.2546 (0.2650)  loss_bbox_enc_0: 0.2722 (0.2792)  loss_giou: 0.4541 (0.4742)  loss_giou_aux_0: 0.4810 (0.5047)  loss_giou_aux_1: 0.4688 (0.4811)  loss_giou_aux_2: 0.4492 (0.4760)  loss_giou_aux_3: 0.4613 (0.4743)  loss_giou_aux_4: 0.4538 (0.4737)  loss_giou_dn_0: 0.6357 (0.6570)  loss_giou_dn_1: 0.5107 (0.5266)  loss_giou_dn_2: 0.4780 (0.4962)  loss_giou_dn_3: 0.4715 (0.4879)  loss_giou_dn_4: 0.4680 (0.4852)  loss_giou_dn_5: 0.4682 (0.4851)  loss_giou_enc_0: 0.5666 (0.5889)  loss_vfl: 0.7246 (0.7440)  loss_vfl_aux_0: 0.9804 (0.9996)  loss_vfl_aux_1: 0.8824 (0.9294)  loss_vfl_aux_2: 0.8297 (0.8451)  loss_vfl_aux_3: 0.7639 (0.7905)  loss_vfl_aux_4: 0.7440 (0.7566)  loss_vfl_dn_0: 0.4407 (0.4431)  loss_vfl_dn_1: 0.3984 (0.4006)  loss_vfl_dn_2: 0.3822 (0.3854)  loss_vfl_dn_3: 0.3785 (0.3812)  loss_vfl_dn_4: 0.3770 (0.3792)  loss_vfl_dn_5: 0.3758 (0.3790)  loss_vfl_enc_0: 1.0401 (1.0402)
Test:  [ 0/75]  eta: 0:03:29    time: 2.7868  data: 1.8887  max mem: 15225
Test:  [10/75]  eta: 0:00:50    time: 0.7803  data: 0.1875  max mem: 15225
Test:  [20/75]  eta: 0:00:39    time: 0.6159  data: 0.0238  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6170  data: 0.0221  max mem: 15225
Test:  [40/75]  eta: 0:00:22    time: 0.5870  data: 0.0230  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6096  data: 0.0302  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.6002  data: 0.0213  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.6002  data: 0.0175  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5941  data: 0.0188  max mem: 15225
Test: Total time: 0:00:47 (0.6322 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=12.25s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.418
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.645
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.466
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.161
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.406
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.548
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.644
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.526
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.653
best_stat: {'epoch': 0, 'coco_eval_bbox': 0.4178408010498982}
Epoch: [1]  [   0/1519]  eta: 2:50:35  lr: 0.000400  lr2: 0.000400  loss: 17.7742 (17.7742)  loss_bbox: 0.1623 (0.1623)  loss_bbox_aux_0: 0.1829 (0.1829)  loss_bbox_aux_1: 0.1884 (0.1884)  loss_bbox_aux_2: 0.1764 (0.1764)  loss_bbox_aux_3: 0.1663 (0.1663)  loss_bbox_aux_4: 0.1629 (0.1629)  loss_bbox_dn_0: 0.3187 (0.3187)  loss_bbox_dn_1: 0.2409 (0.2409)  loss_bbox_dn_2: 0.2134 (0.2134)  loss_bbox_dn_3: 0.2092 (0.2092)  loss_bbox_dn_4: 0.2056 (0.2056)  loss_bbox_dn_5: 0.2046 (0.2046)  loss_bbox_enc_0: 0.2519 (0.2519)  loss_giou: 0.4615 (0.4615)  loss_giou_aux_0: 0.4771 (0.4771)  loss_giou_aux_1: 0.4675 (0.4675)  loss_giou_aux_2: 0.4668 (0.4668)  loss_giou_aux_3: 0.4647 (0.4647)  loss_giou_aux_4: 0.4623 (0.4623)  loss_giou_dn_0: 0.6787 (0.6787)  loss_giou_dn_1: 0.5328 (0.5328)  loss_giou_dn_2: 0.4934 (0.4934)  loss_giou_dn_3: 0.4866 (0.4866)  loss_giou_dn_4: 0.4844 (0.4844)  loss_giou_dn_5: 0.4843 (0.4843)  loss_giou_enc_0: 0.5549 (0.5549)  loss_vfl: 0.7082 (0.7082)  loss_vfl_aux_0: 1.0282 (1.0282)  loss_vfl_aux_1: 1.0202 (1.0202)  loss_vfl_aux_2: 0.8540 (0.8540)  loss_vfl_aux_3: 0.7677 (0.7677)  loss_vfl_aux_4: 0.7340 (0.7340)  loss_vfl_dn_0: 0.4487 (0.4487)  loss_vfl_dn_1: 0.4094 (0.4094)  loss_vfl_dn_2: 0.3898 (0.3898)  loss_vfl_dn_3: 0.3849 (0.3849)  loss_vfl_dn_4: 0.3828 (0.3828)  loss_vfl_dn_5: 0.3815 (0.3815)  loss_vfl_enc_0: 1.0660 (1.0660)  time: 6.7385  data: 5.8370  max mem: 15225
Epoch: [1]  [ 100/1519]  eta: 0:21:25  lr: 0.000400  lr2: 0.000400  loss: 17.8532 (17.6193)  loss_bbox: 0.2174 (0.2182)  loss_bbox_aux_0: 0.2295 (0.2217)  loss_bbox_aux_1: 0.2274 (0.2134)  loss_bbox_aux_2: 0.2239 (0.2153)  loss_bbox_aux_3: 0.2244 (0.2172)  loss_bbox_aux_4: 0.2209 (0.2186)  loss_bbox_dn_0: 0.3705 (0.3415)  loss_bbox_dn_1: 0.2909 (0.2716)  loss_bbox_dn_2: 0.2667 (0.2544)  loss_bbox_dn_3: 0.2629 (0.2493)  loss_bbox_dn_4: 0.2612 (0.2481)  loss_bbox_dn_5: 0.2616 (0.2479)  loss_bbox_enc_0: 0.2821 (0.2749)  loss_giou: 0.4874 (0.4695)  loss_giou_aux_0: 0.5129 (0.4981)  loss_giou_aux_1: 0.4933 (0.4787)  loss_giou_aux_2: 0.5018 (0.4728)  loss_giou_aux_3: 0.4705 (0.4702)  loss_giou_aux_4: 0.4893 (0.4711)  loss_giou_dn_0: 0.6451 (0.6276)  loss_giou_dn_1: 0.5082 (0.5006)  loss_giou_dn_2: 0.4807 (0.4731)  loss_giou_dn_3: 0.4744 (0.4654)  loss_giou_dn_4: 0.4762 (0.4628)  loss_giou_dn_5: 0.4760 (0.4627)  loss_giou_enc_0: 0.5955 (0.5871)  loss_vfl: 0.6621 (0.6869)  loss_vfl_aux_0: 0.9236 (0.9379)  loss_vfl_aux_1: 0.8185 (0.8483)  loss_vfl_aux_2: 0.7707 (0.7765)  loss_vfl_aux_3: 0.7051 (0.7252)  loss_vfl_aux_4: 0.6799 (0.6941)  loss_vfl_dn_0: 0.4356 (0.4395)  loss_vfl_dn_1: 0.3958 (0.3943)  loss_vfl_dn_2: 0.3798 (0.3797)  loss_vfl_dn_3: 0.3755 (0.3754)  loss_vfl_dn_4: 0.3740 (0.3735)  loss_vfl_dn_5: 0.3750 (0.3729)  loss_vfl_enc_0: 0.9782 (0.9831)  time: 0.8542  data: 0.0102  max mem: 15225
Epoch: [1]  [ 200/1519]  eta: 0:19:04  lr: 0.000400  lr2: 0.000400  loss: 17.5731 (17.6860)  loss_bbox: 0.2007 (0.2148)  loss_bbox_aux_0: 0.2135 (0.2232)  loss_bbox_aux_1: 0.1963 (0.2139)  loss_bbox_aux_2: 0.2057 (0.2130)  loss_bbox_aux_3: 0.2042 (0.2132)  loss_bbox_aux_4: 0.2034 (0.2149)  loss_bbox_dn_0: 0.3356 (0.3466)  loss_bbox_dn_1: 0.2668 (0.2756)  loss_bbox_dn_2: 0.2531 (0.2577)  loss_bbox_dn_3: 0.2415 (0.2525)  loss_bbox_dn_4: 0.2387 (0.2512)  loss_bbox_dn_5: 0.2386 (0.2511)  loss_bbox_enc_0: 0.2766 (0.2784)  loss_giou: 0.4334 (0.4619)  loss_giou_aux_0: 0.4562 (0.4928)  loss_giou_aux_1: 0.4400 (0.4728)  loss_giou_aux_2: 0.4403 (0.4652)  loss_giou_aux_3: 0.4327 (0.4621)  loss_giou_aux_4: 0.4325 (0.4631)  loss_giou_dn_0: 0.6242 (0.6299)  loss_giou_dn_1: 0.4967 (0.5026)  loss_giou_dn_2: 0.4608 (0.4732)  loss_giou_dn_3: 0.4539 (0.4650)  loss_giou_dn_4: 0.4502 (0.4623)  loss_giou_dn_5: 0.4491 (0.4621)  loss_giou_enc_0: 0.5640 (0.5841)  loss_vfl: 0.7100 (0.6977)  loss_vfl_aux_0: 1.0066 (0.9506)  loss_vfl_aux_1: 0.9124 (0.8697)  loss_vfl_aux_2: 0.8177 (0.7943)  loss_vfl_aux_3: 0.7613 (0.7420)  loss_vfl_aux_4: 0.7191 (0.7071)  loss_vfl_dn_0: 0.4397 (0.4400)  loss_vfl_dn_1: 0.3969 (0.3958)  loss_vfl_dn_2: 0.3762 (0.3801)  loss_vfl_dn_3: 0.3734 (0.3760)  loss_vfl_dn_4: 0.3708 (0.3739)  loss_vfl_dn_5: 0.3703 (0.3735)  loss_vfl_enc_0: 0.9734 (0.9822)  time: 0.8246  data: 0.0095  max mem: 15225
Epoch: [1]  [ 300/1519]  eta: 0:17:32  lr: 0.000400  lr2: 0.000400  loss: 17.5712 (17.6728)  loss_bbox: 0.2097 (0.2141)  loss_bbox_aux_0: 0.2290 (0.2244)  loss_bbox_aux_1: 0.2081 (0.2124)  loss_bbox_aux_2: 0.2078 (0.2115)  loss_bbox_aux_3: 0.2048 (0.2115)  loss_bbox_aux_4: 0.2031 (0.2137)  loss_bbox_dn_0: 0.3463 (0.3470)  loss_bbox_dn_1: 0.2681 (0.2761)  loss_bbox_dn_2: 0.2518 (0.2583)  loss_bbox_dn_3: 0.2443 (0.2533)  loss_bbox_dn_4: 0.2434 (0.2521)  loss_bbox_dn_5: 0.2440 (0.2519)  loss_bbox_enc_0: 0.2718 (0.2767)  loss_giou: 0.4418 (0.4584)  loss_giou_aux_0: 0.4863 (0.4923)  loss_giou_aux_1: 0.4680 (0.4691)  loss_giou_aux_2: 0.4588 (0.4613)  loss_giou_aux_3: 0.4422 (0.4576)  loss_giou_aux_4: 0.4349 (0.4588)  loss_giou_dn_0: 0.6244 (0.6282)  loss_giou_dn_1: 0.4962 (0.5010)  loss_giou_dn_2: 0.4657 (0.4716)  loss_giou_dn_3: 0.4554 (0.4634)  loss_giou_dn_4: 0.4524 (0.4608)  loss_giou_dn_5: 0.4528 (0.4606)  loss_giou_enc_0: 0.5603 (0.5792)  loss_vfl: 0.7115 (0.6997)  loss_vfl_aux_0: 0.9294 (0.9492)  loss_vfl_aux_1: 0.8403 (0.8782)  loss_vfl_aux_2: 0.7983 (0.7976)  loss_vfl_aux_3: 0.7588 (0.7467)  loss_vfl_aux_4: 0.7291 (0.7098)  loss_vfl_dn_0: 0.4409 (0.4402)  loss_vfl_dn_1: 0.3941 (0.3956)  loss_vfl_dn_2: 0.3790 (0.3799)  loss_vfl_dn_3: 0.3756 (0.3757)  loss_vfl_dn_4: 0.3728 (0.3737)  loss_vfl_dn_5: 0.3721 (0.3733)  loss_vfl_enc_0: 0.9820 (0.9881)  time: 0.8330  data: 0.0097  max mem: 15225
Epoch: [1]  [ 400/1519]  eta: 0:16:29  lr: 0.000400  lr2: 0.000400  loss: 17.3262 (17.6461)  loss_bbox: 0.2149 (0.2145)  loss_bbox_aux_0: 0.2298 (0.2243)  loss_bbox_aux_1: 0.2166 (0.2124)  loss_bbox_aux_2: 0.2106 (0.2118)  loss_bbox_aux_3: 0.2124 (0.2122)  loss_bbox_aux_4: 0.2148 (0.2141)  loss_bbox_dn_0: 0.3485 (0.3465)  loss_bbox_dn_1: 0.2701 (0.2747)  loss_bbox_dn_2: 0.2531 (0.2570)  loss_bbox_dn_3: 0.2504 (0.2520)  loss_bbox_dn_4: 0.2483 (0.2509)  loss_bbox_dn_5: 0.2480 (0.2507)  loss_bbox_enc_0: 0.2783 (0.2767)  loss_giou: 0.4706 (0.4589)  loss_giou_aux_0: 0.5080 (0.4918)  loss_giou_aux_1: 0.4682 (0.4690)  loss_giou_aux_2: 0.4700 (0.4613)  loss_giou_aux_3: 0.4590 (0.4580)  loss_giou_aux_4: 0.4633 (0.4592)  loss_giou_dn_0: 0.6118 (0.6259)  loss_giou_dn_1: 0.4809 (0.4984)  loss_giou_dn_2: 0.4545 (0.4695)  loss_giou_dn_3: 0.4465 (0.4615)  loss_giou_dn_4: 0.4448 (0.4590)  loss_giou_dn_5: 0.4438 (0.4588)  loss_giou_enc_0: 0.5691 (0.5792)  loss_vfl: 0.6373 (0.6947)  loss_vfl_aux_0: 0.9335 (0.9537)  loss_vfl_aux_1: 0.8816 (0.8800)  loss_vfl_aux_2: 0.7364 (0.7960)  loss_vfl_aux_3: 0.6958 (0.7419)  loss_vfl_aux_4: 0.6579 (0.7055)  loss_vfl_dn_0: 0.4422 (0.4404)  loss_vfl_dn_1: 0.3941 (0.3954)  loss_vfl_dn_2: 0.3800 (0.3797)  loss_vfl_dn_3: 0.3762 (0.3754)  loss_vfl_dn_4: 0.3743 (0.3734)  loss_vfl_dn_5: 0.3736 (0.3730)  loss_vfl_enc_0: 0.9779 (0.9889)  time: 0.8383  data: 0.0095  max mem: 15225
Epoch: [1]  [ 500/1519]  eta: 0:14:49  lr: 0.000400  lr2: 0.000400  loss: 17.3693 (17.5923)  loss_bbox: 0.2090 (0.2140)  loss_bbox_aux_0: 0.2181 (0.2233)  loss_bbox_aux_1: 0.2064 (0.2119)  loss_bbox_aux_2: 0.2039 (0.2107)  loss_bbox_aux_3: 0.2072 (0.2119)  loss_bbox_aux_4: 0.2063 (0.2139)  loss_bbox_dn_0: 0.3394 (0.3454)  loss_bbox_dn_1: 0.2652 (0.2735)  loss_bbox_dn_2: 0.2504 (0.2558)  loss_bbox_dn_3: 0.2480 (0.2509)  loss_bbox_dn_4: 0.2471 (0.2497)  loss_bbox_dn_5: 0.2468 (0.2496)  loss_bbox_enc_0: 0.2686 (0.2760)  loss_giou: 0.4209 (0.4570)  loss_giou_aux_0: 0.4490 (0.4890)  loss_giou_aux_1: 0.4390 (0.4669)  loss_giou_aux_2: 0.4249 (0.4586)  loss_giou_aux_3: 0.4240 (0.4560)  loss_giou_aux_4: 0.4237 (0.4573)  loss_giou_dn_0: 0.6099 (0.6239)  loss_giou_dn_1: 0.4848 (0.4962)  loss_giou_dn_2: 0.4545 (0.4672)  loss_giou_dn_3: 0.4438 (0.4592)  loss_giou_dn_4: 0.4400 (0.4568)  loss_giou_dn_5: 0.4415 (0.4566)  loss_giou_enc_0: 0.5463 (0.5773)  loss_vfl: 0.6765 (0.6914)  loss_vfl_aux_0: 0.9312 (0.9546)  loss_vfl_aux_1: 0.8701 (0.8778)  loss_vfl_aux_2: 0.7878 (0.7948)  loss_vfl_aux_3: 0.7160 (0.7385)  loss_vfl_aux_4: 0.6829 (0.7018)  loss_vfl_dn_0: 0.4392 (0.4407)  loss_vfl_dn_1: 0.3947 (0.3949)  loss_vfl_dn_2: 0.3781 (0.3794)  loss_vfl_dn_3: 0.3734 (0.3750)  loss_vfl_dn_4: 0.3710 (0.3731)  loss_vfl_dn_5: 0.3703 (0.3727)  loss_vfl_enc_0: 0.9911 (0.9889)  time: 0.8286  data: 0.0095  max mem: 15225
Epoch: [1]  [ 600/1519]  eta: 0:13:14  lr: 0.000400  lr2: 0.000400  loss: 16.8152 (17.5298)  loss_bbox: 0.1868 (0.2122)  loss_bbox_aux_0: 0.2001 (0.2220)  loss_bbox_aux_1: 0.1882 (0.2101)  loss_bbox_aux_2: 0.1838 (0.2094)  loss_bbox_aux_3: 0.1802 (0.2104)  loss_bbox_aux_4: 0.1815 (0.2120)  loss_bbox_dn_0: 0.3047 (0.3424)  loss_bbox_dn_1: 0.2355 (0.2711)  loss_bbox_dn_2: 0.2222 (0.2537)  loss_bbox_dn_3: 0.2162 (0.2489)  loss_bbox_dn_4: 0.2149 (0.2477)  loss_bbox_dn_5: 0.2147 (0.2476)  loss_bbox_enc_0: 0.2522 (0.2737)  loss_giou: 0.4389 (0.4552)  loss_giou_aux_0: 0.4730 (0.4883)  loss_giou_aux_1: 0.4340 (0.4652)  loss_giou_aux_2: 0.4392 (0.4573)  loss_giou_aux_3: 0.4430 (0.4546)  loss_giou_aux_4: 0.4396 (0.4553)  loss_giou_dn_0: 0.6093 (0.6222)  loss_giou_dn_1: 0.4790 (0.4948)  loss_giou_dn_2: 0.4473 (0.4659)  loss_giou_dn_3: 0.4422 (0.4579)  loss_giou_dn_4: 0.4383 (0.4554)  loss_giou_dn_5: 0.4390 (0.4553)  loss_giou_enc_0: 0.5654 (0.5761)  loss_vfl: 0.6777 (0.6897)  loss_vfl_aux_0: 0.9099 (0.9518)  loss_vfl_aux_1: 0.8664 (0.8752)  loss_vfl_aux_2: 0.7497 (0.7921)  loss_vfl_aux_3: 0.7184 (0.7353)  loss_vfl_aux_4: 0.6937 (0.7000)  loss_vfl_dn_0: 0.4392 (0.4406)  loss_vfl_dn_1: 0.3898 (0.3947)  loss_vfl_dn_2: 0.3746 (0.3793)  loss_vfl_dn_3: 0.3709 (0.3750)  loss_vfl_dn_4: 0.3711 (0.3730)  loss_vfl_dn_5: 0.3722 (0.3726)  loss_vfl_enc_0: 0.9711 (0.9859)  time: 0.8287  data: 0.0099  max mem: 15225
Epoch: [1]  [ 700/1519]  eta: 0:11:53  lr: 0.000400  lr2: 0.000400  loss: 16.9209 (17.5001)  loss_bbox: 0.2037 (0.2115)  loss_bbox_aux_0: 0.2162 (0.2207)  loss_bbox_aux_1: 0.2060 (0.2097)  loss_bbox_aux_2: 0.2034 (0.2089)  loss_bbox_aux_3: 0.2037 (0.2099)  loss_bbox_aux_4: 0.1969 (0.2111)  loss_bbox_dn_0: 0.3324 (0.3413)  loss_bbox_dn_1: 0.2604 (0.2701)  loss_bbox_dn_2: 0.2429 (0.2529)  loss_bbox_dn_3: 0.2306 (0.2481)  loss_bbox_dn_4: 0.2286 (0.2470)  loss_bbox_dn_5: 0.2276 (0.2468)  loss_bbox_enc_0: 0.2680 (0.2733)  loss_giou: 0.4313 (0.4540)  loss_giou_aux_0: 0.4630 (0.4860)  loss_giou_aux_1: 0.4373 (0.4638)  loss_giou_aux_2: 0.4250 (0.4560)  loss_giou_aux_3: 0.4252 (0.4535)  loss_giou_aux_4: 0.4288 (0.4538)  loss_giou_dn_0: 0.6083 (0.6204)  loss_giou_dn_1: 0.4775 (0.4932)  loss_giou_dn_2: 0.4518 (0.4647)  loss_giou_dn_3: 0.4404 (0.4568)  loss_giou_dn_4: 0.4364 (0.4544)  loss_giou_dn_5: 0.4356 (0.4543)  loss_giou_enc_0: 0.5540 (0.5752)  loss_vfl: 0.6869 (0.6889)  loss_vfl_aux_0: 0.9103 (0.9547)  loss_vfl_aux_1: 0.8419 (0.8736)  loss_vfl_aux_2: 0.7934 (0.7911)  loss_vfl_aux_3: 0.7411 (0.7347)  loss_vfl_aux_4: 0.7068 (0.7002)  loss_vfl_dn_0: 0.4377 (0.4409)  loss_vfl_dn_1: 0.3889 (0.3942)  loss_vfl_dn_2: 0.3745 (0.3790)  loss_vfl_dn_3: 0.3695 (0.3746)  loss_vfl_dn_4: 0.3678 (0.3727)  loss_vfl_dn_5: 0.3682 (0.3723)  loss_vfl_enc_0: 0.9766 (0.9858)  time: 1.0835  data: 0.0100  max mem: 15225
Epoch: [1]  [ 800/1519]  eta: 0:10:22  lr: 0.000400  lr2: 0.000400  loss: 17.2326 (17.4813)  loss_bbox: 0.1880 (0.2105)  loss_bbox_aux_0: 0.2033 (0.2198)  loss_bbox_aux_1: 0.1880 (0.2089)  loss_bbox_aux_2: 0.1998 (0.2083)  loss_bbox_aux_3: 0.2020 (0.2091)  loss_bbox_aux_4: 0.1948 (0.2099)  loss_bbox_dn_0: 0.3343 (0.3402)  loss_bbox_dn_1: 0.2560 (0.2691)  loss_bbox_dn_2: 0.2408 (0.2521)  loss_bbox_dn_3: 0.2371 (0.2473)  loss_bbox_dn_4: 0.2374 (0.2462)  loss_bbox_dn_5: 0.2368 (0.2461)  loss_bbox_enc_0: 0.2639 (0.2725)  loss_giou: 0.4345 (0.4529)  loss_giou_aux_0: 0.4690 (0.4852)  loss_giou_aux_1: 0.4418 (0.4629)  loss_giou_aux_2: 0.4317 (0.4550)  loss_giou_aux_3: 0.4286 (0.4527)  loss_giou_aux_4: 0.4326 (0.4526)  loss_giou_dn_0: 0.6056 (0.6190)  loss_giou_dn_1: 0.4804 (0.4921)  loss_giou_dn_2: 0.4562 (0.4639)  loss_giou_dn_3: 0.4479 (0.4560)  loss_giou_dn_4: 0.4448 (0.4537)  loss_giou_dn_5: 0.4437 (0.4535)  loss_giou_enc_0: 0.5662 (0.5749)  loss_vfl: 0.6905 (0.6893)  loss_vfl_aux_0: 0.9448 (0.9567)  loss_vfl_aux_1: 0.8763 (0.8744)  loss_vfl_aux_2: 0.7970 (0.7919)  loss_vfl_aux_3: 0.7203 (0.7348)  loss_vfl_aux_4: 0.7033 (0.7012)  loss_vfl_dn_0: 0.4325 (0.4407)  loss_vfl_dn_1: 0.3869 (0.3939)  loss_vfl_dn_2: 0.3747 (0.3789)  loss_vfl_dn_3: 0.3716 (0.3745)  loss_vfl_dn_4: 0.3695 (0.3726)  loss_vfl_dn_5: 0.3680 (0.3722)  loss_vfl_enc_0: 0.9783 (0.9860)  time: 0.8318  data: 0.0102  max mem: 15225
Epoch: [1]  [ 900/1519]  eta: 0:08:53  lr: 0.000400  lr2: 0.000400  loss: 16.3713 (17.4404)  loss_bbox: 0.1984 (0.2100)  loss_bbox_aux_0: 0.2071 (0.2195)  loss_bbox_aux_1: 0.1946 (0.2084)  loss_bbox_aux_2: 0.1911 (0.2077)  loss_bbox_aux_3: 0.1995 (0.2085)  loss_bbox_aux_4: 0.1993 (0.2093)  loss_bbox_dn_0: 0.3125 (0.3384)  loss_bbox_dn_1: 0.2438 (0.2674)  loss_bbox_dn_2: 0.2289 (0.2507)  loss_bbox_dn_3: 0.2240 (0.2460)  loss_bbox_dn_4: 0.2218 (0.2449)  loss_bbox_dn_5: 0.2226 (0.2447)  loss_bbox_enc_0: 0.2561 (0.2720)  loss_giou: 0.4530 (0.4526)  loss_giou_aux_0: 0.4649 (0.4851)  loss_giou_aux_1: 0.4575 (0.4623)  loss_giou_aux_2: 0.4524 (0.4546)  loss_giou_aux_3: 0.4501 (0.4523)  loss_giou_aux_4: 0.4525 (0.4522)  loss_giou_dn_0: 0.6009 (0.6175)  loss_giou_dn_1: 0.4725 (0.4909)  loss_giou_dn_2: 0.4511 (0.4630)  loss_giou_dn_3: 0.4384 (0.4553)  loss_giou_dn_4: 0.4381 (0.4530)  loss_giou_dn_5: 0.4384 (0.4529)  loss_giou_enc_0: 0.5553 (0.5750)  loss_vfl: 0.6300 (0.6875)  loss_vfl_aux_0: 0.8562 (0.9532)  loss_vfl_aux_1: 0.7902 (0.8699)  loss_vfl_aux_2: 0.7008 (0.7889)  loss_vfl_aux_3: 0.6635 (0.7325)  loss_vfl_aux_4: 0.6290 (0.6991)  loss_vfl_dn_0: 0.4350 (0.4404)  loss_vfl_dn_1: 0.3837 (0.3934)  loss_vfl_dn_2: 0.3725 (0.3786)  loss_vfl_dn_3: 0.3686 (0.3742)  loss_vfl_dn_4: 0.3673 (0.3723)  loss_vfl_dn_5: 0.3681 (0.3720)  loss_vfl_enc_0: 0.9483 (0.9840)  time: 0.8272  data: 0.0098  max mem: 15225
Epoch: [1]  [1000/1519]  eta: 0:07:25  lr: 0.000400  lr2: 0.000400  loss: 16.8733 (17.3774)  loss_bbox: 0.1991 (0.2092)  loss_bbox_aux_0: 0.2147 (0.2185)  loss_bbox_aux_1: 0.1916 (0.2073)  loss_bbox_aux_2: 0.1897 (0.2065)  loss_bbox_aux_3: 0.1900 (0.2076)  loss_bbox_aux_4: 0.1961 (0.2084)  loss_bbox_dn_0: 0.3319 (0.3374)  loss_bbox_dn_1: 0.2605 (0.2663)  loss_bbox_dn_2: 0.2478 (0.2496)  loss_bbox_dn_3: 0.2436 (0.2449)  loss_bbox_dn_4: 0.2423 (0.2438)  loss_bbox_dn_5: 0.2416 (0.2436)  loss_bbox_enc_0: 0.2563 (0.2715)  loss_giou: 0.4387 (0.4508)  loss_giou_aux_0: 0.4766 (0.4829)  loss_giou_aux_1: 0.4340 (0.4600)  loss_giou_aux_2: 0.4346 (0.4524)  loss_giou_aux_3: 0.4339 (0.4506)  loss_giou_aux_4: 0.4391 (0.4504)  loss_giou_dn_0: 0.6092 (0.6155)  loss_giou_dn_1: 0.4761 (0.4888)  loss_giou_dn_2: 0.4478 (0.4612)  loss_giou_dn_3: 0.4397 (0.4535)  loss_giou_dn_4: 0.4378 (0.4512)  loss_giou_dn_5: 0.4395 (0.4511)  loss_giou_enc_0: 0.5507 (0.5732)  loss_vfl: 0.6560 (0.6843)  loss_vfl_aux_0: 0.9399 (0.9496)  loss_vfl_aux_1: 0.8393 (0.8659)  loss_vfl_aux_2: 0.7439 (0.7860)  loss_vfl_aux_3: 0.6930 (0.7292)  loss_vfl_aux_4: 0.6635 (0.6962)  loss_vfl_dn_0: 0.4375 (0.4401)  loss_vfl_dn_1: 0.3901 (0.3928)  loss_vfl_dn_2: 0.3772 (0.3781)  loss_vfl_dn_3: 0.3723 (0.3738)  loss_vfl_dn_4: 0.3711 (0.3719)  loss_vfl_dn_5: 0.3706 (0.3715)  loss_vfl_enc_0: 0.9534 (0.9821)  time: 0.8554  data: 0.0095  max mem: 15225
Epoch: [1]  [1100/1519]  eta: 0:06:00  lr: 0.000400  lr2: 0.000400  loss: 16.7678 (17.3311)  loss_bbox: 0.1953 (0.2088)  loss_bbox_aux_0: 0.2116 (0.2176)  loss_bbox_aux_1: 0.1938 (0.2064)  loss_bbox_aux_2: 0.1853 (0.2059)  loss_bbox_aux_3: 0.1886 (0.2073)  loss_bbox_aux_4: 0.1907 (0.2080)  loss_bbox_dn_0: 0.3212 (0.3358)  loss_bbox_dn_1: 0.2573 (0.2649)  loss_bbox_dn_2: 0.2400 (0.2483)  loss_bbox_dn_3: 0.2333 (0.2437)  loss_bbox_dn_4: 0.2310 (0.2426)  loss_bbox_dn_5: 0.2285 (0.2424)  loss_bbox_enc_0: 0.2487 (0.2706)  loss_giou: 0.4350 (0.4500)  loss_giou_aux_0: 0.4741 (0.4819)  loss_giou_aux_1: 0.4447 (0.4590)  loss_giou_aux_2: 0.4350 (0.4514)  loss_giou_aux_3: 0.4410 (0.4499)  loss_giou_aux_4: 0.4335 (0.4496)  loss_giou_dn_0: 0.6010 (0.6143)  loss_giou_dn_1: 0.4712 (0.4875)  loss_giou_dn_2: 0.4497 (0.4601)  loss_giou_dn_3: 0.4407 (0.4525)  loss_giou_dn_4: 0.4388 (0.4502)  loss_giou_dn_5: 0.4388 (0.4501)  loss_giou_enc_0: 0.5596 (0.5723)  loss_vfl: 0.6706 (0.6822)  loss_vfl_aux_0: 0.9497 (0.9457)  loss_vfl_aux_1: 0.8582 (0.8621)  loss_vfl_aux_2: 0.7847 (0.7829)  loss_vfl_aux_3: 0.7248 (0.7263)  loss_vfl_aux_4: 0.6822 (0.6937)  loss_vfl_dn_0: 0.4401 (0.4399)  loss_vfl_dn_1: 0.3899 (0.3925)  loss_vfl_dn_2: 0.3737 (0.3778)  loss_vfl_dn_3: 0.3707 (0.3736)  loss_vfl_dn_4: 0.3690 (0.3717)  loss_vfl_dn_5: 0.3682 (0.3713)  loss_vfl_enc_0: 0.9915 (0.9802)  time: 0.8119  data: 0.0095  max mem: 15225
Epoch: [1]  [1200/1519]  eta: 0:04:33  lr: 0.000400  lr2: 0.000400  loss: 16.7226 (17.2901)  loss_bbox: 0.1918 (0.2077)  loss_bbox_aux_0: 0.2167 (0.2171)  loss_bbox_aux_1: 0.2014 (0.2058)  loss_bbox_aux_2: 0.1943 (0.2051)  loss_bbox_aux_3: 0.1876 (0.2063)  loss_bbox_aux_4: 0.1917 (0.2070)  loss_bbox_dn_0: 0.3210 (0.3350)  loss_bbox_dn_1: 0.2599 (0.2640)  loss_bbox_dn_2: 0.2410 (0.2475)  loss_bbox_dn_3: 0.2335 (0.2429)  loss_bbox_dn_4: 0.2313 (0.2418)  loss_bbox_dn_5: 0.2311 (0.2417)  loss_bbox_enc_0: 0.2689 (0.2701)  loss_giou: 0.4348 (0.4486)  loss_giou_aux_0: 0.4680 (0.4811)  loss_giou_aux_1: 0.4474 (0.4577)  loss_giou_aux_2: 0.4298 (0.4501)  loss_giou_aux_3: 0.4301 (0.4485)  loss_giou_aux_4: 0.4326 (0.4482)  loss_giou_dn_0: 0.5959 (0.6132)  loss_giou_dn_1: 0.4673 (0.4863)  loss_giou_dn_2: 0.4377 (0.4588)  loss_giou_dn_3: 0.4346 (0.4513)  loss_giou_dn_4: 0.4325 (0.4490)  loss_giou_dn_5: 0.4314 (0.4489)  loss_giou_enc_0: 0.5832 (0.5716)  loss_vfl: 0.6645 (0.6815)  loss_vfl_aux_0: 0.8742 (0.9420)  loss_vfl_aux_1: 0.8053 (0.8593)  loss_vfl_aux_2: 0.7629 (0.7810)  loss_vfl_aux_3: 0.7003 (0.7249)  loss_vfl_aux_4: 0.6724 (0.6926)  loss_vfl_dn_0: 0.4366 (0.4399)  loss_vfl_dn_1: 0.3861 (0.3922)  loss_vfl_dn_2: 0.3771 (0.3776)  loss_vfl_dn_3: 0.3724 (0.3733)  loss_vfl_dn_4: 0.3720 (0.3714)  loss_vfl_dn_5: 0.3713 (0.3711)  loss_vfl_enc_0: 0.9447 (0.9781)  time: 0.8278  data: 0.0097  max mem: 15225
Epoch: [1]  [1300/1519]  eta: 0:03:07  lr: 0.000400  lr2: 0.000400  loss: 16.6852 (17.2542)  loss_bbox: 0.1981 (0.2070)  loss_bbox_aux_0: 0.1983 (0.2165)  loss_bbox_aux_1: 0.2088 (0.2055)  loss_bbox_aux_2: 0.2017 (0.2045)  loss_bbox_aux_3: 0.1979 (0.2056)  loss_bbox_aux_4: 0.1942 (0.2063)  loss_bbox_dn_0: 0.3280 (0.3347)  loss_bbox_dn_1: 0.2565 (0.2637)  loss_bbox_dn_2: 0.2449 (0.2472)  loss_bbox_dn_3: 0.2399 (0.2426)  loss_bbox_dn_4: 0.2351 (0.2415)  loss_bbox_dn_5: 0.2335 (0.2414)  loss_bbox_enc_0: 0.2502 (0.2698)  loss_giou: 0.4416 (0.4472)  loss_giou_aux_0: 0.4647 (0.4799)  loss_giou_aux_1: 0.4547 (0.4565)  loss_giou_aux_2: 0.4494 (0.4488)  loss_giou_aux_3: 0.4494 (0.4471)  loss_giou_aux_4: 0.4404 (0.4468)  loss_giou_dn_0: 0.5988 (0.6120)  loss_giou_dn_1: 0.4777 (0.4851)  loss_giou_dn_2: 0.4545 (0.4577)  loss_giou_dn_3: 0.4441 (0.4502)  loss_giou_dn_4: 0.4436 (0.4479)  loss_giou_dn_5: 0.4418 (0.4478)  loss_giou_enc_0: 0.5550 (0.5706)  loss_vfl: 0.6566 (0.6802)  loss_vfl_aux_0: 0.9359 (0.9403)  loss_vfl_aux_1: 0.8230 (0.8562)  loss_vfl_aux_2: 0.7022 (0.7783)  loss_vfl_aux_3: 0.6943 (0.7232)  loss_vfl_aux_4: 0.6624 (0.6914)  loss_vfl_dn_0: 0.4371 (0.4397)  loss_vfl_dn_1: 0.3887 (0.3919)  loss_vfl_dn_2: 0.3737 (0.3773)  loss_vfl_dn_3: 0.3693 (0.3730)  loss_vfl_dn_4: 0.3683 (0.3711)  loss_vfl_dn_5: 0.3686 (0.3708)  loss_vfl_enc_0: 0.9729 (0.9766)  time: 0.7991  data: 0.0099  max mem: 15225
Epoch: [1]  [1400/1519]  eta: 0:01:41  lr: 0.000400  lr2: 0.000400  loss: 16.4252 (17.2141)  loss_bbox: 0.1847 (0.2063)  loss_bbox_aux_0: 0.2108 (0.2160)  loss_bbox_aux_1: 0.1938 (0.2050)  loss_bbox_aux_2: 0.1879 (0.2040)  loss_bbox_aux_3: 0.1849 (0.2049)  loss_bbox_aux_4: 0.1865 (0.2057)  loss_bbox_dn_0: 0.2896 (0.3334)  loss_bbox_dn_1: 0.2349 (0.2625)  loss_bbox_dn_2: 0.2208 (0.2461)  loss_bbox_dn_3: 0.2148 (0.2415)  loss_bbox_dn_4: 0.2144 (0.2404)  loss_bbox_dn_5: 0.2144 (0.2403)  loss_bbox_enc_0: 0.2558 (0.2693)  loss_giou: 0.4255 (0.4462)  loss_giou_aux_0: 0.4680 (0.4790)  loss_giou_aux_1: 0.4346 (0.4555)  loss_giou_aux_2: 0.4263 (0.4479)  loss_giou_aux_3: 0.4293 (0.4462)  loss_giou_aux_4: 0.4234 (0.4459)  loss_giou_dn_0: 0.5791 (0.6105)  loss_giou_dn_1: 0.4525 (0.4839)  loss_giou_dn_2: 0.4277 (0.4567)  loss_giou_dn_3: 0.4229 (0.4492)  loss_giou_dn_4: 0.4228 (0.4469)  loss_giou_dn_5: 0.4229 (0.4468)  loss_giou_enc_0: 0.5487 (0.5700)  loss_vfl: 0.6586 (0.6783)  loss_vfl_aux_0: 0.8745 (0.9381)  loss_vfl_aux_1: 0.7877 (0.8535)  loss_vfl_aux_2: 0.7433 (0.7756)  loss_vfl_aux_3: 0.6869 (0.7211)  loss_vfl_aux_4: 0.6653 (0.6893)  loss_vfl_dn_0: 0.4362 (0.4396)  loss_vfl_dn_1: 0.3819 (0.3916)  loss_vfl_dn_2: 0.3721 (0.3771)  loss_vfl_dn_3: 0.3678 (0.3728)  loss_vfl_dn_4: 0.3672 (0.3709)  loss_vfl_dn_5: 0.3661 (0.3706)  loss_vfl_enc_0: 0.9316 (0.9754)  time: 0.8826  data: 0.0099  max mem: 15225
Epoch: [1]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 16.1322 (17.1712)  loss_bbox: 0.1933 (0.2057)  loss_bbox_aux_0: 0.2030 (0.2154)  loss_bbox_aux_1: 0.1867 (0.2045)  loss_bbox_aux_2: 0.1885 (0.2034)  loss_bbox_aux_3: 0.1820 (0.2043)  loss_bbox_aux_4: 0.1885 (0.2051)  loss_bbox_dn_0: 0.3179 (0.3323)  loss_bbox_dn_1: 0.2414 (0.2614)  loss_bbox_dn_2: 0.2229 (0.2451)  loss_bbox_dn_3: 0.2194 (0.2406)  loss_bbox_dn_4: 0.2161 (0.2394)  loss_bbox_dn_5: 0.2152 (0.2393)  loss_bbox_enc_0: 0.2521 (0.2685)  loss_giou: 0.4184 (0.4453)  loss_giou_aux_0: 0.4549 (0.4779)  loss_giou_aux_1: 0.4294 (0.4544)  loss_giou_aux_2: 0.4192 (0.4469)  loss_giou_aux_3: 0.4198 (0.4452)  loss_giou_aux_4: 0.4213 (0.4449)  loss_giou_dn_0: 0.5806 (0.6093)  loss_giou_dn_1: 0.4497 (0.4827)  loss_giou_dn_2: 0.4257 (0.4555)  loss_giou_dn_3: 0.4177 (0.4481)  loss_giou_dn_4: 0.4146 (0.4458)  loss_giou_dn_5: 0.4138 (0.4458)  loss_giou_enc_0: 0.5709 (0.5691)  loss_vfl: 0.6302 (0.6765)  loss_vfl_aux_0: 0.8662 (0.9344)  loss_vfl_aux_1: 0.7822 (0.8502)  loss_vfl_aux_2: 0.7227 (0.7727)  loss_vfl_aux_3: 0.6761 (0.7191)  loss_vfl_aux_4: 0.6417 (0.6876)  loss_vfl_dn_0: 0.4374 (0.4393)  loss_vfl_dn_1: 0.3848 (0.3912)  loss_vfl_dn_2: 0.3732 (0.3768)  loss_vfl_dn_3: 0.3697 (0.3726)  loss_vfl_dn_4: 0.3663 (0.3706)  loss_vfl_dn_5: 0.3658 (0.3703)  loss_vfl_enc_0: 0.9478 (0.9740)  time: 0.7914  data: 0.0097  max mem: 15225
Epoch: [1]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 16.9869 (17.1686)  loss_bbox: 0.2060 (0.2057)  loss_bbox_aux_0: 0.2124 (0.2153)  loss_bbox_aux_1: 0.2018 (0.2045)  loss_bbox_aux_2: 0.2006 (0.2034)  loss_bbox_aux_3: 0.1984 (0.2043)  loss_bbox_aux_4: 0.1986 (0.2050)  loss_bbox_dn_0: 0.3194 (0.3321)  loss_bbox_dn_1: 0.2474 (0.2612)  loss_bbox_dn_2: 0.2359 (0.2449)  loss_bbox_dn_3: 0.2327 (0.2404)  loss_bbox_dn_4: 0.2307 (0.2393)  loss_bbox_dn_5: 0.2305 (0.2392)  loss_bbox_enc_0: 0.2539 (0.2684)  loss_giou: 0.4286 (0.4454)  loss_giou_aux_0: 0.4716 (0.4779)  loss_giou_aux_1: 0.4462 (0.4545)  loss_giou_aux_2: 0.4486 (0.4470)  loss_giou_aux_3: 0.4327 (0.4453)  loss_giou_aux_4: 0.4294 (0.4450)  loss_giou_dn_0: 0.5917 (0.6091)  loss_giou_dn_1: 0.4707 (0.4827)  loss_giou_dn_2: 0.4483 (0.4555)  loss_giou_dn_3: 0.4428 (0.4481)  loss_giou_dn_4: 0.4424 (0.4459)  loss_giou_dn_5: 0.4415 (0.4458)  loss_giou_enc_0: 0.5709 (0.5692)  loss_vfl: 0.6693 (0.6764)  loss_vfl_aux_0: 0.9043 (0.9344)  loss_vfl_aux_1: 0.7961 (0.8499)  loss_vfl_aux_2: 0.7430 (0.7724)  loss_vfl_aux_3: 0.7117 (0.7189)  loss_vfl_aux_4: 0.6801 (0.6875)  loss_vfl_dn_0: 0.4336 (0.4393)  loss_vfl_dn_1: 0.3839 (0.3911)  loss_vfl_dn_2: 0.3740 (0.3767)  loss_vfl_dn_3: 0.3686 (0.3725)  loss_vfl_dn_4: 0.3673 (0.3706)  loss_vfl_dn_5: 0.3678 (0.3703)  loss_vfl_enc_0: 0.9515 (0.9738)  time: 0.7832  data: 0.0089  max mem: 15225
Epoch: [1] Total time: 0:21:39 (0.8555 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 16.9869 (17.1686)  loss_bbox: 0.2060 (0.2057)  loss_bbox_aux_0: 0.2124 (0.2153)  loss_bbox_aux_1: 0.2018 (0.2045)  loss_bbox_aux_2: 0.2006 (0.2034)  loss_bbox_aux_3: 0.1984 (0.2043)  loss_bbox_aux_4: 0.1986 (0.2050)  loss_bbox_dn_0: 0.3194 (0.3321)  loss_bbox_dn_1: 0.2474 (0.2612)  loss_bbox_dn_2: 0.2359 (0.2449)  loss_bbox_dn_3: 0.2327 (0.2404)  loss_bbox_dn_4: 0.2307 (0.2393)  loss_bbox_dn_5: 0.2305 (0.2392)  loss_bbox_enc_0: 0.2539 (0.2684)  loss_giou: 0.4286 (0.4454)  loss_giou_aux_0: 0.4716 (0.4779)  loss_giou_aux_1: 0.4462 (0.4545)  loss_giou_aux_2: 0.4486 (0.4470)  loss_giou_aux_3: 0.4327 (0.4453)  loss_giou_aux_4: 0.4294 (0.4450)  loss_giou_dn_0: 0.5917 (0.6091)  loss_giou_dn_1: 0.4707 (0.4827)  loss_giou_dn_2: 0.4483 (0.4555)  loss_giou_dn_3: 0.4428 (0.4481)  loss_giou_dn_4: 0.4424 (0.4459)  loss_giou_dn_5: 0.4415 (0.4458)  loss_giou_enc_0: 0.5709 (0.5692)  loss_vfl: 0.6693 (0.6764)  loss_vfl_aux_0: 0.9043 (0.9344)  loss_vfl_aux_1: 0.7961 (0.8499)  loss_vfl_aux_2: 0.7430 (0.7724)  loss_vfl_aux_3: 0.7117 (0.7189)  loss_vfl_aux_4: 0.6801 (0.6875)  loss_vfl_dn_0: 0.4336 (0.4393)  loss_vfl_dn_1: 0.3839 (0.3911)  loss_vfl_dn_2: 0.3740 (0.3767)  loss_vfl_dn_3: 0.3686 (0.3725)  loss_vfl_dn_4: 0.3673 (0.3706)  loss_vfl_dn_5: 0.3678 (0.3703)  loss_vfl_enc_0: 0.9515 (0.9738)
Test:  [ 0/75]  eta: 0:03:30    time: 2.8082  data: 2.2123  max mem: 15225
Test:  [10/75]  eta: 0:00:51    time: 0.7915  data: 0.2216  max mem: 15225
Test:  [20/75]  eta: 0:00:39    time: 0.6170  data: 0.0271  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6106  data: 0.0211  max mem: 15225
Test:  [40/75]  eta: 0:00:23    time: 0.6057  data: 0.0413  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6121  data: 0.0498  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.6002  data: 0.0201  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.6007  data: 0.0188  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5927  data: 0.0175  max mem: 15225
Test: Total time: 0:00:47 (0.6330 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=11.58s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.442
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.680
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.489
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.120
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.464
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.428
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.572
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.658
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.511
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.668
best_stat: {'epoch': 1, 'coco_eval_bbox': 0.4416072990551158}
Epoch: [2]  [   0/1519]  eta: 3:03:59  lr: 0.000400  lr2: 0.000400  loss: 17.6422 (17.6422)  loss_bbox: 0.2835 (0.2835)  loss_bbox_aux_0: 0.2986 (0.2986)  loss_bbox_aux_1: 0.2915 (0.2915)  loss_bbox_aux_2: 0.2804 (0.2804)  loss_bbox_aux_3: 0.2799 (0.2799)  loss_bbox_aux_4: 0.2862 (0.2862)  loss_bbox_dn_0: 0.3719 (0.3719)  loss_bbox_dn_1: 0.2781 (0.2781)  loss_bbox_dn_2: 0.2620 (0.2620)  loss_bbox_dn_3: 0.2589 (0.2589)  loss_bbox_dn_4: 0.2575 (0.2575)  loss_bbox_dn_5: 0.2566 (0.2566)  loss_bbox_enc_0: 0.3035 (0.3035)  loss_giou: 0.4911 (0.4911)  loss_giou_aux_0: 0.5490 (0.5490)  loss_giou_aux_1: 0.5130 (0.5130)  loss_giou_aux_2: 0.4847 (0.4847)  loss_giou_aux_3: 0.4761 (0.4761)  loss_giou_aux_4: 0.4933 (0.4933)  loss_giou_dn_0: 0.5765 (0.5765)  loss_giou_dn_1: 0.4484 (0.4484)  loss_giou_dn_2: 0.4320 (0.4320)  loss_giou_dn_3: 0.4273 (0.4273)  loss_giou_dn_4: 0.4248 (0.4248)  loss_giou_dn_5: 0.4245 (0.4245)  loss_giou_enc_0: 0.5667 (0.5667)  loss_vfl: 0.5837 (0.5837)  loss_vfl_aux_0: 1.0150 (1.0150)  loss_vfl_aux_1: 0.7880 (0.7880)  loss_vfl_aux_2: 0.6835 (0.6835)  loss_vfl_aux_3: 0.6407 (0.6407)  loss_vfl_aux_4: 0.5924 (0.5924)  loss_vfl_dn_0: 0.4358 (0.4358)  loss_vfl_dn_1: 0.3901 (0.3901)  loss_vfl_dn_2: 0.3762 (0.3762)  loss_vfl_dn_3: 0.3737 (0.3737)  loss_vfl_dn_4: 0.3718 (0.3718)  loss_vfl_dn_5: 0.3722 (0.3722)  loss_vfl_enc_0: 1.0029 (1.0029)  time: 7.2679  data: 5.8715  max mem: 15225
Epoch: [2]  [ 100/1519]  eta: 0:21:14  lr: 0.000400  lr2: 0.000400  loss: 17.0799 (16.8581)  loss_bbox: 0.2043 (0.2017)  loss_bbox_aux_0: 0.2227 (0.2193)  loss_bbox_aux_1: 0.2111 (0.2082)  loss_bbox_aux_2: 0.2094 (0.2018)  loss_bbox_aux_3: 0.2065 (0.2007)  loss_bbox_aux_4: 0.2065 (0.2010)  loss_bbox_dn_0: 0.3183 (0.3274)  loss_bbox_dn_1: 0.2630 (0.2547)  loss_bbox_dn_2: 0.2466 (0.2388)  loss_bbox_dn_3: 0.2406 (0.2342)  loss_bbox_dn_4: 0.2385 (0.2328)  loss_bbox_dn_5: 0.2377 (0.2326)  loss_bbox_enc_0: 0.2730 (0.2650)  loss_giou: 0.4510 (0.4392)  loss_giou_aux_0: 0.4906 (0.4783)  loss_giou_aux_1: 0.4623 (0.4532)  loss_giou_aux_2: 0.4454 (0.4402)  loss_giou_aux_3: 0.4504 (0.4369)  loss_giou_aux_4: 0.4527 (0.4383)  loss_giou_dn_0: 0.5910 (0.5983)  loss_giou_dn_1: 0.4712 (0.4720)  loss_giou_dn_2: 0.4408 (0.4460)  loss_giou_dn_3: 0.4350 (0.4394)  loss_giou_dn_4: 0.4364 (0.4374)  loss_giou_dn_5: 0.4370 (0.4374)  loss_giou_enc_0: 0.5723 (0.5619)  loss_vfl: 0.6513 (0.6560)  loss_vfl_aux_0: 0.9222 (0.9158)  loss_vfl_aux_1: 0.8201 (0.8128)  loss_vfl_aux_2: 0.7499 (0.7458)  loss_vfl_aux_3: 0.7053 (0.7032)  loss_vfl_aux_4: 0.6595 (0.6691)  loss_vfl_dn_0: 0.4354 (0.4360)  loss_vfl_dn_1: 0.3853 (0.3872)  loss_vfl_dn_2: 0.3737 (0.3738)  loss_vfl_dn_3: 0.3697 (0.3697)  loss_vfl_dn_4: 0.3682 (0.3677)  loss_vfl_dn_5: 0.3687 (0.3674)  loss_vfl_enc_0: 0.9257 (0.9568)  time: 0.8540  data: 0.0094  max mem: 15225
Epoch: [2]  [ 200/1519]  eta: 0:18:53  lr: 0.000400  lr2: 0.000400  loss: 16.4438 (16.7192)  loss_bbox: 0.1967 (0.1992)  loss_bbox_aux_0: 0.2167 (0.2155)  loss_bbox_aux_1: 0.1911 (0.2037)  loss_bbox_aux_2: 0.1949 (0.1999)  loss_bbox_aux_3: 0.1968 (0.1989)  loss_bbox_aux_4: 0.1955 (0.1989)  loss_bbox_dn_0: 0.2903 (0.3234)  loss_bbox_dn_1: 0.2207 (0.2509)  loss_bbox_dn_2: 0.2109 (0.2347)  loss_bbox_dn_3: 0.2057 (0.2302)  loss_bbox_dn_4: 0.2045 (0.2289)  loss_bbox_dn_5: 0.2048 (0.2287)  loss_bbox_enc_0: 0.2680 (0.2625)  loss_giou: 0.4324 (0.4352)  loss_giou_aux_0: 0.4965 (0.4742)  loss_giou_aux_1: 0.4538 (0.4482)  loss_giou_aux_2: 0.4390 (0.4371)  loss_giou_aux_3: 0.4356 (0.4343)  loss_giou_aux_4: 0.4323 (0.4351)  loss_giou_dn_0: 0.5630 (0.5928)  loss_giou_dn_1: 0.4530 (0.4666)  loss_giou_dn_2: 0.4349 (0.4410)  loss_giou_dn_3: 0.4264 (0.4343)  loss_giou_dn_4: 0.4251 (0.4323)  loss_giou_dn_5: 0.4247 (0.4324)  loss_giou_enc_0: 0.5616 (0.5591)  loss_vfl: 0.6290 (0.6513)  loss_vfl_aux_0: 0.8721 (0.9126)  loss_vfl_aux_1: 0.8006 (0.8107)  loss_vfl_aux_2: 0.7046 (0.7396)  loss_vfl_aux_3: 0.6688 (0.6935)  loss_vfl_aux_4: 0.6331 (0.6625)  loss_vfl_dn_0: 0.4317 (0.4357)  loss_vfl_dn_1: 0.3851 (0.3862)  loss_vfl_dn_2: 0.3711 (0.3730)  loss_vfl_dn_3: 0.3691 (0.3690)  loss_vfl_dn_4: 0.3662 (0.3669)  loss_vfl_dn_5: 0.3657 (0.3666)  loss_vfl_enc_0: 0.9196 (0.9539)  time: 0.8210  data: 0.0097  max mem: 15225
Epoch: [2]  [ 300/1519]  eta: 0:18:01  lr: 0.000400  lr2: 0.000400  loss: 16.5951 (16.7477)  loss_bbox: 0.2010 (0.2009)  loss_bbox_aux_0: 0.2080 (0.2154)  loss_bbox_aux_1: 0.1981 (0.2049)  loss_bbox_aux_2: 0.2045 (0.2013)  loss_bbox_aux_3: 0.1975 (0.1998)  loss_bbox_aux_4: 0.2044 (0.2005)  loss_bbox_dn_0: 0.3143 (0.3227)  loss_bbox_dn_1: 0.2490 (0.2512)  loss_bbox_dn_2: 0.2318 (0.2352)  loss_bbox_dn_3: 0.2236 (0.2309)  loss_bbox_dn_4: 0.2209 (0.2297)  loss_bbox_dn_5: 0.2212 (0.2295)  loss_bbox_enc_0: 0.2599 (0.2622)  loss_giou: 0.4284 (0.4388)  loss_giou_aux_0: 0.4566 (0.4754)  loss_giou_aux_1: 0.4274 (0.4504)  loss_giou_aux_2: 0.4302 (0.4404)  loss_giou_aux_3: 0.4234 (0.4377)  loss_giou_aux_4: 0.4281 (0.4388)  loss_giou_dn_0: 0.5880 (0.5945)  loss_giou_dn_1: 0.4696 (0.4690)  loss_giou_dn_2: 0.4378 (0.4435)  loss_giou_dn_3: 0.4277 (0.4368)  loss_giou_dn_4: 0.4226 (0.4349)  loss_giou_dn_5: 0.4211 (0.4350)  loss_giou_enc_0: 0.5399 (0.5599)  loss_vfl: 0.6361 (0.6502)  loss_vfl_aux_0: 0.8886 (0.9123)  loss_vfl_aux_1: 0.8106 (0.8044)  loss_vfl_aux_2: 0.6964 (0.7356)  loss_vfl_aux_3: 0.7012 (0.6920)  loss_vfl_aux_4: 0.6499 (0.6607)  loss_vfl_dn_0: 0.4326 (0.4360)  loss_vfl_dn_1: 0.3830 (0.3863)  loss_vfl_dn_2: 0.3731 (0.3732)  loss_vfl_dn_3: 0.3646 (0.3693)  loss_vfl_dn_4: 0.3644 (0.3673)  loss_vfl_dn_5: 0.3640 (0.3671)  loss_vfl_enc_0: 0.9490 (0.9541)  time: 0.8683  data: 0.0099  max mem: 15225
Epoch: [2]  [ 400/1519]  eta: 0:16:13  lr: 0.000400  lr2: 0.000400  loss: 16.6201 (16.7267)  loss_bbox: 0.1892 (0.1998)  loss_bbox_aux_0: 0.2022 (0.2139)  loss_bbox_aux_1: 0.1893 (0.2025)  loss_bbox_aux_2: 0.1932 (0.1999)  loss_bbox_aux_3: 0.1885 (0.1981)  loss_bbox_aux_4: 0.1995 (0.1992)  loss_bbox_dn_0: 0.2969 (0.3207)  loss_bbox_dn_1: 0.2317 (0.2495)  loss_bbox_dn_2: 0.2156 (0.2336)  loss_bbox_dn_3: 0.2090 (0.2295)  loss_bbox_dn_4: 0.2084 (0.2283)  loss_bbox_dn_5: 0.2078 (0.2282)  loss_bbox_enc_0: 0.2386 (0.2608)  loss_giou: 0.4437 (0.4385)  loss_giou_aux_0: 0.4793 (0.4743)  loss_giou_aux_1: 0.4570 (0.4485)  loss_giou_aux_2: 0.4497 (0.4396)  loss_giou_aux_3: 0.4436 (0.4369)  loss_giou_aux_4: 0.4382 (0.4382)  loss_giou_dn_0: 0.6001 (0.5925)  loss_giou_dn_1: 0.4663 (0.4675)  loss_giou_dn_2: 0.4439 (0.4423)  loss_giou_dn_3: 0.4362 (0.4357)  loss_giou_dn_4: 0.4332 (0.4338)  loss_giou_dn_5: 0.4332 (0.4339)  loss_giou_enc_0: 0.5561 (0.5587)  loss_vfl: 0.6641 (0.6520)  loss_vfl_aux_0: 0.9009 (0.9125)  loss_vfl_aux_1: 0.8329 (0.8113)  loss_vfl_aux_2: 0.7679 (0.7392)  loss_vfl_aux_3: 0.7155 (0.6948)  loss_vfl_aux_4: 0.6613 (0.6627)  loss_vfl_dn_0: 0.4359 (0.4359)  loss_vfl_dn_1: 0.3877 (0.3863)  loss_vfl_dn_2: 0.3736 (0.3728)  loss_vfl_dn_3: 0.3703 (0.3689)  loss_vfl_dn_4: 0.3677 (0.3670)  loss_vfl_dn_5: 0.3673 (0.3668)  loss_vfl_enc_0: 0.9409 (0.9523)  time: 0.8124  data: 0.0094  max mem: 15225
Epoch: [2]  [ 500/1519]  eta: 0:14:36  lr: 0.000400  lr2: 0.000400  loss: 16.1336 (16.7306)  loss_bbox: 0.1769 (0.2004)  loss_bbox_aux_0: 0.2096 (0.2146)  loss_bbox_aux_1: 0.1871 (0.2024)  loss_bbox_aux_2: 0.1894 (0.2005)  loss_bbox_aux_3: 0.1806 (0.1989)  loss_bbox_aux_4: 0.1779 (0.2000)  loss_bbox_dn_0: 0.3131 (0.3217)  loss_bbox_dn_1: 0.2338 (0.2507)  loss_bbox_dn_2: 0.2221 (0.2351)  loss_bbox_dn_3: 0.2124 (0.2309)  loss_bbox_dn_4: 0.2101 (0.2299)  loss_bbox_dn_5: 0.2102 (0.2297)  loss_bbox_enc_0: 0.2676 (0.2619)  loss_giou: 0.4236 (0.4382)  loss_giou_aux_0: 0.4761 (0.4744)  loss_giou_aux_1: 0.4437 (0.4475)  loss_giou_aux_2: 0.4395 (0.4392)  loss_giou_aux_3: 0.4316 (0.4368)  loss_giou_aux_4: 0.4242 (0.4378)  loss_giou_dn_0: 0.5820 (0.5923)  loss_giou_dn_1: 0.4588 (0.4672)  loss_giou_dn_2: 0.4374 (0.4422)  loss_giou_dn_3: 0.4286 (0.4356)  loss_giou_dn_4: 0.4261 (0.4338)  loss_giou_dn_5: 0.4268 (0.4339)  loss_giou_enc_0: 0.5752 (0.5594)  loss_vfl: 0.6174 (0.6515)  loss_vfl_aux_0: 0.8610 (0.9098)  loss_vfl_aux_1: 0.7646 (0.8107)  loss_vfl_aux_2: 0.7132 (0.7399)  loss_vfl_aux_3: 0.6587 (0.6942)  loss_vfl_aux_4: 0.6236 (0.6623)  loss_vfl_dn_0: 0.4343 (0.4356)  loss_vfl_dn_1: 0.3846 (0.3859)  loss_vfl_dn_2: 0.3737 (0.3725)  loss_vfl_dn_3: 0.3699 (0.3686)  loss_vfl_dn_4: 0.3694 (0.3668)  loss_vfl_dn_5: 0.3678 (0.3666)  loss_vfl_enc_0: 0.9467 (0.9512)  time: 0.8164  data: 0.0097  max mem: 15225
Epoch: [2]  [ 600/1519]  eta: 0:13:07  lr: 0.000400  lr2: 0.000400  loss: 16.4653 (16.6805)  loss_bbox: 0.2083 (0.2007)  loss_bbox_aux_0: 0.2049 (0.2139)  loss_bbox_aux_1: 0.2043 (0.2017)  loss_bbox_aux_2: 0.2028 (0.2005)  loss_bbox_aux_3: 0.2056 (0.1991)  loss_bbox_aux_4: 0.2086 (0.2002)  loss_bbox_dn_0: 0.3178 (0.3201)  loss_bbox_dn_1: 0.2412 (0.2490)  loss_bbox_dn_2: 0.2234 (0.2335)  loss_bbox_dn_3: 0.2239 (0.2295)  loss_bbox_dn_4: 0.2236 (0.2284)  loss_bbox_dn_5: 0.2231 (0.2283)  loss_bbox_enc_0: 0.2633 (0.2609)  loss_giou: 0.4270 (0.4375)  loss_giou_aux_0: 0.4579 (0.4727)  loss_giou_aux_1: 0.4365 (0.4462)  loss_giou_aux_2: 0.4300 (0.4385)  loss_giou_aux_3: 0.4326 (0.4365)  loss_giou_aux_4: 0.4268 (0.4372)  loss_giou_dn_0: 0.5862 (0.5908)  loss_giou_dn_1: 0.4607 (0.4657)  loss_giou_dn_2: 0.4319 (0.4409)  loss_giou_dn_3: 0.4258 (0.4343)  loss_giou_dn_4: 0.4248 (0.4324)  loss_giou_dn_5: 0.4247 (0.4325)  loss_giou_enc_0: 0.5514 (0.5578)  loss_vfl: 0.6428 (0.6489)  loss_vfl_aux_0: 0.8512 (0.9062)  loss_vfl_aux_1: 0.7682 (0.8067)  loss_vfl_aux_2: 0.7196 (0.7354)  loss_vfl_aux_3: 0.6691 (0.6899)  loss_vfl_aux_4: 0.6457 (0.6596)  loss_vfl_dn_0: 0.4329 (0.4352)  loss_vfl_dn_1: 0.3853 (0.3856)  loss_vfl_dn_2: 0.3709 (0.3723)  loss_vfl_dn_3: 0.3663 (0.3684)  loss_vfl_dn_4: 0.3654 (0.3666)  loss_vfl_dn_5: 0.3642 (0.3663)  loss_vfl_enc_0: 0.9267 (0.9506)  time: 0.9140  data: 0.0095  max mem: 15225
Epoch: [2]  [ 700/1519]  eta: 0:11:44  lr: 0.000400  lr2: 0.000400  loss: 16.3450 (16.6773)  loss_bbox: 0.1941 (0.2006)  loss_bbox_aux_0: 0.1999 (0.2132)  loss_bbox_aux_1: 0.1889 (0.2010)  loss_bbox_aux_2: 0.1915 (0.1999)  loss_bbox_aux_3: 0.1922 (0.1987)  loss_bbox_aux_4: 0.1911 (0.1997)  loss_bbox_dn_0: 0.3225 (0.3200)  loss_bbox_dn_1: 0.2470 (0.2493)  loss_bbox_dn_2: 0.2280 (0.2339)  loss_bbox_dn_3: 0.2261 (0.2298)  loss_bbox_dn_4: 0.2257 (0.2288)  loss_bbox_dn_5: 0.2258 (0.2287)  loss_bbox_enc_0: 0.2437 (0.2605)  loss_giou: 0.4294 (0.4371)  loss_giou_aux_0: 0.4695 (0.4725)  loss_giou_aux_1: 0.4236 (0.4453)  loss_giou_aux_2: 0.4224 (0.4378)  loss_giou_aux_3: 0.4227 (0.4361)  loss_giou_aux_4: 0.4158 (0.4367)  loss_giou_dn_0: 0.5705 (0.5911)  loss_giou_dn_1: 0.4519 (0.4662)  loss_giou_dn_2: 0.4268 (0.4411)  loss_giou_dn_3: 0.4200 (0.4346)  loss_giou_dn_4: 0.4179 (0.4327)  loss_giou_dn_5: 0.4171 (0.4327)  loss_giou_enc_0: 0.5462 (0.5574)  loss_vfl: 0.6192 (0.6478)  loss_vfl_aux_0: 0.9130 (0.9057)  loss_vfl_aux_1: 0.8279 (0.8096)  loss_vfl_aux_2: 0.7291 (0.7364)  loss_vfl_aux_3: 0.6650 (0.6890)  loss_vfl_aux_4: 0.6303 (0.6590)  loss_vfl_dn_0: 0.4344 (0.4353)  loss_vfl_dn_1: 0.3871 (0.3860)  loss_vfl_dn_2: 0.3704 (0.3726)  loss_vfl_dn_3: 0.3671 (0.3687)  loss_vfl_dn_4: 0.3667 (0.3669)  loss_vfl_dn_5: 0.3658 (0.3666)  loss_vfl_enc_0: 0.9103 (0.9479)  time: 0.8217  data: 0.0096  max mem: 15225
Epoch: [2]  [ 800/1519]  eta: 0:10:15  lr: 0.000400  lr2: 0.000400  loss: 16.8431 (16.6726)  loss_bbox: 0.2028 (0.2012)  loss_bbox_aux_0: 0.2043 (0.2132)  loss_bbox_aux_1: 0.2028 (0.2010)  loss_bbox_aux_2: 0.2010 (0.2001)  loss_bbox_aux_3: 0.2068 (0.1993)  loss_bbox_aux_4: 0.1995 (0.2004)  loss_bbox_dn_0: 0.3185 (0.3198)  loss_bbox_dn_1: 0.2489 (0.2494)  loss_bbox_dn_2: 0.2318 (0.2340)  loss_bbox_dn_3: 0.2262 (0.2300)  loss_bbox_dn_4: 0.2244 (0.2289)  loss_bbox_dn_5: 0.2237 (0.2288)  loss_bbox_enc_0: 0.2744 (0.2614)  loss_giou: 0.4424 (0.4369)  loss_giou_aux_0: 0.4740 (0.4718)  loss_giou_aux_1: 0.4555 (0.4448)  loss_giou_aux_2: 0.4458 (0.4375)  loss_giou_aux_3: 0.4418 (0.4359)  loss_giou_aux_4: 0.4409 (0.4364)  loss_giou_dn_0: 0.5855 (0.5899)  loss_giou_dn_1: 0.4645 (0.4657)  loss_giou_dn_2: 0.4385 (0.4406)  loss_giou_dn_3: 0.4348 (0.4341)  loss_giou_dn_4: 0.4348 (0.4322)  loss_giou_dn_5: 0.4357 (0.4323)  loss_giou_enc_0: 0.5869 (0.5579)  loss_vfl: 0.6716 (0.6476)  loss_vfl_aux_0: 0.8902 (0.9043)  loss_vfl_aux_1: 0.8470 (0.8114)  loss_vfl_aux_2: 0.7471 (0.7360)  loss_vfl_aux_3: 0.7071 (0.6885)  loss_vfl_aux_4: 0.6835 (0.6584)  loss_vfl_dn_0: 0.4327 (0.4352)  loss_vfl_dn_1: 0.3862 (0.3859)  loss_vfl_dn_2: 0.3719 (0.3724)  loss_vfl_dn_3: 0.3689 (0.3686)  loss_vfl_dn_4: 0.3672 (0.3668)  loss_vfl_dn_5: 0.3670 (0.3665)  loss_vfl_enc_0: 0.9351 (0.9472)  time: 0.8274  data: 0.0096  max mem: 15225
Epoch: [2]  [ 900/1519]  eta: 0:08:47  lr: 0.000400  lr2: 0.000400  loss: 16.9295 (16.6828)  loss_bbox: 0.2017 (0.2014)  loss_bbox_aux_0: 0.2039 (0.2130)  loss_bbox_aux_1: 0.2042 (0.2010)  loss_bbox_aux_2: 0.2040 (0.2003)  loss_bbox_aux_3: 0.2080 (0.1997)  loss_bbox_aux_4: 0.1990 (0.2005)  loss_bbox_dn_0: 0.3217 (0.3212)  loss_bbox_dn_1: 0.2483 (0.2504)  loss_bbox_dn_2: 0.2300 (0.2348)  loss_bbox_dn_3: 0.2266 (0.2307)  loss_bbox_dn_4: 0.2249 (0.2297)  loss_bbox_dn_5: 0.2247 (0.2295)  loss_bbox_enc_0: 0.2591 (0.2614)  loss_giou: 0.4175 (0.4362)  loss_giou_aux_0: 0.4688 (0.4713)  loss_giou_aux_1: 0.4367 (0.4448)  loss_giou_aux_2: 0.4162 (0.4372)  loss_giou_aux_3: 0.4166 (0.4356)  loss_giou_aux_4: 0.4158 (0.4358)  loss_giou_dn_0: 0.5848 (0.5903)  loss_giou_dn_1: 0.4659 (0.4660)  loss_giou_dn_2: 0.4331 (0.4407)  loss_giou_dn_3: 0.4199 (0.4341)  loss_giou_dn_4: 0.4131 (0.4322)  loss_giou_dn_5: 0.4131 (0.4322)  loss_giou_enc_0: 0.5458 (0.5573)  loss_vfl: 0.6152 (0.6478)  loss_vfl_aux_0: 0.9102 (0.9060)  loss_vfl_aux_1: 0.8665 (0.8150)  loss_vfl_aux_2: 0.7527 (0.7370)  loss_vfl_aux_3: 0.6575 (0.6883)  loss_vfl_aux_4: 0.6154 (0.6585)  loss_vfl_dn_0: 0.4358 (0.4355)  loss_vfl_dn_1: 0.3895 (0.3863)  loss_vfl_dn_2: 0.3713 (0.3726)  loss_vfl_dn_3: 0.3667 (0.3686)  loss_vfl_dn_4: 0.3651 (0.3669)  loss_vfl_dn_5: 0.3644 (0.3666)  loss_vfl_enc_0: 0.9330 (0.9464)  time: 0.8159  data: 0.0099  max mem: 15225
Epoch: [2]  [1000/1519]  eta: 0:07:24  lr: 0.000400  lr2: 0.000400  loss: 16.6663 (16.6671)  loss_bbox: 0.1978 (0.2017)  loss_bbox_aux_0: 0.2114 (0.2123)  loss_bbox_aux_1: 0.2017 (0.2008)  loss_bbox_aux_2: 0.1995 (0.2003)  loss_bbox_aux_3: 0.2037 (0.1999)  loss_bbox_aux_4: 0.1973 (0.2008)  loss_bbox_dn_0: 0.3014 (0.3203)  loss_bbox_dn_1: 0.2423 (0.2497)  loss_bbox_dn_2: 0.2296 (0.2340)  loss_bbox_dn_3: 0.2292 (0.2300)  loss_bbox_dn_4: 0.2269 (0.2290)  loss_bbox_dn_5: 0.2271 (0.2288)  loss_bbox_enc_0: 0.2489 (0.2604)  loss_giou: 0.4283 (0.4356)  loss_giou_aux_0: 0.4596 (0.4703)  loss_giou_aux_1: 0.4322 (0.4445)  loss_giou_aux_2: 0.4347 (0.4367)  loss_giou_aux_3: 0.4425 (0.4351)  loss_giou_aux_4: 0.4296 (0.4351)  loss_giou_dn_0: 0.5804 (0.5896)  loss_giou_dn_1: 0.4675 (0.4652)  loss_giou_dn_2: 0.4417 (0.4399)  loss_giou_dn_3: 0.4348 (0.4333)  loss_giou_dn_4: 0.4328 (0.4314)  loss_giou_dn_5: 0.4329 (0.4315)  loss_giou_enc_0: 0.5320 (0.5553)  loss_vfl: 0.6336 (0.6471)  loss_vfl_aux_0: 0.8878 (0.9054)  loss_vfl_aux_1: 0.8617 (0.8176)  loss_vfl_aux_2: 0.7340 (0.7374)  loss_vfl_aux_3: 0.6713 (0.6878)  loss_vfl_aux_4: 0.6522 (0.6580)  loss_vfl_dn_0: 0.4328 (0.4355)  loss_vfl_dn_1: 0.3877 (0.3862)  loss_vfl_dn_2: 0.3730 (0.3725)  loss_vfl_dn_3: 0.3697 (0.3685)  loss_vfl_dn_4: 0.3677 (0.3668)  loss_vfl_dn_5: 0.3672 (0.3665)  loss_vfl_enc_0: 0.9393 (0.9463)  time: 0.9355  data: 0.0095  max mem: 15225
Epoch: [2]  [1100/1519]  eta: 0:05:57  lr: 0.000400  lr2: 0.000400  loss: 16.9175 (16.6555)  loss_bbox: 0.1959 (0.2010)  loss_bbox_aux_0: 0.2067 (0.2119)  loss_bbox_aux_1: 0.2012 (0.2003)  loss_bbox_aux_2: 0.2006 (0.1997)  loss_bbox_aux_3: 0.2019 (0.1994)  loss_bbox_aux_4: 0.1997 (0.2001)  loss_bbox_dn_0: 0.3128 (0.3196)  loss_bbox_dn_1: 0.2451 (0.2492)  loss_bbox_dn_2: 0.2320 (0.2335)  loss_bbox_dn_3: 0.2265 (0.2295)  loss_bbox_dn_4: 0.2260 (0.2284)  loss_bbox_dn_5: 0.2253 (0.2283)  loss_bbox_enc_0: 0.2550 (0.2601)  loss_giou: 0.4355 (0.4346)  loss_giou_aux_0: 0.4550 (0.4697)  loss_giou_aux_1: 0.4323 (0.4439)  loss_giou_aux_2: 0.4316 (0.4359)  loss_giou_aux_3: 0.4383 (0.4343)  loss_giou_aux_4: 0.4333 (0.4341)  loss_giou_dn_0: 0.5896 (0.5890)  loss_giou_dn_1: 0.4738 (0.4650)  loss_giou_dn_2: 0.4438 (0.4395)  loss_giou_dn_3: 0.4354 (0.4329)  loss_giou_dn_4: 0.4358 (0.4310)  loss_giou_dn_5: 0.4350 (0.4311)  loss_giou_enc_0: 0.5502 (0.5546)  loss_vfl: 0.6732 (0.6477)  loss_vfl_aux_0: 0.9344 (0.9066)  loss_vfl_aux_1: 0.8391 (0.8188)  loss_vfl_aux_2: 0.7768 (0.7379)  loss_vfl_aux_3: 0.7101 (0.6878)  loss_vfl_aux_4: 0.6865 (0.6587)  loss_vfl_dn_0: 0.4381 (0.4355)  loss_vfl_dn_1: 0.3907 (0.3863)  loss_vfl_dn_2: 0.3744 (0.3724)  loss_vfl_dn_3: 0.3704 (0.3684)  loss_vfl_dn_4: 0.3687 (0.3667)  loss_vfl_dn_5: 0.3681 (0.3664)  loss_vfl_enc_0: 0.9480 (0.9456)  time: 0.8140  data: 0.0093  max mem: 15225
Epoch: [2]  [1200/1519]  eta: 0:04:31  lr: 0.000400  lr2: 0.000400  loss: 16.6139 (16.6437)  loss_bbox: 0.1882 (0.2006)  loss_bbox_aux_0: 0.2131 (0.2115)  loss_bbox_aux_1: 0.2002 (0.2000)  loss_bbox_aux_2: 0.1993 (0.1994)  loss_bbox_aux_3: 0.1877 (0.1990)  loss_bbox_aux_4: 0.1887 (0.1997)  loss_bbox_dn_0: 0.3070 (0.3189)  loss_bbox_dn_1: 0.2446 (0.2487)  loss_bbox_dn_2: 0.2257 (0.2330)  loss_bbox_dn_3: 0.2226 (0.2289)  loss_bbox_dn_4: 0.2206 (0.2279)  loss_bbox_dn_5: 0.2202 (0.2277)  loss_bbox_enc_0: 0.2571 (0.2597)  loss_giou: 0.4470 (0.4347)  loss_giou_aux_0: 0.4831 (0.4698)  loss_giou_aux_1: 0.4563 (0.4442)  loss_giou_aux_2: 0.4538 (0.4361)  loss_giou_aux_3: 0.4519 (0.4343)  loss_giou_aux_4: 0.4441 (0.4341)  loss_giou_dn_0: 0.5881 (0.5883)  loss_giou_dn_1: 0.4639 (0.4646)  loss_giou_dn_2: 0.4411 (0.4391)  loss_giou_dn_3: 0.4344 (0.4326)  loss_giou_dn_4: 0.4318 (0.4306)  loss_giou_dn_5: 0.4315 (0.4307)  loss_giou_enc_0: 0.5702 (0.5547)  loss_vfl: 0.6512 (0.6474)  loss_vfl_aux_0: 0.8752 (0.9061)  loss_vfl_aux_1: 0.8156 (0.8193)  loss_vfl_aux_2: 0.7153 (0.7373)  loss_vfl_aux_3: 0.6679 (0.6872)  loss_vfl_aux_4: 0.6486 (0.6584)  loss_vfl_dn_0: 0.4347 (0.4355)  loss_vfl_dn_1: 0.3839 (0.3861)  loss_vfl_dn_2: 0.3719 (0.3723)  loss_vfl_dn_3: 0.3679 (0.3683)  loss_vfl_dn_4: 0.3651 (0.3666)  loss_vfl_dn_5: 0.3652 (0.3663)  loss_vfl_enc_0: 0.9016 (0.9441)  time: 0.8398  data: 0.0097  max mem: 15225
Epoch: [2]  [1300/1519]  eta: 0:03:05  lr: 0.000400  lr2: 0.000400  loss: 15.6870 (16.6235)  loss_bbox: 0.1869 (0.2003)  loss_bbox_aux_0: 0.2004 (0.2114)  loss_bbox_aux_1: 0.1857 (0.1999)  loss_bbox_aux_2: 0.1831 (0.1992)  loss_bbox_aux_3: 0.1852 (0.1988)  loss_bbox_aux_4: 0.1877 (0.1994)  loss_bbox_dn_0: 0.2818 (0.3184)  loss_bbox_dn_1: 0.2171 (0.2485)  loss_bbox_dn_2: 0.2031 (0.2328)  loss_bbox_dn_3: 0.2002 (0.2287)  loss_bbox_dn_4: 0.1980 (0.2277)  loss_bbox_dn_5: 0.1983 (0.2276)  loss_bbox_enc_0: 0.2475 (0.2595)  loss_giou: 0.4235 (0.4342)  loss_giou_aux_0: 0.4568 (0.4694)  loss_giou_aux_1: 0.4283 (0.4440)  loss_giou_aux_2: 0.4231 (0.4358)  loss_giou_aux_3: 0.4255 (0.4339)  loss_giou_aux_4: 0.4222 (0.4337)  loss_giou_dn_0: 0.5526 (0.5872)  loss_giou_dn_1: 0.4339 (0.4640)  loss_giou_dn_2: 0.4138 (0.4385)  loss_giou_dn_3: 0.4059 (0.4320)  loss_giou_dn_4: 0.4045 (0.4300)  loss_giou_dn_5: 0.4055 (0.4301)  loss_giou_enc_0: 0.5414 (0.5543)  loss_vfl: 0.6183 (0.6471)  loss_vfl_aux_0: 0.8239 (0.9030)  loss_vfl_aux_1: 0.7471 (0.8165)  loss_vfl_aux_2: 0.6775 (0.7355)  loss_vfl_aux_3: 0.6542 (0.6865)  loss_vfl_aux_4: 0.6286 (0.6581)  loss_vfl_dn_0: 0.4361 (0.4356)  loss_vfl_dn_1: 0.3828 (0.3860)  loss_vfl_dn_2: 0.3713 (0.3722)  loss_vfl_dn_3: 0.3663 (0.3683)  loss_vfl_dn_4: 0.3648 (0.3665)  loss_vfl_dn_5: 0.3654 (0.3662)  loss_vfl_enc_0: 0.9163 (0.9427)  time: 0.8199  data: 0.0111  max mem: 15225
Epoch: [2]  [1400/1519]  eta: 0:01:41  lr: 0.000400  lr2: 0.000400  loss: 16.4211 (16.5997)  loss_bbox: 0.1871 (0.2000)  loss_bbox_aux_0: 0.2080 (0.2114)  loss_bbox_aux_1: 0.1952 (0.1999)  loss_bbox_aux_2: 0.1883 (0.1992)  loss_bbox_aux_3: 0.1880 (0.1987)  loss_bbox_aux_4: 0.1858 (0.1992)  loss_bbox_dn_0: 0.3076 (0.3180)  loss_bbox_dn_1: 0.2292 (0.2482)  loss_bbox_dn_2: 0.2159 (0.2325)  loss_bbox_dn_3: 0.2046 (0.2284)  loss_bbox_dn_4: 0.2045 (0.2274)  loss_bbox_dn_5: 0.2051 (0.2273)  loss_bbox_enc_0: 0.2413 (0.2592)  loss_giou: 0.4251 (0.4335)  loss_giou_aux_0: 0.4742 (0.4689)  loss_giou_aux_1: 0.4315 (0.4434)  loss_giou_aux_2: 0.4293 (0.4353)  loss_giou_aux_3: 0.4216 (0.4333)  loss_giou_aux_4: 0.4127 (0.4331)  loss_giou_dn_0: 0.5667 (0.5864)  loss_giou_dn_1: 0.4501 (0.4633)  loss_giou_dn_2: 0.4308 (0.4378)  loss_giou_dn_3: 0.4230 (0.4313)  loss_giou_dn_4: 0.4200 (0.4293)  loss_giou_dn_5: 0.4198 (0.4294)  loss_giou_enc_0: 0.5440 (0.5536)  loss_vfl: 0.6239 (0.6459)  loss_vfl_aux_0: 0.8780 (0.9005)  loss_vfl_aux_1: 0.8112 (0.8142)  loss_vfl_aux_2: 0.7065 (0.7335)  loss_vfl_aux_3: 0.6669 (0.6849)  loss_vfl_aux_4: 0.6311 (0.6569)  loss_vfl_dn_0: 0.4337 (0.4355)  loss_vfl_dn_1: 0.3811 (0.3858)  loss_vfl_dn_2: 0.3682 (0.3720)  loss_vfl_dn_3: 0.3639 (0.3681)  loss_vfl_dn_4: 0.3632 (0.3663)  loss_vfl_dn_5: 0.3634 (0.3660)  loss_vfl_enc_0: 0.9074 (0.9421)  time: 0.8338  data: 0.0098  max mem: 15225
Epoch: [2]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 16.3684 (16.5802)  loss_bbox: 0.1953 (0.1998)  loss_bbox_aux_0: 0.2079 (0.2116)  loss_bbox_aux_1: 0.1905 (0.1999)  loss_bbox_aux_2: 0.1954 (0.1989)  loss_bbox_aux_3: 0.1942 (0.1985)  loss_bbox_aux_4: 0.1946 (0.1989)  loss_bbox_dn_0: 0.3054 (0.3176)  loss_bbox_dn_1: 0.2384 (0.2477)  loss_bbox_dn_2: 0.2210 (0.2320)  loss_bbox_dn_3: 0.2178 (0.2280)  loss_bbox_dn_4: 0.2182 (0.2270)  loss_bbox_dn_5: 0.2179 (0.2268)  loss_bbox_enc_0: 0.2471 (0.2592)  loss_giou: 0.4158 (0.4329)  loss_giou_aux_0: 0.4594 (0.4686)  loss_giou_aux_1: 0.4236 (0.4431)  loss_giou_aux_2: 0.4218 (0.4348)  loss_giou_aux_3: 0.4165 (0.4327)  loss_giou_aux_4: 0.4153 (0.4324)  loss_giou_dn_0: 0.5789 (0.5857)  loss_giou_dn_1: 0.4476 (0.4624)  loss_giou_dn_2: 0.4198 (0.4369)  loss_giou_dn_3: 0.4106 (0.4305)  loss_giou_dn_4: 0.4091 (0.4285)  loss_giou_dn_5: 0.4108 (0.4286)  loss_giou_enc_0: 0.5267 (0.5530)  loss_vfl: 0.6513 (0.6453)  loss_vfl_aux_0: 0.8966 (0.8994)  loss_vfl_aux_1: 0.8039 (0.8128)  loss_vfl_aux_2: 0.7328 (0.7326)  loss_vfl_aux_3: 0.6831 (0.6841)  loss_vfl_aux_4: 0.6557 (0.6562)  loss_vfl_dn_0: 0.4312 (0.4354)  loss_vfl_dn_1: 0.3842 (0.3856)  loss_vfl_dn_2: 0.3708 (0.3719)  loss_vfl_dn_3: 0.3674 (0.3680)  loss_vfl_dn_4: 0.3658 (0.3662)  loss_vfl_dn_5: 0.3662 (0.3659)  loss_vfl_enc_0: 0.9106 (0.9406)  time: 0.7793  data: 0.0094  max mem: 15225
Epoch: [2]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 16.0501 (16.5735)  loss_bbox: 0.1705 (0.1996)  loss_bbox_aux_0: 0.1939 (0.2115)  loss_bbox_aux_1: 0.1792 (0.1998)  loss_bbox_aux_2: 0.1735 (0.1988)  loss_bbox_aux_3: 0.1722 (0.1983)  loss_bbox_aux_4: 0.1746 (0.1987)  loss_bbox_dn_0: 0.2915 (0.3173)  loss_bbox_dn_1: 0.2274 (0.2475)  loss_bbox_dn_2: 0.2182 (0.2318)  loss_bbox_dn_3: 0.2135 (0.2278)  loss_bbox_dn_4: 0.2132 (0.2268)  loss_bbox_dn_5: 0.2125 (0.2267)  loss_bbox_enc_0: 0.2395 (0.2590)  loss_giou: 0.4100 (0.4327)  loss_giou_aux_0: 0.4460 (0.4684)  loss_giou_aux_1: 0.4215 (0.4430)  loss_giou_aux_2: 0.3998 (0.4346)  loss_giou_aux_3: 0.4010 (0.4325)  loss_giou_aux_4: 0.4133 (0.4322)  loss_giou_dn_0: 0.5652 (0.5855)  loss_giou_dn_1: 0.4518 (0.4623)  loss_giou_dn_2: 0.4268 (0.4368)  loss_giou_dn_3: 0.4198 (0.4304)  loss_giou_dn_4: 0.4170 (0.4284)  loss_giou_dn_5: 0.4176 (0.4285)  loss_giou_enc_0: 0.5394 (0.5528)  loss_vfl: 0.6120 (0.6450)  loss_vfl_aux_0: 0.8375 (0.8991)  loss_vfl_aux_1: 0.7787 (0.8126)  loss_vfl_aux_2: 0.7051 (0.7323)  loss_vfl_aux_3: 0.6462 (0.6838)  loss_vfl_aux_4: 0.6362 (0.6560)  loss_vfl_dn_0: 0.4335 (0.4354)  loss_vfl_dn_1: 0.3830 (0.3856)  loss_vfl_dn_2: 0.3663 (0.3718)  loss_vfl_dn_3: 0.3647 (0.3679)  loss_vfl_dn_4: 0.3620 (0.3662)  loss_vfl_dn_5: 0.3614 (0.3659)  loss_vfl_enc_0: 0.9130 (0.9403)  time: 0.7850  data: 0.0086  max mem: 15225
Epoch: [2] Total time: 0:21:30 (0.8497 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 16.0501 (16.5735)  loss_bbox: 0.1705 (0.1996)  loss_bbox_aux_0: 0.1939 (0.2115)  loss_bbox_aux_1: 0.1792 (0.1998)  loss_bbox_aux_2: 0.1735 (0.1988)  loss_bbox_aux_3: 0.1722 (0.1983)  loss_bbox_aux_4: 0.1746 (0.1987)  loss_bbox_dn_0: 0.2915 (0.3173)  loss_bbox_dn_1: 0.2274 (0.2475)  loss_bbox_dn_2: 0.2182 (0.2318)  loss_bbox_dn_3: 0.2135 (0.2278)  loss_bbox_dn_4: 0.2132 (0.2268)  loss_bbox_dn_5: 0.2125 (0.2267)  loss_bbox_enc_0: 0.2395 (0.2590)  loss_giou: 0.4100 (0.4327)  loss_giou_aux_0: 0.4460 (0.4684)  loss_giou_aux_1: 0.4215 (0.4430)  loss_giou_aux_2: 0.3998 (0.4346)  loss_giou_aux_3: 0.4010 (0.4325)  loss_giou_aux_4: 0.4133 (0.4322)  loss_giou_dn_0: 0.5652 (0.5855)  loss_giou_dn_1: 0.4518 (0.4623)  loss_giou_dn_2: 0.4268 (0.4368)  loss_giou_dn_3: 0.4198 (0.4304)  loss_giou_dn_4: 0.4170 (0.4284)  loss_giou_dn_5: 0.4176 (0.4285)  loss_giou_enc_0: 0.5394 (0.5528)  loss_vfl: 0.6120 (0.6450)  loss_vfl_aux_0: 0.8375 (0.8991)  loss_vfl_aux_1: 0.7787 (0.8126)  loss_vfl_aux_2: 0.7051 (0.7323)  loss_vfl_aux_3: 0.6462 (0.6838)  loss_vfl_aux_4: 0.6362 (0.6560)  loss_vfl_dn_0: 0.4335 (0.4354)  loss_vfl_dn_1: 0.3830 (0.3856)  loss_vfl_dn_2: 0.3663 (0.3718)  loss_vfl_dn_3: 0.3647 (0.3679)  loss_vfl_dn_4: 0.3620 (0.3662)  loss_vfl_dn_5: 0.3614 (0.3659)  loss_vfl_enc_0: 0.9130 (0.9403)
Test:  [ 0/75]  eta: 0:03:20    time: 2.6683  data: 2.0790  max mem: 15225
Test:  [10/75]  eta: 0:00:50    time: 0.7747  data: 0.2080  max mem: 15225
Test:  [20/75]  eta: 0:00:37    time: 0.5895  data: 0.0265  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6133  data: 0.0216  max mem: 15225
Test:  [40/75]  eta: 0:00:22    time: 0.6120  data: 0.0209  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6033  data: 0.0227  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.5989  data: 0.0198  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.5860  data: 0.0247  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5908  data: 0.0169  max mem: 15225
Test: Total time: 0:00:47 (0.6298 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=11.51s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.453
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.700
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.496
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.092
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.440
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.592
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.670
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.530
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.680
best_stat: {'epoch': 2, 'coco_eval_bbox': 0.4528721068468995}
Epoch: [3]  [   0/1519]  eta: 3:20:22  lr: 0.000400  lr2: 0.000400  loss: 15.8457 (15.8457)  loss_bbox: 0.2124 (0.2124)  loss_bbox_aux_0: 0.2060 (0.2060)  loss_bbox_aux_1: 0.2094 (0.2094)  loss_bbox_aux_2: 0.1883 (0.1883)  loss_bbox_aux_3: 0.2063 (0.2063)  loss_bbox_aux_4: 0.1989 (0.1989)  loss_bbox_dn_0: 0.3012 (0.3012)  loss_bbox_dn_1: 0.2423 (0.2423)  loss_bbox_dn_2: 0.2288 (0.2288)  loss_bbox_dn_3: 0.2271 (0.2271)  loss_bbox_dn_4: 0.2277 (0.2277)  loss_bbox_dn_5: 0.2289 (0.2289)  loss_bbox_enc_0: 0.2664 (0.2664)  loss_giou: 0.4340 (0.4340)  loss_giou_aux_0: 0.4462 (0.4462)  loss_giou_aux_1: 0.4469 (0.4469)  loss_giou_aux_2: 0.4169 (0.4169)  loss_giou_aux_3: 0.4333 (0.4333)  loss_giou_aux_4: 0.4276 (0.4276)  loss_giou_dn_0: 0.5261 (0.5261)  loss_giou_dn_1: 0.4311 (0.4311)  loss_giou_dn_2: 0.4105 (0.4105)  loss_giou_dn_3: 0.4073 (0.4073)  loss_giou_dn_4: 0.4070 (0.4070)  loss_giou_dn_5: 0.4092 (0.4092)  loss_giou_enc_0: 0.5393 (0.5393)  loss_vfl: 0.5712 (0.5712)  loss_vfl_aux_0: 0.8273 (0.8273)  loss_vfl_aux_1: 0.7506 (0.7506)  loss_vfl_aux_2: 0.7144 (0.7144)  loss_vfl_aux_3: 0.6093 (0.6093)  loss_vfl_aux_4: 0.5956 (0.5956)  loss_vfl_dn_0: 0.4237 (0.4237)  loss_vfl_dn_1: 0.3788 (0.3788)  loss_vfl_dn_2: 0.3652 (0.3652)  loss_vfl_dn_3: 0.3613 (0.3613)  loss_vfl_dn_4: 0.3620 (0.3620)  loss_vfl_dn_5: 0.3634 (0.3634)  loss_vfl_enc_0: 0.8438 (0.8438)  time: 7.9146  data: 7.0868  max mem: 15225
Epoch: [3]  [ 100/1519]  eta: 0:21:36  lr: 0.000400  lr2: 0.000400  loss: 16.0030 (16.2506)  loss_bbox: 0.1832 (0.1925)  loss_bbox_aux_0: 0.2048 (0.2170)  loss_bbox_aux_1: 0.1941 (0.1990)  loss_bbox_aux_2: 0.1906 (0.1948)  loss_bbox_aux_3: 0.1798 (0.1927)  loss_bbox_aux_4: 0.1815 (0.1925)  loss_bbox_dn_0: 0.3170 (0.3164)  loss_bbox_dn_1: 0.2290 (0.2430)  loss_bbox_dn_2: 0.2130 (0.2273)  loss_bbox_dn_3: 0.2060 (0.2230)  loss_bbox_dn_4: 0.2036 (0.2220)  loss_bbox_dn_5: 0.2032 (0.2219)  loss_bbox_enc_0: 0.2475 (0.2517)  loss_giou: 0.4237 (0.4159)  loss_giou_aux_0: 0.4771 (0.4642)  loss_giou_aux_1: 0.4513 (0.4303)  loss_giou_aux_2: 0.4375 (0.4186)  loss_giou_aux_3: 0.4301 (0.4157)  loss_giou_aux_4: 0.4262 (0.4155)  loss_giou_dn_0: 0.5893 (0.5767)  loss_giou_dn_1: 0.4505 (0.4483)  loss_giou_dn_2: 0.4181 (0.4229)  loss_giou_dn_3: 0.4107 (0.4162)  loss_giou_dn_4: 0.4070 (0.4143)  loss_giou_dn_5: 0.4072 (0.4143)  loss_giou_enc_0: 0.5451 (0.5329)  loss_vfl: 0.6144 (0.6345)  loss_vfl_aux_0: 0.8405 (0.8855)  loss_vfl_aux_1: 0.7583 (0.7974)  loss_vfl_aux_2: 0.7089 (0.7209)  loss_vfl_aux_3: 0.6611 (0.6777)  loss_vfl_aux_4: 0.6308 (0.6466)  loss_vfl_dn_0: 0.4391 (0.4359)  loss_vfl_dn_1: 0.3816 (0.3827)  loss_vfl_dn_2: 0.3683 (0.3688)  loss_vfl_dn_3: 0.3632 (0.3647)  loss_vfl_dn_4: 0.3601 (0.3627)  loss_vfl_dn_5: 0.3605 (0.3625)  loss_vfl_enc_0: 0.8962 (0.9311)  time: 0.8641  data: 0.0101  max mem: 15225
Epoch: [3]  [ 200/1519]  eta: 0:20:05  lr: 0.000400  lr2: 0.000400  loss: 16.6258 (16.2603)  loss_bbox: 0.2106 (0.1940)  loss_bbox_aux_0: 0.2246 (0.2143)  loss_bbox_aux_1: 0.1995 (0.1978)  loss_bbox_aux_2: 0.1978 (0.1945)  loss_bbox_aux_3: 0.1975 (0.1925)  loss_bbox_aux_4: 0.2072 (0.1937)  loss_bbox_dn_0: 0.3465 (0.3161)  loss_bbox_dn_1: 0.2648 (0.2439)  loss_bbox_dn_2: 0.2462 (0.2279)  loss_bbox_dn_3: 0.2400 (0.2234)  loss_bbox_dn_4: 0.2372 (0.2222)  loss_bbox_dn_5: 0.2377 (0.2221)  loss_bbox_enc_0: 0.2557 (0.2527)  loss_giou: 0.4093 (0.4191)  loss_giou_aux_0: 0.4576 (0.4635)  loss_giou_aux_1: 0.4264 (0.4308)  loss_giou_aux_2: 0.4197 (0.4212)  loss_giou_aux_3: 0.4185 (0.4176)  loss_giou_aux_4: 0.4146 (0.4186)  loss_giou_dn_0: 0.6027 (0.5762)  loss_giou_dn_1: 0.4635 (0.4495)  loss_giou_dn_2: 0.4280 (0.4239)  loss_giou_dn_3: 0.4219 (0.4171)  loss_giou_dn_4: 0.4219 (0.4150)  loss_giou_dn_5: 0.4231 (0.4150)  loss_giou_enc_0: 0.5251 (0.5357)  loss_vfl: 0.6550 (0.6301)  loss_vfl_aux_0: 0.9505 (0.8915)  loss_vfl_aux_1: 0.8659 (0.7951)  loss_vfl_aux_2: 0.7535 (0.7184)  loss_vfl_aux_3: 0.7076 (0.6761)  loss_vfl_aux_4: 0.6600 (0.6420)  loss_vfl_dn_0: 0.4370 (0.4358)  loss_vfl_dn_1: 0.3891 (0.3833)  loss_vfl_dn_2: 0.3757 (0.3690)  loss_vfl_dn_3: 0.3720 (0.3651)  loss_vfl_dn_4: 0.3693 (0.3631)  loss_vfl_dn_5: 0.3691 (0.3628)  loss_vfl_enc_0: 0.9695 (0.9298)  time: 0.9022  data: 0.0096  max mem: 15225
Epoch: [3]  [ 300/1519]  eta: 0:18:02  lr: 0.000400  lr2: 0.000400  loss: 16.3642 (16.2876)  loss_bbox: 0.1940 (0.1939)  loss_bbox_aux_0: 0.1956 (0.2115)  loss_bbox_aux_1: 0.1916 (0.1963)  loss_bbox_aux_2: 0.1890 (0.1939)  loss_bbox_aux_3: 0.1823 (0.1924)  loss_bbox_aux_4: 0.1852 (0.1933)  loss_bbox_dn_0: 0.2913 (0.3142)  loss_bbox_dn_1: 0.2337 (0.2433)  loss_bbox_dn_2: 0.2180 (0.2276)  loss_bbox_dn_3: 0.2138 (0.2232)  loss_bbox_dn_4: 0.2129 (0.2221)  loss_bbox_dn_5: 0.2132 (0.2220)  loss_bbox_enc_0: 0.2436 (0.2521)  loss_giou: 0.4086 (0.4210)  loss_giou_aux_0: 0.4488 (0.4623)  loss_giou_aux_1: 0.4264 (0.4312)  loss_giou_aux_2: 0.4109 (0.4225)  loss_giou_aux_3: 0.4191 (0.4197)  loss_giou_aux_4: 0.4071 (0.4202)  loss_giou_dn_0: 0.5605 (0.5744)  loss_giou_dn_1: 0.4434 (0.4500)  loss_giou_dn_2: 0.4187 (0.4251)  loss_giou_dn_3: 0.4158 (0.4186)  loss_giou_dn_4: 0.4142 (0.4166)  loss_giou_dn_5: 0.4155 (0.4167)  loss_giou_enc_0: 0.5353 (0.5364)  loss_vfl: 0.6464 (0.6337)  loss_vfl_aux_0: 0.8850 (0.8983)  loss_vfl_aux_1: 0.7979 (0.7991)  loss_vfl_aux_2: 0.7250 (0.7205)  loss_vfl_aux_3: 0.6723 (0.6767)  loss_vfl_aux_4: 0.6550 (0.6453)  loss_vfl_dn_0: 0.4378 (0.4359)  loss_vfl_dn_1: 0.3866 (0.3837)  loss_vfl_dn_2: 0.3712 (0.3697)  loss_vfl_dn_3: 0.3682 (0.3658)  loss_vfl_dn_4: 0.3671 (0.3639)  loss_vfl_dn_5: 0.3664 (0.3636)  loss_vfl_enc_0: 0.9213 (0.9309)  time: 0.8209  data: 0.0099  max mem: 15225
Epoch: [3]  [ 400/1519]  eta: 0:16:17  lr: 0.000400  lr2: 0.000400  loss: 15.7904 (16.2688)  loss_bbox: 0.1773 (0.1942)  loss_bbox_aux_0: 0.1981 (0.2118)  loss_bbox_aux_1: 0.1880 (0.1972)  loss_bbox_aux_2: 0.1842 (0.1948)  loss_bbox_aux_3: 0.1809 (0.1929)  loss_bbox_aux_4: 0.1778 (0.1935)  loss_bbox_dn_0: 0.2849 (0.3119)  loss_bbox_dn_1: 0.2177 (0.2419)  loss_bbox_dn_2: 0.2029 (0.2265)  loss_bbox_dn_3: 0.2017 (0.2222)  loss_bbox_dn_4: 0.1994 (0.2211)  loss_bbox_dn_5: 0.1993 (0.2210)  loss_bbox_enc_0: 0.2472 (0.2529)  loss_giou: 0.4209 (0.4224)  loss_giou_aux_0: 0.4706 (0.4635)  loss_giou_aux_1: 0.4323 (0.4334)  loss_giou_aux_2: 0.4332 (0.4246)  loss_giou_aux_3: 0.4241 (0.4216)  loss_giou_aux_4: 0.4202 (0.4217)  loss_giou_dn_0: 0.5594 (0.5730)  loss_giou_dn_1: 0.4412 (0.4497)  loss_giou_dn_2: 0.4207 (0.4251)  loss_giou_dn_3: 0.4133 (0.4187)  loss_giou_dn_4: 0.4121 (0.4167)  loss_giou_dn_5: 0.4124 (0.4168)  loss_giou_enc_0: 0.5483 (0.5384)  loss_vfl: 0.6307 (0.6327)  loss_vfl_aux_0: 0.8438 (0.8914)  loss_vfl_aux_1: 0.7620 (0.7937)  loss_vfl_aux_2: 0.7101 (0.7177)  loss_vfl_aux_3: 0.6404 (0.6737)  loss_vfl_aux_4: 0.6360 (0.6437)  loss_vfl_dn_0: 0.4307 (0.4351)  loss_vfl_dn_1: 0.3785 (0.3834)  loss_vfl_dn_2: 0.3661 (0.3697)  loss_vfl_dn_3: 0.3612 (0.3658)  loss_vfl_dn_4: 0.3597 (0.3639)  loss_vfl_dn_5: 0.3595 (0.3636)  loss_vfl_enc_0: 0.8773 (0.9267)  time: 0.8125  data: 0.0102  max mem: 15225
Epoch: [3]  [ 500/1519]  eta: 0:14:42  lr: 0.000400  lr2: 0.000400  loss: 16.1432 (16.2175)  loss_bbox: 0.2006 (0.1939)  loss_bbox_aux_0: 0.1993 (0.2105)  loss_bbox_aux_1: 0.1868 (0.1967)  loss_bbox_aux_2: 0.1880 (0.1941)  loss_bbox_aux_3: 0.1931 (0.1925)  loss_bbox_aux_4: 0.1984 (0.1932)  loss_bbox_dn_0: 0.2997 (0.3087)  loss_bbox_dn_1: 0.2369 (0.2398)  loss_bbox_dn_2: 0.2257 (0.2247)  loss_bbox_dn_3: 0.2227 (0.2206)  loss_bbox_dn_4: 0.2235 (0.2196)  loss_bbox_dn_5: 0.2231 (0.2195)  loss_bbox_enc_0: 0.2410 (0.2512)  loss_giou: 0.4259 (0.4225)  loss_giou_aux_0: 0.4485 (0.4624)  loss_giou_aux_1: 0.4196 (0.4334)  loss_giou_aux_2: 0.4164 (0.4249)  loss_giou_aux_3: 0.4300 (0.4220)  loss_giou_aux_4: 0.4256 (0.4218)  loss_giou_dn_0: 0.5659 (0.5709)  loss_giou_dn_1: 0.4489 (0.4486)  loss_giou_dn_2: 0.4222 (0.4244)  loss_giou_dn_3: 0.4202 (0.4182)  loss_giou_dn_4: 0.4194 (0.4163)  loss_giou_dn_5: 0.4186 (0.4165)  loss_giou_enc_0: 0.5291 (0.5372)  loss_vfl: 0.6224 (0.6305)  loss_vfl_aux_0: 0.8383 (0.8852)  loss_vfl_aux_1: 0.7558 (0.7883)  loss_vfl_aux_2: 0.6854 (0.7139)  loss_vfl_aux_3: 0.6396 (0.6704)  loss_vfl_aux_4: 0.6198 (0.6415)  loss_vfl_dn_0: 0.4309 (0.4345)  loss_vfl_dn_1: 0.3799 (0.3830)  loss_vfl_dn_2: 0.3700 (0.3695)  loss_vfl_dn_3: 0.3634 (0.3657)  loss_vfl_dn_4: 0.3616 (0.3639)  loss_vfl_dn_5: 0.3625 (0.3636)  loss_vfl_enc_0: 0.9028 (0.9238)  time: 0.8527  data: 0.0100  max mem: 15225
Epoch: [3]  [ 600/1519]  eta: 0:13:20  lr: 0.000400  lr2: 0.000400  loss: 15.7207 (16.2016)  loss_bbox: 0.1750 (0.1941)  loss_bbox_aux_0: 0.1961 (0.2105)  loss_bbox_aux_1: 0.1912 (0.1968)  loss_bbox_aux_2: 0.1805 (0.1941)  loss_bbox_aux_3: 0.1826 (0.1928)  loss_bbox_aux_4: 0.1809 (0.1936)  loss_bbox_dn_0: 0.2771 (0.3079)  loss_bbox_dn_1: 0.2171 (0.2394)  loss_bbox_dn_2: 0.2104 (0.2242)  loss_bbox_dn_3: 0.2093 (0.2201)  loss_bbox_dn_4: 0.2070 (0.2191)  loss_bbox_dn_5: 0.2072 (0.2189)  loss_bbox_enc_0: 0.2459 (0.2522)  loss_giou: 0.4248 (0.4237)  loss_giou_aux_0: 0.4654 (0.4632)  loss_giou_aux_1: 0.4415 (0.4346)  loss_giou_aux_2: 0.4291 (0.4258)  loss_giou_aux_3: 0.4277 (0.4235)  loss_giou_aux_4: 0.4188 (0.4231)  loss_giou_dn_0: 0.5648 (0.5704)  loss_giou_dn_1: 0.4448 (0.4488)  loss_giou_dn_2: 0.4222 (0.4243)  loss_giou_dn_3: 0.4152 (0.4181)  loss_giou_dn_4: 0.4127 (0.4163)  loss_giou_dn_5: 0.4137 (0.4164)  loss_giou_enc_0: 0.5313 (0.5391)  loss_vfl: 0.6333 (0.6284)  loss_vfl_aux_0: 0.8333 (0.8796)  loss_vfl_aux_1: 0.7542 (0.7863)  loss_vfl_aux_2: 0.6635 (0.7122)  loss_vfl_aux_3: 0.6494 (0.6668)  loss_vfl_aux_4: 0.6359 (0.6388)  loss_vfl_dn_0: 0.4308 (0.4342)  loss_vfl_dn_1: 0.3831 (0.3829)  loss_vfl_dn_2: 0.3703 (0.3693)  loss_vfl_dn_3: 0.3661 (0.3654)  loss_vfl_dn_4: 0.3634 (0.3636)  loss_vfl_dn_5: 0.3642 (0.3634)  loss_vfl_enc_0: 0.9080 (0.9196)  time: 0.8578  data: 0.0104  max mem: 15225
Epoch: [3]  [ 700/1519]  eta: 0:11:48  lr: 0.000400  lr2: 0.000400  loss: 15.6975 (16.1739)  loss_bbox: 0.1824 (0.1941)  loss_bbox_aux_0: 0.1963 (0.2102)  loss_bbox_aux_1: 0.1844 (0.1964)  loss_bbox_aux_2: 0.1808 (0.1941)  loss_bbox_aux_3: 0.1884 (0.1928)  loss_bbox_aux_4: 0.1818 (0.1937)  loss_bbox_dn_0: 0.2748 (0.3070)  loss_bbox_dn_1: 0.2151 (0.2389)  loss_bbox_dn_2: 0.1976 (0.2236)  loss_bbox_dn_3: 0.1962 (0.2196)  loss_bbox_dn_4: 0.1953 (0.2186)  loss_bbox_dn_5: 0.1951 (0.2185)  loss_bbox_enc_0: 0.2341 (0.2521)  loss_giou: 0.4073 (0.4223)  loss_giou_aux_0: 0.4517 (0.4612)  loss_giou_aux_1: 0.4230 (0.4330)  loss_giou_aux_2: 0.4094 (0.4245)  loss_giou_aux_3: 0.3973 (0.4221)  loss_giou_aux_4: 0.3975 (0.4218)  loss_giou_dn_0: 0.5483 (0.5681)  loss_giou_dn_1: 0.4362 (0.4470)  loss_giou_dn_2: 0.4094 (0.4225)  loss_giou_dn_3: 0.4011 (0.4163)  loss_giou_dn_4: 0.4005 (0.4146)  loss_giou_dn_5: 0.4009 (0.4147)  loss_giou_enc_0: 0.5225 (0.5378)  loss_vfl: 0.5916 (0.6280)  loss_vfl_aux_0: 0.8236 (0.8788)  loss_vfl_aux_1: 0.7620 (0.7874)  loss_vfl_aux_2: 0.7112 (0.7125)  loss_vfl_aux_3: 0.6321 (0.6666)  loss_vfl_aux_4: 0.6069 (0.6383)  loss_vfl_dn_0: 0.4323 (0.4339)  loss_vfl_dn_1: 0.3800 (0.3825)  loss_vfl_dn_2: 0.3666 (0.3689)  loss_vfl_dn_3: 0.3626 (0.3651)  loss_vfl_dn_4: 0.3610 (0.3633)  loss_vfl_dn_5: 0.3607 (0.3631)  loss_vfl_enc_0: 0.8975 (0.9197)  time: 0.8228  data: 0.0099  max mem: 15225
Epoch: [3]  [ 800/1519]  eta: 0:10:18  lr: 0.000400  lr2: 0.000400  loss: 16.0834 (16.1474)  loss_bbox: 0.1887 (0.1938)  loss_bbox_aux_0: 0.2133 (0.2099)  loss_bbox_aux_1: 0.1913 (0.1962)  loss_bbox_aux_2: 0.1907 (0.1937)  loss_bbox_aux_3: 0.1851 (0.1927)  loss_bbox_aux_4: 0.1876 (0.1933)  loss_bbox_dn_0: 0.3088 (0.3065)  loss_bbox_dn_1: 0.2329 (0.2384)  loss_bbox_dn_2: 0.2149 (0.2233)  loss_bbox_dn_3: 0.2097 (0.2193)  loss_bbox_dn_4: 0.2100 (0.2183)  loss_bbox_dn_5: 0.2099 (0.2182)  loss_bbox_enc_0: 0.2456 (0.2515)  loss_giou: 0.4129 (0.4220)  loss_giou_aux_0: 0.4669 (0.4604)  loss_giou_aux_1: 0.4194 (0.4325)  loss_giou_aux_2: 0.4111 (0.4239)  loss_giou_aux_3: 0.4148 (0.4220)  loss_giou_aux_4: 0.4140 (0.4215)  loss_giou_dn_0: 0.5648 (0.5677)  loss_giou_dn_1: 0.4482 (0.4469)  loss_giou_dn_2: 0.4211 (0.4225)  loss_giou_dn_3: 0.4193 (0.4164)  loss_giou_dn_4: 0.4169 (0.4146)  loss_giou_dn_5: 0.4179 (0.4147)  loss_giou_enc_0: 0.5317 (0.5366)  loss_vfl: 0.6218 (0.6270)  loss_vfl_aux_0: 0.8514 (0.8744)  loss_vfl_aux_1: 0.7741 (0.7833)  loss_vfl_aux_2: 0.6910 (0.7105)  loss_vfl_aux_3: 0.6395 (0.6645)  loss_vfl_aux_4: 0.6380 (0.6373)  loss_vfl_dn_0: 0.4346 (0.4335)  loss_vfl_dn_1: 0.3821 (0.3823)  loss_vfl_dn_2: 0.3684 (0.3688)  loss_vfl_dn_3: 0.3643 (0.3650)  loss_vfl_dn_4: 0.3641 (0.3632)  loss_vfl_dn_5: 0.3628 (0.3630)  loss_vfl_enc_0: 0.8943 (0.9179)  time: 0.8249  data: 0.0103  max mem: 15225
Epoch: [3]  [ 900/1519]  eta: 0:08:53  lr: 0.000400  lr2: 0.000400  loss: 15.7150 (16.1234)  loss_bbox: 0.1944 (0.1943)  loss_bbox_aux_0: 0.2154 (0.2108)  loss_bbox_aux_1: 0.1879 (0.1966)  loss_bbox_aux_2: 0.1865 (0.1941)  loss_bbox_aux_3: 0.1982 (0.1931)  loss_bbox_aux_4: 0.1925 (0.1936)  loss_bbox_dn_0: 0.3015 (0.3066)  loss_bbox_dn_1: 0.2304 (0.2383)  loss_bbox_dn_2: 0.2135 (0.2232)  loss_bbox_dn_3: 0.2068 (0.2193)  loss_bbox_dn_4: 0.2067 (0.2183)  loss_bbox_dn_5: 0.2069 (0.2182)  loss_bbox_enc_0: 0.2473 (0.2519)  loss_giou: 0.4065 (0.4219)  loss_giou_aux_0: 0.4634 (0.4602)  loss_giou_aux_1: 0.4168 (0.4321)  loss_giou_aux_2: 0.4127 (0.4236)  loss_giou_aux_3: 0.4135 (0.4218)  loss_giou_aux_4: 0.4082 (0.4214)  loss_giou_dn_0: 0.5777 (0.5674)  loss_giou_dn_1: 0.4383 (0.4459)  loss_giou_dn_2: 0.4115 (0.4217)  loss_giou_dn_3: 0.4069 (0.4157)  loss_giou_dn_4: 0.4048 (0.4139)  loss_giou_dn_5: 0.4045 (0.4140)  loss_giou_enc_0: 0.5239 (0.5358)  loss_vfl: 0.5884 (0.6245)  loss_vfl_aux_0: 0.8119 (0.8704)  loss_vfl_aux_1: 0.7674 (0.7812)  loss_vfl_aux_2: 0.6787 (0.7075)  loss_vfl_aux_3: 0.6229 (0.6620)  loss_vfl_aux_4: 0.5952 (0.6349)  loss_vfl_dn_0: 0.4354 (0.4333)  loss_vfl_dn_1: 0.3789 (0.3820)  loss_vfl_dn_2: 0.3642 (0.3685)  loss_vfl_dn_3: 0.3586 (0.3647)  loss_vfl_dn_4: 0.3590 (0.3630)  loss_vfl_dn_5: 0.3597 (0.3627)  loss_vfl_enc_0: 0.8918 (0.9152)  time: 0.8749  data: 0.0098  max mem: 15225
Epoch: [3]  [1000/1519]  eta: 0:07:27  lr: 0.000400  lr2: 0.000400  loss: 15.9915 (16.0963)  loss_bbox: 0.1836 (0.1940)  loss_bbox_aux_0: 0.2034 (0.2108)  loss_bbox_aux_1: 0.1921 (0.1963)  loss_bbox_aux_2: 0.1905 (0.1940)  loss_bbox_aux_3: 0.1926 (0.1930)  loss_bbox_aux_4: 0.1865 (0.1934)  loss_bbox_dn_0: 0.3124 (0.3067)  loss_bbox_dn_1: 0.2424 (0.2381)  loss_bbox_dn_2: 0.2245 (0.2231)  loss_bbox_dn_3: 0.2231 (0.2192)  loss_bbox_dn_4: 0.2231 (0.2182)  loss_bbox_dn_5: 0.2242 (0.2181)  loss_bbox_enc_0: 0.2559 (0.2521)  loss_giou: 0.4002 (0.4212)  loss_giou_aux_0: 0.4488 (0.4598)  loss_giou_aux_1: 0.4111 (0.4314)  loss_giou_aux_2: 0.4069 (0.4230)  loss_giou_aux_3: 0.3967 (0.4212)  loss_giou_aux_4: 0.4008 (0.4207)  loss_giou_dn_0: 0.5512 (0.5666)  loss_giou_dn_1: 0.4210 (0.4450)  loss_giou_dn_2: 0.3985 (0.4208)  loss_giou_dn_3: 0.3922 (0.4148)  loss_giou_dn_4: 0.3912 (0.4130)  loss_giou_dn_5: 0.3913 (0.4131)  loss_giou_enc_0: 0.5154 (0.5353)  loss_vfl: 0.5922 (0.6229)  loss_vfl_aux_0: 0.8492 (0.8674)  loss_vfl_aux_1: 0.7683 (0.7789)  loss_vfl_aux_2: 0.6758 (0.7051)  loss_vfl_aux_3: 0.6319 (0.6599)  loss_vfl_aux_4: 0.6062 (0.6330)  loss_vfl_dn_0: 0.4321 (0.4333)  loss_vfl_dn_1: 0.3755 (0.3816)  loss_vfl_dn_2: 0.3632 (0.3682)  loss_vfl_dn_3: 0.3598 (0.3645)  loss_vfl_dn_4: 0.3581 (0.3627)  loss_vfl_dn_5: 0.3575 (0.3625)  loss_vfl_enc_0: 0.9403 (0.9133)  time: 0.8153  data: 0.0103  max mem: 15225
Epoch: [3]  [1100/1519]  eta: 0:05:59  lr: 0.000400  lr2: 0.000400  loss: 15.2488 (16.0653)  loss_bbox: 0.1870 (0.1940)  loss_bbox_aux_0: 0.1998 (0.2107)  loss_bbox_aux_1: 0.1933 (0.1963)  loss_bbox_aux_2: 0.1870 (0.1939)  loss_bbox_aux_3: 0.1890 (0.1930)  loss_bbox_aux_4: 0.1873 (0.1934)  loss_bbox_dn_0: 0.2855 (0.3060)  loss_bbox_dn_1: 0.2200 (0.2375)  loss_bbox_dn_2: 0.2038 (0.2225)  loss_bbox_dn_3: 0.1967 (0.2186)  loss_bbox_dn_4: 0.1968 (0.2177)  loss_bbox_dn_5: 0.1984 (0.2176)  loss_bbox_enc_0: 0.2414 (0.2517)  loss_giou: 0.3938 (0.4211)  loss_giou_aux_0: 0.4411 (0.4596)  loss_giou_aux_1: 0.4111 (0.4313)  loss_giou_aux_2: 0.3994 (0.4228)  loss_giou_aux_3: 0.3922 (0.4211)  loss_giou_aux_4: 0.3955 (0.4206)  loss_giou_dn_0: 0.5436 (0.5656)  loss_giou_dn_1: 0.4303 (0.4441)  loss_giou_dn_2: 0.4032 (0.4200)  loss_giou_dn_3: 0.3941 (0.4140)  loss_giou_dn_4: 0.3908 (0.4122)  loss_giou_dn_5: 0.3919 (0.4123)  loss_giou_enc_0: 0.5183 (0.5349)  loss_vfl: 0.5915 (0.6204)  loss_vfl_aux_0: 0.8145 (0.8635)  loss_vfl_aux_1: 0.7115 (0.7754)  loss_vfl_aux_2: 0.6592 (0.7021)  loss_vfl_aux_3: 0.6222 (0.6572)  loss_vfl_aux_4: 0.6058 (0.6307)  loss_vfl_dn_0: 0.4286 (0.4331)  loss_vfl_dn_1: 0.3762 (0.3815)  loss_vfl_dn_2: 0.3659 (0.3680)  loss_vfl_dn_3: 0.3618 (0.3643)  loss_vfl_dn_4: 0.3612 (0.3626)  loss_vfl_dn_5: 0.3605 (0.3623)  loss_vfl_enc_0: 0.8937 (0.9117)  time: 0.8533  data: 0.0102  max mem: 15225
Epoch: [3]  [1200/1519]  eta: 0:04:32  lr: 0.000400  lr2: 0.000400  loss: 15.8211 (16.0648)  loss_bbox: 0.1768 (0.1941)  loss_bbox_aux_0: 0.1999 (0.2102)  loss_bbox_aux_1: 0.1847 (0.1962)  loss_bbox_aux_2: 0.1817 (0.1939)  loss_bbox_aux_3: 0.1797 (0.1932)  loss_bbox_aux_4: 0.1816 (0.1935)  loss_bbox_dn_0: 0.2738 (0.3056)  loss_bbox_dn_1: 0.2030 (0.2373)  loss_bbox_dn_2: 0.1906 (0.2224)  loss_bbox_dn_3: 0.1871 (0.2185)  loss_bbox_dn_4: 0.1858 (0.2176)  loss_bbox_dn_5: 0.1860 (0.2175)  loss_bbox_enc_0: 0.2424 (0.2516)  loss_giou: 0.4172 (0.4214)  loss_giou_aux_0: 0.4456 (0.4591)  loss_giou_aux_1: 0.4237 (0.4313)  loss_giou_aux_2: 0.4114 (0.4230)  loss_giou_aux_3: 0.4145 (0.4214)  loss_giou_aux_4: 0.4202 (0.4209)  loss_giou_dn_0: 0.5599 (0.5652)  loss_giou_dn_1: 0.4409 (0.4441)  loss_giou_dn_2: 0.4151 (0.4202)  loss_giou_dn_3: 0.4097 (0.4142)  loss_giou_dn_4: 0.4056 (0.4124)  loss_giou_dn_5: 0.4061 (0.4125)  loss_giou_enc_0: 0.5173 (0.5346)  loss_vfl: 0.6285 (0.6204)  loss_vfl_aux_0: 0.8711 (0.8651)  loss_vfl_aux_1: 0.7858 (0.7759)  loss_vfl_aux_2: 0.7400 (0.7020)  loss_vfl_aux_3: 0.6649 (0.6568)  loss_vfl_aux_4: 0.6387 (0.6305)  loss_vfl_dn_0: 0.4320 (0.4329)  loss_vfl_dn_1: 0.3786 (0.3813)  loss_vfl_dn_2: 0.3667 (0.3679)  loss_vfl_dn_3: 0.3623 (0.3642)  loss_vfl_dn_4: 0.3613 (0.3624)  loss_vfl_dn_5: 0.3617 (0.3622)  loss_vfl_enc_0: 0.9145 (0.9114)  time: 0.8371  data: 0.0102  max mem: 15225
Epoch: [3]  [1300/1519]  eta: 0:03:07  lr: 0.000400  lr2: 0.000400  loss: 16.2759 (16.0549)  loss_bbox: 0.2106 (0.1939)  loss_bbox_aux_0: 0.2222 (0.2103)  loss_bbox_aux_1: 0.1966 (0.1958)  loss_bbox_aux_2: 0.1957 (0.1937)  loss_bbox_aux_3: 0.1995 (0.1930)  loss_bbox_aux_4: 0.2051 (0.1933)  loss_bbox_dn_0: 0.3005 (0.3054)  loss_bbox_dn_1: 0.2417 (0.2370)  loss_bbox_dn_2: 0.2298 (0.2221)  loss_bbox_dn_3: 0.2235 (0.2182)  loss_bbox_dn_4: 0.2221 (0.2172)  loss_bbox_dn_5: 0.2223 (0.2171)  loss_bbox_enc_0: 0.2622 (0.2517)  loss_giou: 0.4264 (0.4210)  loss_giou_aux_0: 0.4750 (0.4592)  loss_giou_aux_1: 0.4445 (0.4312)  loss_giou_aux_2: 0.4365 (0.4228)  loss_giou_aux_3: 0.4272 (0.4210)  loss_giou_aux_4: 0.4253 (0.4206)  loss_giou_dn_0: 0.5631 (0.5646)  loss_giou_dn_1: 0.4448 (0.4437)  loss_giou_dn_2: 0.4177 (0.4197)  loss_giou_dn_3: 0.4096 (0.4137)  loss_giou_dn_4: 0.4084 (0.4120)  loss_giou_dn_5: 0.4096 (0.4121)  loss_giou_enc_0: 0.5534 (0.5341)  loss_vfl: 0.6200 (0.6203)  loss_vfl_aux_0: 0.9054 (0.8649)  loss_vfl_aux_1: 0.7874 (0.7761)  loss_vfl_aux_2: 0.7158 (0.7018)  loss_vfl_aux_3: 0.6481 (0.6565)  loss_vfl_aux_4: 0.6310 (0.6302)  loss_vfl_dn_0: 0.4319 (0.4327)  loss_vfl_dn_1: 0.3823 (0.3812)  loss_vfl_dn_2: 0.3684 (0.3677)  loss_vfl_dn_3: 0.3646 (0.3641)  loss_vfl_dn_4: 0.3629 (0.3623)  loss_vfl_dn_5: 0.3633 (0.3621)  loss_vfl_enc_0: 0.9233 (0.9108)  time: 0.8162  data: 0.0098  max mem: 15225
Epoch: [3]  [1400/1519]  eta: 0:01:41  lr: 0.000400  lr2: 0.000400  loss: 15.9442 (16.0366)  loss_bbox: 0.1842 (0.1938)  loss_bbox_aux_0: 0.1994 (0.2102)  loss_bbox_aux_1: 0.1872 (0.1957)  loss_bbox_aux_2: 0.1814 (0.1937)  loss_bbox_aux_3: 0.1794 (0.1929)  loss_bbox_aux_4: 0.1799 (0.1932)  loss_bbox_dn_0: 0.2885 (0.3047)  loss_bbox_dn_1: 0.2212 (0.2366)  loss_bbox_dn_2: 0.2085 (0.2218)  loss_bbox_dn_3: 0.2033 (0.2179)  loss_bbox_dn_4: 0.2029 (0.2169)  loss_bbox_dn_5: 0.2026 (0.2168)  loss_bbox_enc_0: 0.2349 (0.2515)  loss_giou: 0.4093 (0.4205)  loss_giou_aux_0: 0.4469 (0.4586)  loss_giou_aux_1: 0.4244 (0.4308)  loss_giou_aux_2: 0.4098 (0.4223)  loss_giou_aux_3: 0.4075 (0.4205)  loss_giou_aux_4: 0.4082 (0.4200)  loss_giou_dn_0: 0.5498 (0.5637)  loss_giou_dn_1: 0.4344 (0.4432)  loss_giou_dn_2: 0.4120 (0.4192)  loss_giou_dn_3: 0.4063 (0.4133)  loss_giou_dn_4: 0.4043 (0.4116)  loss_giou_dn_5: 0.4039 (0.4117)  loss_giou_enc_0: 0.5046 (0.5331)  loss_vfl: 0.6247 (0.6195)  loss_vfl_aux_0: 0.8434 (0.8645)  loss_vfl_aux_1: 0.7629 (0.7751)  loss_vfl_aux_2: 0.7067 (0.7005)  loss_vfl_aux_3: 0.6592 (0.6556)  loss_vfl_aux_4: 0.6460 (0.6296)  loss_vfl_dn_0: 0.4296 (0.4326)  loss_vfl_dn_1: 0.3775 (0.3810)  loss_vfl_dn_2: 0.3657 (0.3676)  loss_vfl_dn_3: 0.3620 (0.3639)  loss_vfl_dn_4: 0.3617 (0.3622)  loss_vfl_dn_5: 0.3615 (0.3620)  loss_vfl_enc_0: 0.8657 (0.9085)  time: 0.8238  data: 0.0100  max mem: 15225
Epoch: [3]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 15.3206 (15.9997)  loss_bbox: 0.1899 (0.1932)  loss_bbox_aux_0: 0.2000 (0.2093)  loss_bbox_aux_1: 0.1993 (0.1953)  loss_bbox_aux_2: 0.1925 (0.1930)  loss_bbox_aux_3: 0.1884 (0.1923)  loss_bbox_aux_4: 0.1895 (0.1925)  loss_bbox_dn_0: 0.2839 (0.3039)  loss_bbox_dn_1: 0.2112 (0.2360)  loss_bbox_dn_2: 0.1977 (0.2212)  loss_bbox_dn_3: 0.1918 (0.2174)  loss_bbox_dn_4: 0.1892 (0.2164)  loss_bbox_dn_5: 0.1891 (0.2163)  loss_bbox_enc_0: 0.2509 (0.2508)  loss_giou: 0.4120 (0.4197)  loss_giou_aux_0: 0.4319 (0.4574)  loss_giou_aux_1: 0.4169 (0.4301)  loss_giou_aux_2: 0.4076 (0.4216)  loss_giou_aux_3: 0.4148 (0.4197)  loss_giou_aux_4: 0.4138 (0.4193)  loss_giou_dn_0: 0.5377 (0.5628)  loss_giou_dn_1: 0.4043 (0.4423)  loss_giou_dn_2: 0.3870 (0.4185)  loss_giou_dn_3: 0.3827 (0.4126)  loss_giou_dn_4: 0.3813 (0.4109)  loss_giou_dn_5: 0.3816 (0.4110)  loss_giou_enc_0: 0.5003 (0.5322)  loss_vfl: 0.5711 (0.6177)  loss_vfl_aux_0: 0.8341 (0.8624)  loss_vfl_aux_1: 0.6844 (0.7713)  loss_vfl_aux_2: 0.6428 (0.6978)  loss_vfl_aux_3: 0.6099 (0.6534)  loss_vfl_aux_4: 0.5788 (0.6277)  loss_vfl_dn_0: 0.4277 (0.4322)  loss_vfl_dn_1: 0.3738 (0.3806)  loss_vfl_dn_2: 0.3643 (0.3673)  loss_vfl_dn_3: 0.3609 (0.3637)  loss_vfl_dn_4: 0.3601 (0.3620)  loss_vfl_dn_5: 0.3598 (0.3618)  loss_vfl_enc_0: 0.8790 (0.9060)  time: 0.7827  data: 0.0095  max mem: 15225
Epoch: [3]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 14.9793 (15.9917)  loss_bbox: 0.1869 (0.1931)  loss_bbox_aux_0: 0.2021 (0.2092)  loss_bbox_aux_1: 0.1857 (0.1952)  loss_bbox_aux_2: 0.1853 (0.1930)  loss_bbox_aux_3: 0.1873 (0.1922)  loss_bbox_aux_4: 0.1891 (0.1924)  loss_bbox_dn_0: 0.2846 (0.3038)  loss_bbox_dn_1: 0.2149 (0.2359)  loss_bbox_dn_2: 0.2014 (0.2211)  loss_bbox_dn_3: 0.1982 (0.2172)  loss_bbox_dn_4: 0.1950 (0.2163)  loss_bbox_dn_5: 0.1940 (0.2162)  loss_bbox_enc_0: 0.2388 (0.2507)  loss_giou: 0.4054 (0.4195)  loss_giou_aux_0: 0.4394 (0.4571)  loss_giou_aux_1: 0.4172 (0.4299)  loss_giou_aux_2: 0.4071 (0.4214)  loss_giou_aux_3: 0.4046 (0.4195)  loss_giou_aux_4: 0.4043 (0.4191)  loss_giou_dn_0: 0.5323 (0.5624)  loss_giou_dn_1: 0.4127 (0.4420)  loss_giou_dn_2: 0.3933 (0.4182)  loss_giou_dn_3: 0.3870 (0.4124)  loss_giou_dn_4: 0.3842 (0.4106)  loss_giou_dn_5: 0.3844 (0.4108)  loss_giou_enc_0: 0.4973 (0.5320)  loss_vfl: 0.5589 (0.6173)  loss_vfl_aux_0: 0.8028 (0.8617)  loss_vfl_aux_1: 0.6978 (0.7709)  loss_vfl_aux_2: 0.6456 (0.6975)  loss_vfl_aux_3: 0.5840 (0.6530)  loss_vfl_aux_4: 0.5613 (0.6273)  loss_vfl_dn_0: 0.4279 (0.4322)  loss_vfl_dn_1: 0.3727 (0.3806)  loss_vfl_dn_2: 0.3602 (0.3673)  loss_vfl_dn_3: 0.3574 (0.3636)  loss_vfl_dn_4: 0.3557 (0.3619)  loss_vfl_dn_5: 0.3559 (0.3617)  loss_vfl_enc_0: 0.8857 (0.9057)  time: 0.7710  data: 0.0089  max mem: 15225
Epoch: [3] Total time: 0:21:35 (0.8530 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 14.9793 (15.9917)  loss_bbox: 0.1869 (0.1931)  loss_bbox_aux_0: 0.2021 (0.2092)  loss_bbox_aux_1: 0.1857 (0.1952)  loss_bbox_aux_2: 0.1853 (0.1930)  loss_bbox_aux_3: 0.1873 (0.1922)  loss_bbox_aux_4: 0.1891 (0.1924)  loss_bbox_dn_0: 0.2846 (0.3038)  loss_bbox_dn_1: 0.2149 (0.2359)  loss_bbox_dn_2: 0.2014 (0.2211)  loss_bbox_dn_3: 0.1982 (0.2172)  loss_bbox_dn_4: 0.1950 (0.2163)  loss_bbox_dn_5: 0.1940 (0.2162)  loss_bbox_enc_0: 0.2388 (0.2507)  loss_giou: 0.4054 (0.4195)  loss_giou_aux_0: 0.4394 (0.4571)  loss_giou_aux_1: 0.4172 (0.4299)  loss_giou_aux_2: 0.4071 (0.4214)  loss_giou_aux_3: 0.4046 (0.4195)  loss_giou_aux_4: 0.4043 (0.4191)  loss_giou_dn_0: 0.5323 (0.5624)  loss_giou_dn_1: 0.4127 (0.4420)  loss_giou_dn_2: 0.3933 (0.4182)  loss_giou_dn_3: 0.3870 (0.4124)  loss_giou_dn_4: 0.3842 (0.4106)  loss_giou_dn_5: 0.3844 (0.4108)  loss_giou_enc_0: 0.4973 (0.5320)  loss_vfl: 0.5589 (0.6173)  loss_vfl_aux_0: 0.8028 (0.8617)  loss_vfl_aux_1: 0.6978 (0.7709)  loss_vfl_aux_2: 0.6456 (0.6975)  loss_vfl_aux_3: 0.5840 (0.6530)  loss_vfl_aux_4: 0.5613 (0.6273)  loss_vfl_dn_0: 0.4279 (0.4322)  loss_vfl_dn_1: 0.3727 (0.3806)  loss_vfl_dn_2: 0.3602 (0.3673)  loss_vfl_dn_3: 0.3574 (0.3636)  loss_vfl_dn_4: 0.3557 (0.3619)  loss_vfl_dn_5: 0.3559 (0.3617)  loss_vfl_enc_0: 0.8857 (0.9057)
Test:  [ 0/75]  eta: 0:03:23    time: 2.7115  data: 2.1200  max mem: 15225
Test:  [10/75]  eta: 0:00:50    time: 0.7819  data: 0.2151  max mem: 15225
Test:  [20/75]  eta: 0:00:39    time: 0.6241  data: 0.0317  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6234  data: 0.0257  max mem: 15225
Test:  [40/75]  eta: 0:00:23    time: 0.5911  data: 0.0221  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6120  data: 0.0303  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.5983  data: 0.0198  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.5970  data: 0.0161  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5909  data: 0.0169  max mem: 15225
Test: Total time: 0:00:47 (0.6339 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=11.96s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.443
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.666
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.495
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.047
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.588
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.510
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.677
best_stat: {'epoch': 2, 'coco_eval_bbox': 0.4528721068468995}
Epoch: [4]  [   0/1519]  eta: 4:20:18  lr: 0.000400  lr2: 0.000400  loss: 16.2551 (16.2551)  loss_bbox: 0.1640 (0.1640)  loss_bbox_aux_0: 0.1903 (0.1903)  loss_bbox_aux_1: 0.1787 (0.1787)  loss_bbox_aux_2: 0.1720 (0.1720)  loss_bbox_aux_3: 0.1672 (0.1672)  loss_bbox_aux_4: 0.1632 (0.1632)  loss_bbox_dn_0: 0.3485 (0.3485)  loss_bbox_dn_1: 0.2689 (0.2689)  loss_bbox_dn_2: 0.2475 (0.2475)  loss_bbox_dn_3: 0.2440 (0.2440)  loss_bbox_dn_4: 0.2423 (0.2423)  loss_bbox_dn_5: 0.2423 (0.2423)  loss_bbox_enc_0: 0.2353 (0.2353)  loss_giou: 0.3982 (0.3982)  loss_giou_aux_0: 0.4317 (0.4317)  loss_giou_aux_1: 0.4120 (0.4120)  loss_giou_aux_2: 0.4087 (0.4087)  loss_giou_aux_3: 0.4029 (0.4029)  loss_giou_aux_4: 0.4068 (0.4068)  loss_giou_dn_0: 0.5688 (0.5688)  loss_giou_dn_1: 0.4477 (0.4477)  loss_giou_dn_2: 0.4260 (0.4260)  loss_giou_dn_3: 0.4216 (0.4216)  loss_giou_dn_4: 0.4183 (0.4183)  loss_giou_dn_5: 0.4179 (0.4179)  loss_giou_enc_0: 0.5122 (0.5122)  loss_vfl: 0.6709 (0.6709)  loss_vfl_aux_0: 0.8792 (0.8792)  loss_vfl_aux_1: 0.7995 (0.7995)  loss_vfl_aux_2: 0.7566 (0.7566)  loss_vfl_aux_3: 0.7219 (0.7219)  loss_vfl_aux_4: 0.7020 (0.7020)  loss_vfl_dn_0: 0.4288 (0.4288)  loss_vfl_dn_1: 0.3795 (0.3795)  loss_vfl_dn_2: 0.3668 (0.3668)  loss_vfl_dn_3: 0.3640 (0.3640)  loss_vfl_dn_4: 0.3612 (0.3612)  loss_vfl_dn_5: 0.3600 (0.3600)  loss_vfl_enc_0: 0.9280 (0.9280)  time: 10.2822  data: 6.2433  max mem: 15225
Epoch: [4]  [ 100/1519]  eta: 0:24:19  lr: 0.000400  lr2: 0.000400  loss: 15.4673 (15.4620)  loss_bbox: 0.1756 (0.1817)  loss_bbox_aux_0: 0.1944 (0.1962)  loss_bbox_aux_1: 0.1795 (0.1845)  loss_bbox_aux_2: 0.1803 (0.1825)  loss_bbox_aux_3: 0.1801 (0.1814)  loss_bbox_aux_4: 0.1825 (0.1804)  loss_bbox_dn_0: 0.2735 (0.2845)  loss_bbox_dn_1: 0.2159 (0.2206)  loss_bbox_dn_2: 0.1990 (0.2080)  loss_bbox_dn_3: 0.1957 (0.2046)  loss_bbox_dn_4: 0.1950 (0.2039)  loss_bbox_dn_5: 0.1950 (0.2038)  loss_bbox_enc_0: 0.2347 (0.2349)  loss_giou: 0.4147 (0.4115)  loss_giou_aux_0: 0.4456 (0.4442)  loss_giou_aux_1: 0.4260 (0.4201)  loss_giou_aux_2: 0.4159 (0.4145)  loss_giou_aux_3: 0.4079 (0.4114)  loss_giou_aux_4: 0.4142 (0.4113)  loss_giou_dn_0: 0.5452 (0.5462)  loss_giou_dn_1: 0.4411 (0.4290)  loss_giou_dn_2: 0.4216 (0.4073)  loss_giou_dn_3: 0.4153 (0.4022)  loss_giou_dn_4: 0.4114 (0.4006)  loss_giou_dn_5: 0.4112 (0.4008)  loss_giou_enc_0: 0.5215 (0.5132)  loss_vfl: 0.6069 (0.6042)  loss_vfl_aux_0: 0.8300 (0.8275)  loss_vfl_aux_1: 0.7280 (0.7218)  loss_vfl_aux_2: 0.6597 (0.6606)  loss_vfl_aux_3: 0.6268 (0.6322)  loss_vfl_aux_4: 0.5955 (0.6116)  loss_vfl_dn_0: 0.4257 (0.4275)  loss_vfl_dn_1: 0.3763 (0.3754)  loss_vfl_dn_2: 0.3653 (0.3630)  loss_vfl_dn_3: 0.3617 (0.3596)  loss_vfl_dn_4: 0.3602 (0.3581)  loss_vfl_dn_5: 0.3602 (0.3580)  loss_vfl_enc_0: 0.8808 (0.8834)  time: 0.8348  data: 0.0099  max mem: 15225
Epoch: [4]  [ 200/1519]  eta: 0:20:42  lr: 0.000400  lr2: 0.000400  loss: 15.5342 (15.5332)  loss_bbox: 0.1865 (0.1866)  loss_bbox_aux_0: 0.1891 (0.1981)  loss_bbox_aux_1: 0.1839 (0.1881)  loss_bbox_aux_2: 0.1864 (0.1866)  loss_bbox_aux_3: 0.1864 (0.1863)  loss_bbox_aux_4: 0.1875 (0.1856)  loss_bbox_dn_0: 0.2725 (0.2906)  loss_bbox_dn_1: 0.2123 (0.2257)  loss_bbox_dn_2: 0.2040 (0.2120)  loss_bbox_dn_3: 0.2001 (0.2084)  loss_bbox_dn_4: 0.1999 (0.2076)  loss_bbox_dn_5: 0.2002 (0.2075)  loss_bbox_enc_0: 0.2279 (0.2391)  loss_giou: 0.4019 (0.4120)  loss_giou_aux_0: 0.4290 (0.4411)  loss_giou_aux_1: 0.4105 (0.4187)  loss_giou_aux_2: 0.4069 (0.4135)  loss_giou_aux_3: 0.4116 (0.4123)  loss_giou_aux_4: 0.4009 (0.4119)  loss_giou_dn_0: 0.5449 (0.5466)  loss_giou_dn_1: 0.4239 (0.4296)  loss_giou_dn_2: 0.3953 (0.4075)  loss_giou_dn_3: 0.3961 (0.4023)  loss_giou_dn_4: 0.3953 (0.4007)  loss_giou_dn_5: 0.3956 (0.4008)  loss_giou_enc_0: 0.4915 (0.5118)  loss_vfl: 0.5726 (0.5996)  loss_vfl_aux_0: 0.8290 (0.8356)  loss_vfl_aux_1: 0.7423 (0.7354)  loss_vfl_aux_2: 0.6608 (0.6646)  loss_vfl_aux_3: 0.6109 (0.6277)  loss_vfl_aux_4: 0.5822 (0.6072)  loss_vfl_dn_0: 0.4297 (0.4283)  loss_vfl_dn_1: 0.3794 (0.3762)  loss_vfl_dn_2: 0.3654 (0.3637)  loss_vfl_dn_3: 0.3594 (0.3603)  loss_vfl_dn_4: 0.3577 (0.3588)  loss_vfl_dn_5: 0.3579 (0.3587)  loss_vfl_enc_0: 0.8938 (0.8858)  time: 0.8374  data: 0.0102  max mem: 15225
Epoch: [4]  [ 300/1519]  eta: 0:18:26  lr: 0.000400  lr2: 0.000400  loss: 15.5233 (15.5247)  loss_bbox: 0.1918 (0.1862)  loss_bbox_aux_0: 0.2042 (0.1985)  loss_bbox_aux_1: 0.1800 (0.1880)  loss_bbox_aux_2: 0.1808 (0.1863)  loss_bbox_aux_3: 0.1830 (0.1860)  loss_bbox_aux_4: 0.1819 (0.1852)  loss_bbox_dn_0: 0.2887 (0.2886)  loss_bbox_dn_1: 0.2155 (0.2237)  loss_bbox_dn_2: 0.2050 (0.2103)  loss_bbox_dn_3: 0.2016 (0.2068)  loss_bbox_dn_4: 0.1999 (0.2061)  loss_bbox_dn_5: 0.1997 (0.2060)  loss_bbox_enc_0: 0.2417 (0.2395)  loss_giou: 0.4140 (0.4124)  loss_giou_aux_0: 0.4505 (0.4432)  loss_giou_aux_1: 0.4201 (0.4197)  loss_giou_aux_2: 0.4074 (0.4142)  loss_giou_aux_3: 0.4099 (0.4128)  loss_giou_aux_4: 0.4105 (0.4120)  loss_giou_dn_0: 0.5699 (0.5476)  loss_giou_dn_1: 0.4345 (0.4297)  loss_giou_dn_2: 0.4156 (0.4075)  loss_giou_dn_3: 0.4044 (0.4023)  loss_giou_dn_4: 0.4039 (0.4007)  loss_giou_dn_5: 0.4035 (0.4009)  loss_giou_enc_0: 0.5172 (0.5138)  loss_vfl: 0.6121 (0.5995)  loss_vfl_aux_0: 0.7986 (0.8328)  loss_vfl_aux_1: 0.7217 (0.7364)  loss_vfl_aux_2: 0.6952 (0.6671)  loss_vfl_aux_3: 0.6459 (0.6285)  loss_vfl_aux_4: 0.6232 (0.6075)  loss_vfl_dn_0: 0.4320 (0.4286)  loss_vfl_dn_1: 0.3792 (0.3766)  loss_vfl_dn_2: 0.3673 (0.3642)  loss_vfl_dn_3: 0.3630 (0.3608)  loss_vfl_dn_4: 0.3627 (0.3593)  loss_vfl_dn_5: 0.3627 (0.3592)  loss_vfl_enc_0: 0.8371 (0.8761)  time: 0.8309  data: 0.0101  max mem: 15225
Epoch: [4]  [ 400/1519]  eta: 0:16:45  lr: 0.000400  lr2: 0.000400  loss: 15.5201 (15.5435)  loss_bbox: 0.1911 (0.1876)  loss_bbox_aux_0: 0.2061 (0.2000)  loss_bbox_aux_1: 0.1966 (0.1898)  loss_bbox_aux_2: 0.1913 (0.1872)  loss_bbox_aux_3: 0.1925 (0.1874)  loss_bbox_aux_4: 0.1910 (0.1867)  loss_bbox_dn_0: 0.2967 (0.2920)  loss_bbox_dn_1: 0.2331 (0.2269)  loss_bbox_dn_2: 0.2159 (0.2133)  loss_bbox_dn_3: 0.2119 (0.2098)  loss_bbox_dn_4: 0.2119 (0.2091)  loss_bbox_dn_5: 0.2116 (0.2090)  loss_bbox_enc_0: 0.2401 (0.2407)  loss_giou: 0.4149 (0.4119)  loss_giou_aux_0: 0.4285 (0.4429)  loss_giou_aux_1: 0.3992 (0.4198)  loss_giou_aux_2: 0.4056 (0.4135)  loss_giou_aux_3: 0.4113 (0.4121)  loss_giou_aux_4: 0.4103 (0.4115)  loss_giou_dn_0: 0.5267 (0.5470)  loss_giou_dn_1: 0.4232 (0.4301)  loss_giou_dn_2: 0.4032 (0.4078)  loss_giou_dn_3: 0.3975 (0.4024)  loss_giou_dn_4: 0.3957 (0.4009)  loss_giou_dn_5: 0.3961 (0.4011)  loss_giou_enc_0: 0.4983 (0.5131)  loss_vfl: 0.5785 (0.5974)  loss_vfl_aux_0: 0.8316 (0.8322)  loss_vfl_aux_1: 0.7332 (0.7358)  loss_vfl_aux_2: 0.6513 (0.6668)  loss_vfl_aux_3: 0.6070 (0.6277)  loss_vfl_aux_4: 0.5888 (0.6055)  loss_vfl_dn_0: 0.4237 (0.4285)  loss_vfl_dn_1: 0.3757 (0.3769)  loss_vfl_dn_2: 0.3629 (0.3645)  loss_vfl_dn_3: 0.3598 (0.3611)  loss_vfl_dn_4: 0.3583 (0.3596)  loss_vfl_dn_5: 0.3582 (0.3594)  loss_vfl_enc_0: 0.8695 (0.8746)  time: 0.9753  data: 0.0103  max mem: 15225
Epoch: [4]  [ 500/1519]  eta: 0:15:06  lr: 0.000400  lr2: 0.000400  loss: 15.4165 (15.5155)  loss_bbox: 0.1811 (0.1865)  loss_bbox_aux_0: 0.1907 (0.1991)  loss_bbox_aux_1: 0.1750 (0.1888)  loss_bbox_aux_2: 0.1707 (0.1863)  loss_bbox_aux_3: 0.1749 (0.1865)  loss_bbox_aux_4: 0.1747 (0.1857)  loss_bbox_dn_0: 0.2844 (0.2908)  loss_bbox_dn_1: 0.2170 (0.2258)  loss_bbox_dn_2: 0.2011 (0.2122)  loss_bbox_dn_3: 0.1960 (0.2087)  loss_bbox_dn_4: 0.1982 (0.2079)  loss_bbox_dn_5: 0.1973 (0.2078)  loss_bbox_enc_0: 0.2433 (0.2398)  loss_giou: 0.3955 (0.4113)  loss_giou_aux_0: 0.4222 (0.4412)  loss_giou_aux_1: 0.3995 (0.4193)  loss_giou_aux_2: 0.3971 (0.4132)  loss_giou_aux_3: 0.4075 (0.4118)  loss_giou_aux_4: 0.3935 (0.4108)  loss_giou_dn_0: 0.5534 (0.5457)  loss_giou_dn_1: 0.4199 (0.4294)  loss_giou_dn_2: 0.3929 (0.4072)  loss_giou_dn_3: 0.3859 (0.4017)  loss_giou_dn_4: 0.3874 (0.4001)  loss_giou_dn_5: 0.3867 (0.4003)  loss_giou_enc_0: 0.4995 (0.5124)  loss_vfl: 0.5799 (0.5962)  loss_vfl_aux_0: 0.8766 (0.8363)  loss_vfl_aux_1: 0.7589 (0.7344)  loss_vfl_aux_2: 0.6730 (0.6655)  loss_vfl_aux_3: 0.6080 (0.6267)  loss_vfl_aux_4: 0.5838 (0.6041)  loss_vfl_dn_0: 0.4270 (0.4281)  loss_vfl_dn_1: 0.3775 (0.3766)  loss_vfl_dn_2: 0.3623 (0.3642)  loss_vfl_dn_3: 0.3590 (0.3608)  loss_vfl_dn_4: 0.3563 (0.3592)  loss_vfl_dn_5: 0.3564 (0.3590)  loss_vfl_enc_0: 0.8751 (0.8742)  time: 0.8360  data: 0.0103  max mem: 15225
Epoch: [4]  [ 600/1519]  eta: 0:13:30  lr: 0.000400  lr2: 0.000400  loss: 15.5122 (15.5455)  loss_bbox: 0.1854 (0.1871)  loss_bbox_aux_0: 0.1886 (0.1986)  loss_bbox_aux_1: 0.1809 (0.1886)  loss_bbox_aux_2: 0.1779 (0.1867)  loss_bbox_aux_3: 0.1845 (0.1869)  loss_bbox_aux_4: 0.1836 (0.1864)  loss_bbox_dn_0: 0.2983 (0.2931)  loss_bbox_dn_1: 0.2191 (0.2272)  loss_bbox_dn_2: 0.1995 (0.2132)  loss_bbox_dn_3: 0.1975 (0.2096)  loss_bbox_dn_4: 0.1963 (0.2088)  loss_bbox_dn_5: 0.1965 (0.2087)  loss_bbox_enc_0: 0.2386 (0.2401)  loss_giou: 0.3916 (0.4108)  loss_giou_aux_0: 0.4286 (0.4396)  loss_giou_aux_1: 0.4027 (0.4185)  loss_giou_aux_2: 0.3901 (0.4123)  loss_giou_aux_3: 0.3924 (0.4112)  loss_giou_aux_4: 0.3959 (0.4104)  loss_giou_dn_0: 0.5487 (0.5463)  loss_giou_dn_1: 0.4276 (0.4297)  loss_giou_dn_2: 0.4014 (0.4069)  loss_giou_dn_3: 0.3935 (0.4014)  loss_giou_dn_4: 0.3916 (0.3998)  loss_giou_dn_5: 0.3916 (0.4000)  loss_giou_enc_0: 0.4972 (0.5116)  loss_vfl: 0.5778 (0.5953)  loss_vfl_aux_0: 0.8951 (0.8500)  loss_vfl_aux_1: 0.7766 (0.7436)  loss_vfl_aux_2: 0.6803 (0.6693)  loss_vfl_aux_3: 0.6046 (0.6272)  loss_vfl_aux_4: 0.5846 (0.6034)  loss_vfl_dn_0: 0.4278 (0.4285)  loss_vfl_dn_1: 0.3736 (0.3769)  loss_vfl_dn_2: 0.3589 (0.3642)  loss_vfl_dn_3: 0.3531 (0.3607)  loss_vfl_dn_4: 0.3530 (0.3591)  loss_vfl_dn_5: 0.3530 (0.3589)  loss_vfl_enc_0: 0.8549 (0.8747)  time: 0.8214  data: 0.0102  max mem: 15225
Epoch: [4]  [ 700/1519]  eta: 0:11:56  lr: 0.000400  lr2: 0.000400  loss: 15.3339 (15.5526)  loss_bbox: 0.2001 (0.1877)  loss_bbox_aux_0: 0.1913 (0.1989)  loss_bbox_aux_1: 0.2016 (0.1891)  loss_bbox_aux_2: 0.1928 (0.1874)  loss_bbox_aux_3: 0.1936 (0.1875)  loss_bbox_aux_4: 0.1898 (0.1870)  loss_bbox_dn_0: 0.2975 (0.2945)  loss_bbox_dn_1: 0.2322 (0.2283)  loss_bbox_dn_2: 0.2174 (0.2141)  loss_bbox_dn_3: 0.2132 (0.2105)  loss_bbox_dn_4: 0.2171 (0.2096)  loss_bbox_dn_5: 0.2169 (0.2096)  loss_bbox_enc_0: 0.2323 (0.2408)  loss_giou: 0.3847 (0.4104)  loss_giou_aux_0: 0.4213 (0.4396)  loss_giou_aux_1: 0.4037 (0.4186)  loss_giou_aux_2: 0.3943 (0.4122)  loss_giou_aux_3: 0.3951 (0.4111)  loss_giou_aux_4: 0.3819 (0.4102)  loss_giou_dn_0: 0.5312 (0.5465)  loss_giou_dn_1: 0.4183 (0.4298)  loss_giou_dn_2: 0.3942 (0.4070)  loss_giou_dn_3: 0.3898 (0.4014)  loss_giou_dn_4: 0.3865 (0.3998)  loss_giou_dn_5: 0.3866 (0.3999)  loss_giou_enc_0: 0.5037 (0.5117)  loss_vfl: 0.5872 (0.5949)  loss_vfl_aux_0: 0.8882 (0.8498)  loss_vfl_aux_1: 0.7640 (0.7426)  loss_vfl_aux_2: 0.6725 (0.6694)  loss_vfl_aux_3: 0.6135 (0.6267)  loss_vfl_aux_4: 0.6023 (0.6027)  loss_vfl_dn_0: 0.4288 (0.4286)  loss_vfl_dn_1: 0.3774 (0.3769)  loss_vfl_dn_2: 0.3620 (0.3641)  loss_vfl_dn_3: 0.3585 (0.3606)  loss_vfl_dn_4: 0.3572 (0.3589)  loss_vfl_dn_5: 0.3560 (0.3588)  loss_vfl_enc_0: 0.9055 (0.8753)  time: 0.8381  data: 0.0097  max mem: 15225
Epoch: [4]  [ 800/1519]  eta: 0:10:31  lr: 0.000400  lr2: 0.000400  loss: 15.4677 (15.5324)  loss_bbox: 0.1862 (0.1875)  loss_bbox_aux_0: 0.1986 (0.1992)  loss_bbox_aux_1: 0.1839 (0.1887)  loss_bbox_aux_2: 0.1771 (0.1869)  loss_bbox_aux_3: 0.1846 (0.1871)  loss_bbox_aux_4: 0.1838 (0.1869)  loss_bbox_dn_0: 0.2922 (0.2946)  loss_bbox_dn_1: 0.2323 (0.2283)  loss_bbox_dn_2: 0.2120 (0.2140)  loss_bbox_dn_3: 0.2068 (0.2105)  loss_bbox_dn_4: 0.2055 (0.2096)  loss_bbox_dn_5: 0.2057 (0.2095)  loss_bbox_enc_0: 0.2362 (0.2410)  loss_giou: 0.4005 (0.4095)  loss_giou_aux_0: 0.4389 (0.4394)  loss_giou_aux_1: 0.4087 (0.4177)  loss_giou_aux_2: 0.3994 (0.4111)  loss_giou_aux_3: 0.4121 (0.4099)  loss_giou_aux_4: 0.4062 (0.4092)  loss_giou_dn_0: 0.5365 (0.5461)  loss_giou_dn_1: 0.4169 (0.4290)  loss_giou_dn_2: 0.3987 (0.4062)  loss_giou_dn_3: 0.3921 (0.4007)  loss_giou_dn_4: 0.3905 (0.3991)  loss_giou_dn_5: 0.3916 (0.3993)  loss_giou_enc_0: 0.5074 (0.5111)  loss_vfl: 0.5737 (0.5937)  loss_vfl_aux_0: 0.8315 (0.8475)  loss_vfl_aux_1: 0.7400 (0.7427)  loss_vfl_aux_2: 0.6464 (0.6687)  loss_vfl_aux_3: 0.6187 (0.6261)  loss_vfl_aux_4: 0.5779 (0.6016)  loss_vfl_dn_0: 0.4266 (0.4286)  loss_vfl_dn_1: 0.3748 (0.3767)  loss_vfl_dn_2: 0.3603 (0.3638)  loss_vfl_dn_3: 0.3577 (0.3602)  loss_vfl_dn_4: 0.3557 (0.3586)  loss_vfl_dn_5: 0.3568 (0.3584)  loss_vfl_enc_0: 0.8497 (0.8735)  time: 0.9111  data: 0.0106  max mem: 15225
Epoch: [4]  [ 900/1519]  eta: 0:09:01  lr: 0.000400  lr2: 0.000400  loss: 15.7133 (15.5466)  loss_bbox: 0.1803 (0.1876)  loss_bbox_aux_0: 0.2099 (0.1996)  loss_bbox_aux_1: 0.1856 (0.1888)  loss_bbox_aux_2: 0.1766 (0.1872)  loss_bbox_aux_3: 0.1826 (0.1872)  loss_bbox_aux_4: 0.1847 (0.1870)  loss_bbox_dn_0: 0.3034 (0.2945)  loss_bbox_dn_1: 0.2278 (0.2281)  loss_bbox_dn_2: 0.2185 (0.2141)  loss_bbox_dn_3: 0.2176 (0.2105)  loss_bbox_dn_4: 0.2182 (0.2097)  loss_bbox_dn_5: 0.2191 (0.2096)  loss_bbox_enc_0: 0.2351 (0.2408)  loss_giou: 0.3921 (0.4098)  loss_giou_aux_0: 0.4346 (0.4406)  loss_giou_aux_1: 0.4070 (0.4183)  loss_giou_aux_2: 0.3949 (0.4115)  loss_giou_aux_3: 0.3918 (0.4101)  loss_giou_aux_4: 0.3922 (0.4095)  loss_giou_dn_0: 0.5319 (0.5463)  loss_giou_dn_1: 0.4187 (0.4291)  loss_giou_dn_2: 0.4030 (0.4063)  loss_giou_dn_3: 0.3996 (0.4009)  loss_giou_dn_4: 0.3984 (0.3993)  loss_giou_dn_5: 0.3983 (0.3995)  loss_giou_enc_0: 0.4802 (0.5111)  loss_vfl: 0.6273 (0.5942)  loss_vfl_aux_0: 0.8390 (0.8492)  loss_vfl_aux_1: 0.7798 (0.7469)  loss_vfl_aux_2: 0.6835 (0.6706)  loss_vfl_aux_3: 0.6626 (0.6271)  loss_vfl_aux_4: 0.6167 (0.6021)  loss_vfl_dn_0: 0.4330 (0.4287)  loss_vfl_dn_1: 0.3780 (0.3768)  loss_vfl_dn_2: 0.3650 (0.3638)  loss_vfl_dn_3: 0.3632 (0.3603)  loss_vfl_dn_4: 0.3607 (0.3587)  loss_vfl_dn_5: 0.3602 (0.3585)  loss_vfl_enc_0: 0.8648 (0.8727)  time: 0.8223  data: 0.0109  max mem: 15225
Epoch: [4]  [1000/1519]  eta: 0:07:31  lr: 0.000400  lr2: 0.000400  loss: 15.1871 (15.5443)  loss_bbox: 0.1790 (0.1875)  loss_bbox_aux_0: 0.1907 (0.1997)  loss_bbox_aux_1: 0.1784 (0.1885)  loss_bbox_aux_2: 0.1772 (0.1869)  loss_bbox_aux_3: 0.1852 (0.1872)  loss_bbox_aux_4: 0.1782 (0.1869)  loss_bbox_dn_0: 0.2735 (0.2943)  loss_bbox_dn_1: 0.2173 (0.2279)  loss_bbox_dn_2: 0.2067 (0.2137)  loss_bbox_dn_3: 0.2021 (0.2102)  loss_bbox_dn_4: 0.2027 (0.2093)  loss_bbox_dn_5: 0.2032 (0.2093)  loss_bbox_enc_0: 0.2360 (0.2400)  loss_giou: 0.3979 (0.4095)  loss_giou_aux_0: 0.4457 (0.4410)  loss_giou_aux_1: 0.4209 (0.4181)  loss_giou_aux_2: 0.4054 (0.4113)  loss_giou_aux_3: 0.4038 (0.4099)  loss_giou_aux_4: 0.4044 (0.4092)  loss_giou_dn_0: 0.5379 (0.5460)  loss_giou_dn_1: 0.4265 (0.4288)  loss_giou_dn_2: 0.4014 (0.4061)  loss_giou_dn_3: 0.3945 (0.4006)  loss_giou_dn_4: 0.3905 (0.3990)  loss_giou_dn_5: 0.3903 (0.3992)  loss_giou_enc_0: 0.4977 (0.5097)  loss_vfl: 0.5640 (0.5942)  loss_vfl_aux_0: 0.8453 (0.8499)  loss_vfl_aux_1: 0.7616 (0.7504)  loss_vfl_aux_2: 0.6599 (0.6713)  loss_vfl_aux_3: 0.6037 (0.6270)  loss_vfl_aux_4: 0.5801 (0.6021)  loss_vfl_dn_0: 0.4312 (0.4289)  loss_vfl_dn_1: 0.3760 (0.3768)  loss_vfl_dn_2: 0.3631 (0.3638)  loss_vfl_dn_3: 0.3583 (0.3603)  loss_vfl_dn_4: 0.3568 (0.3587)  loss_vfl_dn_5: 0.3561 (0.3585)  loss_vfl_enc_0: 0.8396 (0.8727)  time: 0.8217  data: 0.0101  max mem: 15225
Epoch: [4]  [1100/1519]  eta: 0:06:03  lr: 0.000400  lr2: 0.000400  loss: 15.6785 (15.5706)  loss_bbox: 0.1909 (0.1882)  loss_bbox_aux_0: 0.2060 (0.2001)  loss_bbox_aux_1: 0.1957 (0.1890)  loss_bbox_aux_2: 0.1943 (0.1874)  loss_bbox_aux_3: 0.1905 (0.1876)  loss_bbox_aux_4: 0.1927 (0.1877)  loss_bbox_dn_0: 0.2875 (0.2945)  loss_bbox_dn_1: 0.2114 (0.2280)  loss_bbox_dn_2: 0.1974 (0.2138)  loss_bbox_dn_3: 0.1952 (0.2103)  loss_bbox_dn_4: 0.1930 (0.2094)  loss_bbox_dn_5: 0.1929 (0.2094)  loss_bbox_enc_0: 0.2377 (0.2405)  loss_giou: 0.4290 (0.4106)  loss_giou_aux_0: 0.4468 (0.4414)  loss_giou_aux_1: 0.4340 (0.4190)  loss_giou_aux_2: 0.4188 (0.4120)  loss_giou_aux_3: 0.4166 (0.4107)  loss_giou_aux_4: 0.4243 (0.4103)  loss_giou_dn_0: 0.5517 (0.5460)  loss_giou_dn_1: 0.4299 (0.4293)  loss_giou_dn_2: 0.4091 (0.4066)  loss_giou_dn_3: 0.4045 (0.4011)  loss_giou_dn_4: 0.4038 (0.3995)  loss_giou_dn_5: 0.4036 (0.3996)  loss_giou_enc_0: 0.5041 (0.5100)  loss_vfl: 0.5759 (0.5941)  loss_vfl_aux_0: 0.9027 (0.8549)  loss_vfl_aux_1: 0.7965 (0.7555)  loss_vfl_aux_2: 0.6754 (0.6739)  loss_vfl_aux_3: 0.6147 (0.6280)  loss_vfl_aux_4: 0.5862 (0.6021)  loss_vfl_dn_0: 0.4326 (0.4291)  loss_vfl_dn_1: 0.3787 (0.3770)  loss_vfl_dn_2: 0.3649 (0.3640)  loss_vfl_dn_3: 0.3618 (0.3604)  loss_vfl_dn_4: 0.3597 (0.3588)  loss_vfl_dn_5: 0.3595 (0.3586)  loss_vfl_enc_0: 0.8346 (0.8720)  time: 0.8310  data: 0.0097  max mem: 15225
Epoch: [4]  [1200/1519]  eta: 0:04:37  lr: 0.000400  lr2: 0.000400  loss: 15.0731 (15.5619)  loss_bbox: 0.1733 (0.1879)  loss_bbox_aux_0: 0.1916 (0.2002)  loss_bbox_aux_1: 0.1760 (0.1885)  loss_bbox_aux_2: 0.1756 (0.1870)  loss_bbox_aux_3: 0.1713 (0.1873)  loss_bbox_aux_4: 0.1710 (0.1874)  loss_bbox_dn_0: 0.2663 (0.2939)  loss_bbox_dn_1: 0.2088 (0.2275)  loss_bbox_dn_2: 0.1971 (0.2134)  loss_bbox_dn_3: 0.1946 (0.2098)  loss_bbox_dn_4: 0.1922 (0.2090)  loss_bbox_dn_5: 0.1917 (0.2089)  loss_bbox_enc_0: 0.2328 (0.2401)  loss_giou: 0.4033 (0.4106)  loss_giou_aux_0: 0.4464 (0.4420)  loss_giou_aux_1: 0.4142 (0.4189)  loss_giou_aux_2: 0.3964 (0.4118)  loss_giou_aux_3: 0.3939 (0.4105)  loss_giou_aux_4: 0.3961 (0.4103)  loss_giou_dn_0: 0.5318 (0.5458)  loss_giou_dn_1: 0.4188 (0.4291)  loss_giou_dn_2: 0.4027 (0.4063)  loss_giou_dn_3: 0.3939 (0.4008)  loss_giou_dn_4: 0.3930 (0.3992)  loss_giou_dn_5: 0.3931 (0.3994)  loss_giou_enc_0: 0.5143 (0.5098)  loss_vfl: 0.5909 (0.5937)  loss_vfl_aux_0: 0.8004 (0.8533)  loss_vfl_aux_1: 0.7420 (0.7573)  loss_vfl_aux_2: 0.6826 (0.6745)  loss_vfl_aux_3: 0.6252 (0.6281)  loss_vfl_aux_4: 0.5931 (0.6016)  loss_vfl_dn_0: 0.4240 (0.4291)  loss_vfl_dn_1: 0.3687 (0.3769)  loss_vfl_dn_2: 0.3578 (0.3639)  loss_vfl_dn_3: 0.3542 (0.3603)  loss_vfl_dn_4: 0.3526 (0.3587)  loss_vfl_dn_5: 0.3528 (0.3585)  loss_vfl_enc_0: 0.8241 (0.8706)  time: 0.8174  data: 0.0103  max mem: 15225
Epoch: [4]  [1300/1519]  eta: 0:03:09  lr: 0.000400  lr2: 0.000400  loss: 15.4046 (15.5572)  loss_bbox: 0.1948 (0.1882)  loss_bbox_aux_0: 0.2029 (0.2002)  loss_bbox_aux_1: 0.1928 (0.1886)  loss_bbox_aux_2: 0.1861 (0.1871)  loss_bbox_aux_3: 0.1923 (0.1875)  loss_bbox_aux_4: 0.1960 (0.1877)  loss_bbox_dn_0: 0.2852 (0.2938)  loss_bbox_dn_1: 0.2166 (0.2274)  loss_bbox_dn_2: 0.2048 (0.2133)  loss_bbox_dn_3: 0.2037 (0.2097)  loss_bbox_dn_4: 0.2044 (0.2089)  loss_bbox_dn_5: 0.2050 (0.2088)  loss_bbox_enc_0: 0.2400 (0.2402)  loss_giou: 0.4188 (0.4106)  loss_giou_aux_0: 0.4360 (0.4419)  loss_giou_aux_1: 0.4275 (0.4190)  loss_giou_aux_2: 0.4226 (0.4120)  loss_giou_aux_3: 0.4188 (0.4106)  loss_giou_aux_4: 0.4131 (0.4103)  loss_giou_dn_0: 0.5389 (0.5455)  loss_giou_dn_1: 0.4156 (0.4288)  loss_giou_dn_2: 0.3979 (0.4060)  loss_giou_dn_3: 0.3927 (0.4006)  loss_giou_dn_4: 0.3913 (0.3990)  loss_giou_dn_5: 0.3912 (0.3991)  loss_giou_enc_0: 0.4946 (0.5094)  loss_vfl: 0.5809 (0.5930)  loss_vfl_aux_0: 0.8719 (0.8527)  loss_vfl_aux_1: 0.7869 (0.7576)  loss_vfl_aux_2: 0.6828 (0.6739)  loss_vfl_aux_3: 0.6177 (0.6274)  loss_vfl_aux_4: 0.5993 (0.6010)  loss_vfl_dn_0: 0.4297 (0.4290)  loss_vfl_dn_1: 0.3757 (0.3768)  loss_vfl_dn_2: 0.3626 (0.3638)  loss_vfl_dn_3: 0.3591 (0.3603)  loss_vfl_dn_4: 0.3573 (0.3586)  loss_vfl_dn_5: 0.3569 (0.3585)  loss_vfl_enc_0: 0.8785 (0.8701)  time: 0.8259  data: 0.0107  max mem: 15225
Epoch: [4]  [1400/1519]  eta: 0:01:42  lr: 0.000400  lr2: 0.000400  loss: 15.5010 (15.5616)  loss_bbox: 0.1934 (0.1885)  loss_bbox_aux_0: 0.1915 (0.2003)  loss_bbox_aux_1: 0.1834 (0.1887)  loss_bbox_aux_2: 0.1897 (0.1873)  loss_bbox_aux_3: 0.1899 (0.1878)  loss_bbox_aux_4: 0.1933 (0.1880)  loss_bbox_dn_0: 0.2939 (0.2939)  loss_bbox_dn_1: 0.2327 (0.2276)  loss_bbox_dn_2: 0.2172 (0.2136)  loss_bbox_dn_3: 0.2116 (0.2101)  loss_bbox_dn_4: 0.2105 (0.2093)  loss_bbox_dn_5: 0.2109 (0.2092)  loss_bbox_enc_0: 0.2304 (0.2404)  loss_giou: 0.4081 (0.4105)  loss_giou_aux_0: 0.4341 (0.4415)  loss_giou_aux_1: 0.4132 (0.4188)  loss_giou_aux_2: 0.4081 (0.4117)  loss_giou_aux_3: 0.4049 (0.4105)  loss_giou_aux_4: 0.4107 (0.4102)  loss_giou_dn_0: 0.5235 (0.5448)  loss_giou_dn_1: 0.4186 (0.4284)  loss_giou_dn_2: 0.3957 (0.4059)  loss_giou_dn_3: 0.3894 (0.4005)  loss_giou_dn_4: 0.3878 (0.3989)  loss_giou_dn_5: 0.3893 (0.3990)  loss_giou_enc_0: 0.4868 (0.5090)  loss_vfl: 0.5523 (0.5932)  loss_vfl_aux_0: 0.8510 (0.8534)  loss_vfl_aux_1: 0.7853 (0.7605)  loss_vfl_aux_2: 0.6688 (0.6751)  loss_vfl_aux_3: 0.6145 (0.6281)  loss_vfl_aux_4: 0.5706 (0.6014)  loss_vfl_dn_0: 0.4276 (0.4289)  loss_vfl_dn_1: 0.3749 (0.3766)  loss_vfl_dn_2: 0.3628 (0.3637)  loss_vfl_dn_3: 0.3590 (0.3602)  loss_vfl_dn_4: 0.3562 (0.3585)  loss_vfl_dn_5: 0.3556 (0.3584)  loss_vfl_enc_0: 0.8569 (0.8693)  time: 0.8263  data: 0.0105  max mem: 15225
Epoch: [4]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 15.1672 (15.5444)  loss_bbox: 0.1777 (0.1882)  loss_bbox_aux_0: 0.1981 (0.2001)  loss_bbox_aux_1: 0.1878 (0.1886)  loss_bbox_aux_2: 0.1847 (0.1871)  loss_bbox_aux_3: 0.1815 (0.1874)  loss_bbox_aux_4: 0.1766 (0.1877)  loss_bbox_dn_0: 0.3021 (0.2934)  loss_bbox_dn_1: 0.2315 (0.2273)  loss_bbox_dn_2: 0.2248 (0.2133)  loss_bbox_dn_3: 0.2139 (0.2097)  loss_bbox_dn_4: 0.2128 (0.2089)  loss_bbox_dn_5: 0.2134 (0.2088)  loss_bbox_enc_0: 0.2347 (0.2402)  loss_giou: 0.3951 (0.4103)  loss_giou_aux_0: 0.4412 (0.4414)  loss_giou_aux_1: 0.4042 (0.4187)  loss_giou_aux_2: 0.3883 (0.4116)  loss_giou_aux_3: 0.3913 (0.4102)  loss_giou_aux_4: 0.3944 (0.4099)  loss_giou_dn_0: 0.5531 (0.5441)  loss_giou_dn_1: 0.4293 (0.4278)  loss_giou_dn_2: 0.4004 (0.4053)  loss_giou_dn_3: 0.3954 (0.3999)  loss_giou_dn_4: 0.3931 (0.3983)  loss_giou_dn_5: 0.3925 (0.3985)  loss_giou_enc_0: 0.4978 (0.5088)  loss_vfl: 0.5611 (0.5925)  loss_vfl_aux_0: 0.8064 (0.8522)  loss_vfl_aux_1: 0.7240 (0.7589)  loss_vfl_aux_2: 0.6433 (0.6736)  loss_vfl_aux_3: 0.6009 (0.6271)  loss_vfl_aux_4: 0.5773 (0.6007)  loss_vfl_dn_0: 0.4299 (0.4288)  loss_vfl_dn_1: 0.3800 (0.3764)  loss_vfl_dn_2: 0.3675 (0.3635)  loss_vfl_dn_3: 0.3624 (0.3601)  loss_vfl_dn_4: 0.3609 (0.3584)  loss_vfl_dn_5: 0.3608 (0.3582)  loss_vfl_enc_0: 0.8558 (0.8685)  time: 0.8726  data: 0.0095  max mem: 15225
Epoch: [4]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 15.4729 (15.5437)  loss_bbox: 0.1748 (0.1881)  loss_bbox_aux_0: 0.1849 (0.2000)  loss_bbox_aux_1: 0.1784 (0.1885)  loss_bbox_aux_2: 0.1761 (0.1871)  loss_bbox_aux_3: 0.1798 (0.1873)  loss_bbox_aux_4: 0.1757 (0.1876)  loss_bbox_dn_0: 0.3020 (0.2933)  loss_bbox_dn_1: 0.2210 (0.2272)  loss_bbox_dn_2: 0.2076 (0.2132)  loss_bbox_dn_3: 0.2070 (0.2097)  loss_bbox_dn_4: 0.2055 (0.2089)  loss_bbox_dn_5: 0.2056 (0.2088)  loss_bbox_enc_0: 0.2214 (0.2400)  loss_giou: 0.4075 (0.4103)  loss_giou_aux_0: 0.4407 (0.4415)  loss_giou_aux_1: 0.4250 (0.4188)  loss_giou_aux_2: 0.4078 (0.4116)  loss_giou_aux_3: 0.3990 (0.4103)  loss_giou_aux_4: 0.3970 (0.4100)  loss_giou_dn_0: 0.5471 (0.5441)  loss_giou_dn_1: 0.4272 (0.4278)  loss_giou_dn_2: 0.4081 (0.4053)  loss_giou_dn_3: 0.4040 (0.3999)  loss_giou_dn_4: 0.4033 (0.3983)  loss_giou_dn_5: 0.4026 (0.3985)  loss_giou_enc_0: 0.4981 (0.5087)  loss_vfl: 0.5870 (0.5926)  loss_vfl_aux_0: 0.8283 (0.8521)  loss_vfl_aux_1: 0.7364 (0.7589)  loss_vfl_aux_2: 0.6587 (0.6735)  loss_vfl_aux_3: 0.6084 (0.6271)  loss_vfl_aux_4: 0.5997 (0.6008)  loss_vfl_dn_0: 0.4328 (0.4288)  loss_vfl_dn_1: 0.3794 (0.3764)  loss_vfl_dn_2: 0.3677 (0.3636)  loss_vfl_dn_3: 0.3628 (0.3601)  loss_vfl_dn_4: 0.3613 (0.3584)  loss_vfl_dn_5: 0.3599 (0.3583)  loss_vfl_enc_0: 0.8657 (0.8684)  time: 0.8531  data: 0.0087  max mem: 15225
Epoch: [4] Total time: 0:21:53 (0.8649 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 15.4729 (15.5437)  loss_bbox: 0.1748 (0.1881)  loss_bbox_aux_0: 0.1849 (0.2000)  loss_bbox_aux_1: 0.1784 (0.1885)  loss_bbox_aux_2: 0.1761 (0.1871)  loss_bbox_aux_3: 0.1798 (0.1873)  loss_bbox_aux_4: 0.1757 (0.1876)  loss_bbox_dn_0: 0.3020 (0.2933)  loss_bbox_dn_1: 0.2210 (0.2272)  loss_bbox_dn_2: 0.2076 (0.2132)  loss_bbox_dn_3: 0.2070 (0.2097)  loss_bbox_dn_4: 0.2055 (0.2089)  loss_bbox_dn_5: 0.2056 (0.2088)  loss_bbox_enc_0: 0.2214 (0.2400)  loss_giou: 0.4075 (0.4103)  loss_giou_aux_0: 0.4407 (0.4415)  loss_giou_aux_1: 0.4250 (0.4188)  loss_giou_aux_2: 0.4078 (0.4116)  loss_giou_aux_3: 0.3990 (0.4103)  loss_giou_aux_4: 0.3970 (0.4100)  loss_giou_dn_0: 0.5471 (0.5441)  loss_giou_dn_1: 0.4272 (0.4278)  loss_giou_dn_2: 0.4081 (0.4053)  loss_giou_dn_3: 0.4040 (0.3999)  loss_giou_dn_4: 0.4033 (0.3983)  loss_giou_dn_5: 0.4026 (0.3985)  loss_giou_enc_0: 0.4981 (0.5087)  loss_vfl: 0.5870 (0.5926)  loss_vfl_aux_0: 0.8283 (0.8521)  loss_vfl_aux_1: 0.7364 (0.7589)  loss_vfl_aux_2: 0.6587 (0.6735)  loss_vfl_aux_3: 0.6084 (0.6271)  loss_vfl_aux_4: 0.5997 (0.6008)  loss_vfl_dn_0: 0.4328 (0.4288)  loss_vfl_dn_1: 0.3794 (0.3764)  loss_vfl_dn_2: 0.3677 (0.3636)  loss_vfl_dn_3: 0.3628 (0.3601)  loss_vfl_dn_4: 0.3613 (0.3584)  loss_vfl_dn_5: 0.3599 (0.3583)  loss_vfl_enc_0: 0.8657 (0.8684)
Test:  [ 0/75]  eta: 0:03:09    time: 2.5266  data: 1.9258  max mem: 15225
Test:  [10/75]  eta: 0:00:50    time: 0.7736  data: 0.2064  max mem: 15225
Test:  [20/75]  eta: 0:00:39    time: 0.6313  data: 0.0310  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6237  data: 0.0209  max mem: 15225
Test:  [40/75]  eta: 0:00:23    time: 0.6095  data: 0.0232  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6136  data: 0.0304  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.5918  data: 0.0212  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.5893  data: 0.0177  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5828  data: 0.0188  max mem: 15225
Test: Total time: 0:00:47 (0.6312 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=11.36s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.439
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.671
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.486
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.077
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.466
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.428
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.582
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.661
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.533
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.670
best_stat: {'epoch': 2, 'coco_eval_bbox': 0.4528721068468995}
Epoch: [5]  [   0/1519]  eta: 5:07:40  lr: 0.000400  lr2: 0.000400  loss: 14.3865 (14.3865)  loss_bbox: 0.1476 (0.1476)  loss_bbox_aux_0: 0.1493 (0.1493)  loss_bbox_aux_1: 0.1536 (0.1536)  loss_bbox_aux_2: 0.1513 (0.1513)  loss_bbox_aux_3: 0.1504 (0.1504)  loss_bbox_aux_4: 0.1482 (0.1482)  loss_bbox_dn_0: 0.2318 (0.2318)  loss_bbox_dn_1: 0.1788 (0.1788)  loss_bbox_dn_2: 0.1722 (0.1722)  loss_bbox_dn_3: 0.1711 (0.1711)  loss_bbox_dn_4: 0.1678 (0.1678)  loss_bbox_dn_5: 0.1675 (0.1675)  loss_bbox_enc_0: 0.2018 (0.2018)  loss_giou: 0.3668 (0.3668)  loss_giou_aux_0: 0.3885 (0.3885)  loss_giou_aux_1: 0.3802 (0.3802)  loss_giou_aux_2: 0.3755 (0.3755)  loss_giou_aux_3: 0.3739 (0.3739)  loss_giou_aux_4: 0.3671 (0.3671)  loss_giou_dn_0: 0.5246 (0.5246)  loss_giou_dn_1: 0.4067 (0.4067)  loss_giou_dn_2: 0.3859 (0.3859)  loss_giou_dn_3: 0.3787 (0.3787)  loss_giou_dn_4: 0.3759 (0.3759)  loss_giou_dn_5: 0.3759 (0.3759)  loss_giou_enc_0: 0.4775 (0.4775)  loss_vfl: 0.5893 (0.5893)  loss_vfl_aux_0: 0.8177 (0.8177)  loss_vfl_aux_1: 0.7163 (0.7163)  loss_vfl_aux_2: 0.6294 (0.6294)  loss_vfl_aux_3: 0.6125 (0.6125)  loss_vfl_aux_4: 0.5949 (0.5949)  loss_vfl_dn_0: 0.4359 (0.4359)  loss_vfl_dn_1: 0.3747 (0.3747)  loss_vfl_dn_2: 0.3629 (0.3629)  loss_vfl_dn_3: 0.3591 (0.3591)  loss_vfl_dn_4: 0.3554 (0.3554)  loss_vfl_dn_5: 0.3549 (0.3549)  loss_vfl_enc_0: 0.8147 (0.8147)  time: 12.1529  data: 3.2337  max mem: 15225
Epoch: [5]  [ 100/1519]  eta: 0:22:38  lr: 0.000400  lr2: 0.000400  loss: 15.1711 (15.4685)  loss_bbox: 0.1769 (0.1886)  loss_bbox_aux_0: 0.1876 (0.2005)  loss_bbox_aux_1: 0.1830 (0.1894)  loss_bbox_aux_2: 0.1813 (0.1896)  loss_bbox_aux_3: 0.1795 (0.1890)  loss_bbox_aux_4: 0.1780 (0.1888)  loss_bbox_dn_0: 0.2863 (0.2966)  loss_bbox_dn_1: 0.2155 (0.2306)  loss_bbox_dn_2: 0.1999 (0.2169)  loss_bbox_dn_3: 0.1943 (0.2133)  loss_bbox_dn_4: 0.1948 (0.2124)  loss_bbox_dn_5: 0.1955 (0.2124)  loss_bbox_enc_0: 0.2430 (0.2404)  loss_giou: 0.3959 (0.4067)  loss_giou_aux_0: 0.4282 (0.4388)  loss_giou_aux_1: 0.4050 (0.4154)  loss_giou_aux_2: 0.4018 (0.4102)  loss_giou_aux_3: 0.3970 (0.4079)  loss_giou_aux_4: 0.3953 (0.4068)  loss_giou_dn_0: 0.5059 (0.5393)  loss_giou_dn_1: 0.4007 (0.4237)  loss_giou_dn_2: 0.3814 (0.4019)  loss_giou_dn_3: 0.3766 (0.3967)  loss_giou_dn_4: 0.3767 (0.3953)  loss_giou_dn_5: 0.3768 (0.3954)  loss_giou_enc_0: 0.4999 (0.5036)  loss_vfl: 0.5721 (0.5929)  loss_vfl_aux_0: 0.7741 (0.8469)  loss_vfl_aux_1: 0.7012 (0.7452)  loss_vfl_aux_2: 0.6096 (0.6559)  loss_vfl_aux_3: 0.5680 (0.6207)  loss_vfl_aux_4: 0.5665 (0.6007)  loss_vfl_dn_0: 0.4262 (0.4287)  loss_vfl_dn_1: 0.3728 (0.3746)  loss_vfl_dn_2: 0.3640 (0.3626)  loss_vfl_dn_3: 0.3584 (0.3588)  loss_vfl_dn_4: 0.3568 (0.3572)  loss_vfl_dn_5: 0.3569 (0.3571)  loss_vfl_enc_0: 0.8053 (0.8567)  time: 0.8318  data: 0.0102  max mem: 15225
Epoch: [5]  [ 200/1519]  eta: 0:19:53  lr: 0.000400  lr2: 0.000400  loss: 14.9643 (15.2961)  loss_bbox: 0.1764 (0.1862)  loss_bbox_aux_0: 0.1950 (0.1990)  loss_bbox_aux_1: 0.1834 (0.1872)  loss_bbox_aux_2: 0.1800 (0.1869)  loss_bbox_aux_3: 0.1813 (0.1864)  loss_bbox_aux_4: 0.1761 (0.1863)  loss_bbox_dn_0: 0.2739 (0.2898)  loss_bbox_dn_1: 0.2123 (0.2245)  loss_bbox_dn_2: 0.2019 (0.2110)  loss_bbox_dn_3: 0.2000 (0.2077)  loss_bbox_dn_4: 0.1961 (0.2069)  loss_bbox_dn_5: 0.1956 (0.2068)  loss_bbox_enc_0: 0.2429 (0.2401)  loss_giou: 0.3853 (0.4036)  loss_giou_aux_0: 0.4232 (0.4376)  loss_giou_aux_1: 0.3955 (0.4128)  loss_giou_aux_2: 0.3932 (0.4070)  loss_giou_aux_3: 0.3917 (0.4048)  loss_giou_aux_4: 0.3846 (0.4035)  loss_giou_dn_0: 0.5254 (0.5323)  loss_giou_dn_1: 0.4101 (0.4187)  loss_giou_dn_2: 0.3905 (0.3972)  loss_giou_dn_3: 0.3778 (0.3922)  loss_giou_dn_4: 0.3755 (0.3908)  loss_giou_dn_5: 0.3764 (0.3909)  loss_giou_enc_0: 0.5073 (0.5032)  loss_vfl: 0.5812 (0.5849)  loss_vfl_aux_0: 0.8259 (0.8308)  loss_vfl_aux_1: 0.6960 (0.7318)  loss_vfl_aux_2: 0.6487 (0.6491)  loss_vfl_aux_3: 0.5850 (0.6127)  loss_vfl_aux_4: 0.5916 (0.5931)  loss_vfl_dn_0: 0.4215 (0.4272)  loss_vfl_dn_1: 0.3704 (0.3739)  loss_vfl_dn_2: 0.3573 (0.3617)  loss_vfl_dn_3: 0.3538 (0.3582)  loss_vfl_dn_4: 0.3533 (0.3566)  loss_vfl_dn_5: 0.3536 (0.3564)  loss_vfl_enc_0: 0.8339 (0.8462)  time: 0.8355  data: 0.0096  max mem: 15225
Epoch: [5]  [ 300/1519]  eta: 0:17:57  lr: 0.000400  lr2: 0.000400  loss: 14.9594 (15.2187)  loss_bbox: 0.1681 (0.1841)  loss_bbox_aux_0: 0.1793 (0.1962)  loss_bbox_aux_1: 0.1677 (0.1856)  loss_bbox_aux_2: 0.1740 (0.1847)  loss_bbox_aux_3: 0.1725 (0.1841)  loss_bbox_aux_4: 0.1793 (0.1839)  loss_bbox_dn_0: 0.2714 (0.2867)  loss_bbox_dn_1: 0.2117 (0.2214)  loss_bbox_dn_2: 0.1976 (0.2082)  loss_bbox_dn_3: 0.1913 (0.2050)  loss_bbox_dn_4: 0.1885 (0.2041)  loss_bbox_dn_5: 0.1885 (0.2041)  loss_bbox_enc_0: 0.2225 (0.2386)  loss_giou: 0.3911 (0.4028)  loss_giou_aux_0: 0.4224 (0.4340)  loss_giou_aux_1: 0.3920 (0.4125)  loss_giou_aux_2: 0.3871 (0.4061)  loss_giou_aux_3: 0.3875 (0.4036)  loss_giou_aux_4: 0.3902 (0.4022)  loss_giou_dn_0: 0.5138 (0.5287)  loss_giou_dn_1: 0.4059 (0.4157)  loss_giou_dn_2: 0.3827 (0.3947)  loss_giou_dn_3: 0.3760 (0.3898)  loss_giou_dn_4: 0.3755 (0.3883)  loss_giou_dn_5: 0.3773 (0.3885)  loss_giou_enc_0: 0.4901 (0.5012)  loss_vfl: 0.5769 (0.5808)  loss_vfl_aux_0: 0.8051 (0.8263)  loss_vfl_aux_1: 0.7678 (0.7346)  loss_vfl_aux_2: 0.6530 (0.6496)  loss_vfl_aux_3: 0.6082 (0.6100)  loss_vfl_aux_4: 0.5798 (0.5894)  loss_vfl_dn_0: 0.4265 (0.4263)  loss_vfl_dn_1: 0.3687 (0.3729)  loss_vfl_dn_2: 0.3599 (0.3608)  loss_vfl_dn_3: 0.3556 (0.3575)  loss_vfl_dn_4: 0.3531 (0.3558)  loss_vfl_dn_5: 0.3535 (0.3556)  loss_vfl_enc_0: 0.8098 (0.8443)  time: 0.8415  data: 0.0106  max mem: 15225
Epoch: [5]  [ 400/1519]  eta: 0:16:43  lr: 0.000400  lr2: 0.000400  loss: 15.1530 (15.2038)  loss_bbox: 0.1680 (0.1831)  loss_bbox_aux_0: 0.1935 (0.1949)  loss_bbox_aux_1: 0.1840 (0.1841)  loss_bbox_aux_2: 0.1874 (0.1833)  loss_bbox_aux_3: 0.1821 (0.1829)  loss_bbox_aux_4: 0.1708 (0.1827)  loss_bbox_dn_0: 0.2816 (0.2857)  loss_bbox_dn_1: 0.2139 (0.2205)  loss_bbox_dn_2: 0.1998 (0.2073)  loss_bbox_dn_3: 0.1967 (0.2041)  loss_bbox_dn_4: 0.1954 (0.2032)  loss_bbox_dn_5: 0.1958 (0.2032)  loss_bbox_enc_0: 0.2233 (0.2369)  loss_giou: 0.3948 (0.4018)  loss_giou_aux_0: 0.4286 (0.4335)  loss_giou_aux_1: 0.4072 (0.4110)  loss_giou_aux_2: 0.4062 (0.4048)  loss_giou_aux_3: 0.4019 (0.4028)  loss_giou_aux_4: 0.3942 (0.4013)  loss_giou_dn_0: 0.5320 (0.5292)  loss_giou_dn_1: 0.4279 (0.4153)  loss_giou_dn_2: 0.4050 (0.3944)  loss_giou_dn_3: 0.3998 (0.3895)  loss_giou_dn_4: 0.3956 (0.3880)  loss_giou_dn_5: 0.3958 (0.3882)  loss_giou_enc_0: 0.5129 (0.4997)  loss_vfl: 0.5815 (0.5802)  loss_vfl_aux_0: 0.8492 (0.8276)  loss_vfl_aux_1: 0.7370 (0.7399)  loss_vfl_aux_2: 0.6287 (0.6524)  loss_vfl_aux_3: 0.6162 (0.6096)  loss_vfl_aux_4: 0.5882 (0.5885)  loss_vfl_dn_0: 0.4236 (0.4259)  loss_vfl_dn_1: 0.3736 (0.3726)  loss_vfl_dn_2: 0.3633 (0.3608)  loss_vfl_dn_3: 0.3600 (0.3575)  loss_vfl_dn_4: 0.3576 (0.3558)  loss_vfl_dn_5: 0.3583 (0.3556)  loss_vfl_enc_0: 0.8452 (0.8457)  time: 0.8489  data: 0.0093  max mem: 15225
Epoch: [5]  [ 500/1519]  eta: 0:15:01  lr: 0.000400  lr2: 0.000400  loss: 15.5092 (15.2012)  loss_bbox: 0.1771 (0.1830)  loss_bbox_aux_0: 0.1960 (0.1960)  loss_bbox_aux_1: 0.1763 (0.1844)  loss_bbox_aux_2: 0.1715 (0.1833)  loss_bbox_aux_3: 0.1753 (0.1829)  loss_bbox_aux_4: 0.1756 (0.1826)  loss_bbox_dn_0: 0.2893 (0.2858)  loss_bbox_dn_1: 0.2229 (0.2204)  loss_bbox_dn_2: 0.2078 (0.2070)  loss_bbox_dn_3: 0.2084 (0.2038)  loss_bbox_dn_4: 0.2093 (0.2029)  loss_bbox_dn_5: 0.2096 (0.2028)  loss_bbox_enc_0: 0.2290 (0.2364)  loss_giou: 0.3787 (0.4018)  loss_giou_aux_0: 0.4182 (0.4340)  loss_giou_aux_1: 0.3871 (0.4110)  loss_giou_aux_2: 0.3838 (0.4048)  loss_giou_aux_3: 0.3767 (0.4027)  loss_giou_aux_4: 0.3811 (0.4013)  loss_giou_dn_0: 0.5349 (0.5298)  loss_giou_dn_1: 0.4132 (0.4155)  loss_giou_dn_2: 0.3902 (0.3944)  loss_giou_dn_3: 0.3873 (0.3895)  loss_giou_dn_4: 0.3846 (0.3880)  loss_giou_dn_5: 0.3859 (0.3882)  loss_giou_enc_0: 0.4844 (0.4993)  loss_vfl: 0.6221 (0.5794)  loss_vfl_aux_0: 0.8666 (0.8271)  loss_vfl_aux_1: 0.7632 (0.7400)  loss_vfl_aux_2: 0.7233 (0.6527)  loss_vfl_aux_3: 0.6622 (0.6094)  loss_vfl_aux_4: 0.6291 (0.5877)  loss_vfl_dn_0: 0.4283 (0.4259)  loss_vfl_dn_1: 0.3710 (0.3728)  loss_vfl_dn_2: 0.3587 (0.3608)  loss_vfl_dn_3: 0.3538 (0.3575)  loss_vfl_dn_4: 0.3537 (0.3557)  loss_vfl_dn_5: 0.3532 (0.3556)  loss_vfl_enc_0: 0.8584 (0.8448)  time: 0.8577  data: 0.0094  max mem: 15225
Epoch: [5]  [ 600/1519]  eta: 0:13:24  lr: 0.000400  lr2: 0.000400  loss: 15.3545 (15.1963)  loss_bbox: 0.1795 (0.1826)  loss_bbox_aux_0: 0.2027 (0.1953)  loss_bbox_aux_1: 0.1819 (0.1835)  loss_bbox_aux_2: 0.1822 (0.1825)  loss_bbox_aux_3: 0.1702 (0.1822)  loss_bbox_aux_4: 0.1738 (0.1822)  loss_bbox_dn_0: 0.2871 (0.2858)  loss_bbox_dn_1: 0.2065 (0.2204)  loss_bbox_dn_2: 0.1946 (0.2070)  loss_bbox_dn_3: 0.1924 (0.2038)  loss_bbox_dn_4: 0.1923 (0.2029)  loss_bbox_dn_5: 0.1927 (0.2029)  loss_bbox_enc_0: 0.2333 (0.2354)  loss_giou: 0.3906 (0.4008)  loss_giou_aux_0: 0.4370 (0.4329)  loss_giou_aux_1: 0.4045 (0.4097)  loss_giou_aux_2: 0.4039 (0.4035)  loss_giou_aux_3: 0.3963 (0.4017)  loss_giou_aux_4: 0.3920 (0.4003)  loss_giou_dn_0: 0.5522 (0.5290)  loss_giou_dn_1: 0.4297 (0.4149)  loss_giou_dn_2: 0.3982 (0.3938)  loss_giou_dn_3: 0.3896 (0.3889)  loss_giou_dn_4: 0.3868 (0.3874)  loss_giou_dn_5: 0.3869 (0.3875)  loss_giou_enc_0: 0.4945 (0.4974)  loss_vfl: 0.5695 (0.5787)  loss_vfl_aux_0: 0.8494 (0.8339)  loss_vfl_aux_1: 0.7707 (0.7445)  loss_vfl_aux_2: 0.6507 (0.6551)  loss_vfl_aux_3: 0.6071 (0.6100)  loss_vfl_aux_4: 0.6027 (0.5874)  loss_vfl_dn_0: 0.4321 (0.4261)  loss_vfl_dn_1: 0.3751 (0.3726)  loss_vfl_dn_2: 0.3617 (0.3606)  loss_vfl_dn_3: 0.3570 (0.3572)  loss_vfl_dn_4: 0.3566 (0.3555)  loss_vfl_dn_5: 0.3558 (0.3553)  loss_vfl_enc_0: 0.8573 (0.8453)  time: 0.8236  data: 0.0092  max mem: 15225
Epoch: [5]  [ 700/1519]  eta: 0:11:58  lr: 0.000400  lr2: 0.000400  loss: 15.2435 (15.2214)  loss_bbox: 0.1814 (0.1824)  loss_bbox_aux_0: 0.2139 (0.1977)  loss_bbox_aux_1: 0.1837 (0.1836)  loss_bbox_aux_2: 0.1756 (0.1822)  loss_bbox_aux_3: 0.1824 (0.1820)  loss_bbox_aux_4: 0.1820 (0.1819)  loss_bbox_dn_0: 0.3000 (0.2868)  loss_bbox_dn_1: 0.2295 (0.2208)  loss_bbox_dn_2: 0.2099 (0.2073)  loss_bbox_dn_3: 0.2047 (0.2040)  loss_bbox_dn_4: 0.2043 (0.2031)  loss_bbox_dn_5: 0.2032 (0.2030)  loss_bbox_enc_0: 0.2240 (0.2347)  loss_giou: 0.3893 (0.4011)  loss_giou_aux_0: 0.4388 (0.4364)  loss_giou_aux_1: 0.3866 (0.4102)  loss_giou_aux_2: 0.3822 (0.4035)  loss_giou_aux_3: 0.3906 (0.4018)  loss_giou_aux_4: 0.3925 (0.4006)  loss_giou_dn_0: 0.5405 (0.5305)  loss_giou_dn_1: 0.4217 (0.4156)  loss_giou_dn_2: 0.3965 (0.3944)  loss_giou_dn_3: 0.3881 (0.3894)  loss_giou_dn_4: 0.3840 (0.3878)  loss_giou_dn_5: 0.3836 (0.3880)  loss_giou_enc_0: 0.4740 (0.4966)  loss_vfl: 0.5591 (0.5795)  loss_vfl_aux_0: 0.8794 (0.8389)  loss_vfl_aux_1: 0.7686 (0.7481)  loss_vfl_aux_2: 0.6388 (0.6574)  loss_vfl_aux_3: 0.6005 (0.6115)  loss_vfl_aux_4: 0.5713 (0.5887)  loss_vfl_dn_0: 0.4233 (0.4263)  loss_vfl_dn_1: 0.3729 (0.3728)  loss_vfl_dn_2: 0.3582 (0.3607)  loss_vfl_dn_3: 0.3556 (0.3573)  loss_vfl_dn_4: 0.3519 (0.3556)  loss_vfl_dn_5: 0.3511 (0.3554)  loss_vfl_enc_0: 0.8372 (0.8439)  time: 1.1147  data: 0.0095  max mem: 15225
Epoch: [5]  [ 800/1519]  eta: 0:10:28  lr: 0.000400  lr2: 0.000400  loss: 15.1275 (15.2037)  loss_bbox: 0.1638 (0.1818)  loss_bbox_aux_0: 0.1960 (0.1982)  loss_bbox_aux_1: 0.1750 (0.1834)  loss_bbox_aux_2: 0.1746 (0.1820)  loss_bbox_aux_3: 0.1717 (0.1816)  loss_bbox_aux_4: 0.1649 (0.1814)  loss_bbox_dn_0: 0.2970 (0.2872)  loss_bbox_dn_1: 0.2241 (0.2210)  loss_bbox_dn_2: 0.2086 (0.2074)  loss_bbox_dn_3: 0.2046 (0.2041)  loss_bbox_dn_4: 0.2057 (0.2032)  loss_bbox_dn_5: 0.2054 (0.2031)  loss_bbox_enc_0: 0.2206 (0.2340)  loss_giou: 0.3824 (0.4003)  loss_giou_aux_0: 0.4216 (0.4372)  loss_giou_aux_1: 0.3806 (0.4096)  loss_giou_aux_2: 0.3752 (0.4028)  loss_giou_aux_3: 0.3767 (0.4012)  loss_giou_aux_4: 0.3782 (0.3998)  loss_giou_dn_0: 0.5207 (0.5306)  loss_giou_dn_1: 0.4039 (0.4150)  loss_giou_dn_2: 0.3819 (0.3937)  loss_giou_dn_3: 0.3732 (0.3887)  loss_giou_dn_4: 0.3719 (0.3871)  loss_giou_dn_5: 0.3727 (0.3873)  loss_giou_enc_0: 0.4759 (0.4956)  loss_vfl: 0.5681 (0.5784)  loss_vfl_aux_0: 0.8206 (0.8384)  loss_vfl_aux_1: 0.7550 (0.7478)  loss_vfl_aux_2: 0.6698 (0.6556)  loss_vfl_aux_3: 0.6066 (0.6097)  loss_vfl_aux_4: 0.5878 (0.5873)  loss_vfl_dn_0: 0.4236 (0.4262)  loss_vfl_dn_1: 0.3685 (0.3726)  loss_vfl_dn_2: 0.3573 (0.3605)  loss_vfl_dn_3: 0.3537 (0.3571)  loss_vfl_dn_4: 0.3527 (0.3554)  loss_vfl_dn_5: 0.3523 (0.3552)  loss_vfl_enc_0: 0.8116 (0.8418)  time: 0.8150  data: 0.0092  max mem: 15225
Epoch: [5]  [ 900/1519]  eta: 0:08:57  lr: 0.000400  lr2: 0.000400  loss: 14.9353 (15.1922)  loss_bbox: 0.1817 (0.1814)  loss_bbox_aux_0: 0.1941 (0.1983)  loss_bbox_aux_1: 0.1841 (0.1829)  loss_bbox_aux_2: 0.1836 (0.1813)  loss_bbox_aux_3: 0.1838 (0.1812)  loss_bbox_aux_4: 0.1823 (0.1810)  loss_bbox_dn_0: 0.2880 (0.2869)  loss_bbox_dn_1: 0.2184 (0.2207)  loss_bbox_dn_2: 0.2009 (0.2070)  loss_bbox_dn_3: 0.1984 (0.2036)  loss_bbox_dn_4: 0.1991 (0.2027)  loss_bbox_dn_5: 0.1998 (0.2026)  loss_bbox_enc_0: 0.2367 (0.2340)  loss_giou: 0.3877 (0.4001)  loss_giou_aux_0: 0.4124 (0.4371)  loss_giou_aux_1: 0.3948 (0.4091)  loss_giou_aux_2: 0.3903 (0.4022)  loss_giou_aux_3: 0.3887 (0.4009)  loss_giou_aux_4: 0.3892 (0.3996)  loss_giou_dn_0: 0.5178 (0.5311)  loss_giou_dn_1: 0.4028 (0.4151)  loss_giou_dn_2: 0.3812 (0.3936)  loss_giou_dn_3: 0.3741 (0.3886)  loss_giou_dn_4: 0.3703 (0.3870)  loss_giou_dn_5: 0.3708 (0.3872)  loss_giou_enc_0: 0.4934 (0.4957)  loss_vfl: 0.5585 (0.5778)  loss_vfl_aux_0: 0.8317 (0.8387)  loss_vfl_aux_1: 0.7085 (0.7469)  loss_vfl_aux_2: 0.6259 (0.6554)  loss_vfl_aux_3: 0.5896 (0.6092)  loss_vfl_aux_4: 0.5753 (0.5866)  loss_vfl_dn_0: 0.4277 (0.4263)  loss_vfl_dn_1: 0.3700 (0.3726)  loss_vfl_dn_2: 0.3566 (0.3604)  loss_vfl_dn_3: 0.3540 (0.3570)  loss_vfl_dn_4: 0.3531 (0.3553)  loss_vfl_dn_5: 0.3525 (0.3551)  loss_vfl_enc_0: 0.8199 (0.8400)  time: 0.8277  data: 0.0093  max mem: 15225
Epoch: [5]  [1000/1519]  eta: 0:07:28  lr: 0.000400  lr2: 0.000400  loss: 15.6396 (15.2011)  loss_bbox: 0.1959 (0.1814)  loss_bbox_aux_0: 0.2136 (0.1985)  loss_bbox_aux_1: 0.1866 (0.1828)  loss_bbox_aux_2: 0.1904 (0.1813)  loss_bbox_aux_3: 0.1977 (0.1811)  loss_bbox_aux_4: 0.1950 (0.1811)  loss_bbox_dn_0: 0.2811 (0.2870)  loss_bbox_dn_1: 0.2157 (0.2206)  loss_bbox_dn_2: 0.2017 (0.2068)  loss_bbox_dn_3: 0.1998 (0.2034)  loss_bbox_dn_4: 0.1977 (0.2025)  loss_bbox_dn_5: 0.1984 (0.2024)  loss_bbox_enc_0: 0.2417 (0.2340)  loss_giou: 0.4101 (0.4001)  loss_giou_aux_0: 0.4652 (0.4372)  loss_giou_aux_1: 0.4234 (0.4091)  loss_giou_aux_2: 0.4094 (0.4022)  loss_giou_aux_3: 0.4174 (0.4009)  loss_giou_aux_4: 0.4111 (0.3997)  loss_giou_dn_0: 0.5570 (0.5317)  loss_giou_dn_1: 0.4288 (0.4154)  loss_giou_dn_2: 0.4022 (0.3936)  loss_giou_dn_3: 0.3921 (0.3886)  loss_giou_dn_4: 0.3884 (0.3871)  loss_giou_dn_5: 0.3878 (0.3872)  loss_giou_enc_0: 0.5220 (0.4961)  loss_vfl: 0.5922 (0.5777)  loss_vfl_aux_0: 0.8159 (0.8406)  loss_vfl_aux_1: 0.7599 (0.7514)  loss_vfl_aux_2: 0.6582 (0.6571)  loss_vfl_aux_3: 0.6414 (0.6096)  loss_vfl_aux_4: 0.6009 (0.5865)  loss_vfl_dn_0: 0.4320 (0.4265)  loss_vfl_dn_1: 0.3773 (0.3728)  loss_vfl_dn_2: 0.3643 (0.3604)  loss_vfl_dn_3: 0.3620 (0.3570)  loss_vfl_dn_4: 0.3599 (0.3553)  loss_vfl_dn_5: 0.3599 (0.3551)  loss_vfl_enc_0: 0.7947 (0.8392)  time: 0.8462  data: 0.0094  max mem: 15225
Epoch: [5]  [1100/1519]  eta: 0:06:03  lr: 0.000400  lr2: 0.000400  loss: 15.0929 (15.1866)  loss_bbox: 0.1704 (0.1813)  loss_bbox_aux_0: 0.1815 (0.1983)  loss_bbox_aux_1: 0.1810 (0.1827)  loss_bbox_aux_2: 0.1767 (0.1812)  loss_bbox_aux_3: 0.1734 (0.1810)  loss_bbox_aux_4: 0.1723 (0.1810)  loss_bbox_dn_0: 0.2917 (0.2864)  loss_bbox_dn_1: 0.2122 (0.2201)  loss_bbox_dn_2: 0.1986 (0.2063)  loss_bbox_dn_3: 0.1946 (0.2030)  loss_bbox_dn_4: 0.1952 (0.2021)  loss_bbox_dn_5: 0.1957 (0.2020)  loss_bbox_enc_0: 0.2186 (0.2336)  loss_giou: 0.3976 (0.4002)  loss_giou_aux_0: 0.4329 (0.4371)  loss_giou_aux_1: 0.4099 (0.4091)  loss_giou_aux_2: 0.4005 (0.4024)  loss_giou_aux_3: 0.4008 (0.4009)  loss_giou_aux_4: 0.3997 (0.3999)  loss_giou_dn_0: 0.5444 (0.5321)  loss_giou_dn_1: 0.4189 (0.4155)  loss_giou_dn_2: 0.3967 (0.3936)  loss_giou_dn_3: 0.3928 (0.3886)  loss_giou_dn_4: 0.3919 (0.3871)  loss_giou_dn_5: 0.3900 (0.3872)  loss_giou_enc_0: 0.4914 (0.4959)  loss_vfl: 0.5904 (0.5768)  loss_vfl_aux_0: 0.8448 (0.8379)  loss_vfl_aux_1: 0.7181 (0.7478)  loss_vfl_aux_2: 0.6515 (0.6553)  loss_vfl_aux_3: 0.6117 (0.6091)  loss_vfl_aux_4: 0.5935 (0.5854)  loss_vfl_dn_0: 0.4277 (0.4264)  loss_vfl_dn_1: 0.3736 (0.3728)  loss_vfl_dn_2: 0.3594 (0.3605)  loss_vfl_dn_3: 0.3569 (0.3570)  loss_vfl_dn_4: 0.3561 (0.3554)  loss_vfl_dn_5: 0.3563 (0.3552)  loss_vfl_enc_0: 0.8487 (0.8386)  time: 0.8492  data: 0.0104  max mem: 15225
Epoch: [5]  [1200/1519]  eta: 0:04:35  lr: 0.000400  lr2: 0.000400  loss: 15.1019 (15.1661)  loss_bbox: 0.1798 (0.1813)  loss_bbox_aux_0: 0.1969 (0.1983)  loss_bbox_aux_1: 0.1771 (0.1826)  loss_bbox_aux_2: 0.1801 (0.1813)  loss_bbox_aux_3: 0.1790 (0.1811)  loss_bbox_aux_4: 0.1820 (0.1811)  loss_bbox_dn_0: 0.2763 (0.2859)  loss_bbox_dn_1: 0.2140 (0.2196)  loss_bbox_dn_2: 0.2015 (0.2058)  loss_bbox_dn_3: 0.1961 (0.2025)  loss_bbox_dn_4: 0.1934 (0.2016)  loss_bbox_dn_5: 0.1940 (0.2015)  loss_bbox_enc_0: 0.2222 (0.2333)  loss_giou: 0.4020 (0.4001)  loss_giou_aux_0: 0.4465 (0.4366)  loss_giou_aux_1: 0.4133 (0.4088)  loss_giou_aux_2: 0.4050 (0.4022)  loss_giou_aux_3: 0.4044 (0.4008)  loss_giou_aux_4: 0.4030 (0.3998)  loss_giou_dn_0: 0.5449 (0.5316)  loss_giou_dn_1: 0.4245 (0.4151)  loss_giou_dn_2: 0.4029 (0.3933)  loss_giou_dn_3: 0.4007 (0.3883)  loss_giou_dn_4: 0.3976 (0.3868)  loss_giou_dn_5: 0.3987 (0.3870)  loss_giou_enc_0: 0.4966 (0.4956)  loss_vfl: 0.5662 (0.5753)  loss_vfl_aux_0: 0.8243 (0.8353)  loss_vfl_aux_1: 0.7365 (0.7452)  loss_vfl_aux_2: 0.6350 (0.6533)  loss_vfl_aux_3: 0.5811 (0.6071)  loss_vfl_aux_4: 0.5637 (0.5835)  loss_vfl_dn_0: 0.4284 (0.4262)  loss_vfl_dn_1: 0.3753 (0.3727)  loss_vfl_dn_2: 0.3615 (0.3604)  loss_vfl_dn_3: 0.3588 (0.3570)  loss_vfl_dn_4: 0.3583 (0.3553)  loss_vfl_dn_5: 0.3575 (0.3551)  loss_vfl_enc_0: 0.8237 (0.8378)  time: 0.8313  data: 0.0100  max mem: 15225
Epoch: [5]  [1300/1519]  eta: 0:03:08  lr: 0.000400  lr2: 0.000400  loss: 14.8796 (15.1487)  loss_bbox: 0.1819 (0.1813)  loss_bbox_aux_0: 0.1894 (0.1979)  loss_bbox_aux_1: 0.1733 (0.1826)  loss_bbox_aux_2: 0.1754 (0.1812)  loss_bbox_aux_3: 0.1793 (0.1810)  loss_bbox_aux_4: 0.1830 (0.1811)  loss_bbox_dn_0: 0.2614 (0.2854)  loss_bbox_dn_1: 0.1997 (0.2192)  loss_bbox_dn_2: 0.1881 (0.2055)  loss_bbox_dn_3: 0.1847 (0.2021)  loss_bbox_dn_4: 0.1847 (0.2012)  loss_bbox_dn_5: 0.1853 (0.2012)  loss_bbox_enc_0: 0.2366 (0.2332)  loss_giou: 0.3944 (0.4000)  loss_giou_aux_0: 0.4215 (0.4356)  loss_giou_aux_1: 0.4021 (0.4085)  loss_giou_aux_2: 0.3967 (0.4019)  loss_giou_aux_3: 0.3939 (0.4005)  loss_giou_aux_4: 0.3964 (0.3997)  loss_giou_dn_0: 0.5155 (0.5308)  loss_giou_dn_1: 0.4046 (0.4146)  loss_giou_dn_2: 0.3837 (0.3929)  loss_giou_dn_3: 0.3798 (0.3879)  loss_giou_dn_4: 0.3786 (0.3863)  loss_giou_dn_5: 0.3796 (0.3865)  loss_giou_enc_0: 0.4986 (0.4952)  loss_vfl: 0.5635 (0.5745)  loss_vfl_aux_0: 0.7876 (0.8338)  loss_vfl_aux_1: 0.6767 (0.7424)  loss_vfl_aux_2: 0.6156 (0.6522)  loss_vfl_aux_3: 0.5905 (0.6063)  loss_vfl_aux_4: 0.5659 (0.5827)  loss_vfl_dn_0: 0.4179 (0.4261)  loss_vfl_dn_1: 0.3668 (0.3726)  loss_vfl_dn_2: 0.3567 (0.3603)  loss_vfl_dn_3: 0.3542 (0.3569)  loss_vfl_dn_4: 0.3535 (0.3552)  loss_vfl_dn_5: 0.3526 (0.3550)  loss_vfl_enc_0: 0.7983 (0.8374)  time: 0.8269  data: 0.0097  max mem: 15225
Epoch: [5]  [1400/1519]  eta: 0:01:42  lr: 0.000400  lr2: 0.000400  loss: 14.8431 (15.1307)  loss_bbox: 0.1818 (0.1811)  loss_bbox_aux_0: 0.1822 (0.1970)  loss_bbox_aux_1: 0.1799 (0.1825)  loss_bbox_aux_2: 0.1759 (0.1808)  loss_bbox_aux_3: 0.1761 (0.1807)  loss_bbox_aux_4: 0.1752 (0.1808)  loss_bbox_dn_0: 0.2476 (0.2845)  loss_bbox_dn_1: 0.1938 (0.2186)  loss_bbox_dn_2: 0.1831 (0.2049)  loss_bbox_dn_3: 0.1821 (0.2016)  loss_bbox_dn_4: 0.1821 (0.2007)  loss_bbox_dn_5: 0.1823 (0.2006)  loss_bbox_enc_0: 0.2209 (0.2325)  loss_giou: 0.3948 (0.4001)  loss_giou_aux_0: 0.4213 (0.4346)  loss_giou_aux_1: 0.3934 (0.4085)  loss_giou_aux_2: 0.3846 (0.4018)  loss_giou_aux_3: 0.3953 (0.4005)  loss_giou_aux_4: 0.3862 (0.3997)  loss_giou_dn_0: 0.5238 (0.5302)  loss_giou_dn_1: 0.4045 (0.4143)  loss_giou_dn_2: 0.3841 (0.3927)  loss_giou_dn_3: 0.3778 (0.3877)  loss_giou_dn_4: 0.3754 (0.3862)  loss_giou_dn_5: 0.3754 (0.3864)  loss_giou_enc_0: 0.4858 (0.4947)  loss_vfl: 0.5580 (0.5738)  loss_vfl_aux_0: 0.7920 (0.8333)  loss_vfl_aux_1: 0.7075 (0.7392)  loss_vfl_aux_2: 0.6239 (0.6509)  loss_vfl_aux_3: 0.5752 (0.6056)  loss_vfl_aux_4: 0.5651 (0.5821)  loss_vfl_dn_0: 0.4264 (0.4259)  loss_vfl_dn_1: 0.3716 (0.3724)  loss_vfl_dn_2: 0.3590 (0.3602)  loss_vfl_dn_3: 0.3577 (0.3568)  loss_vfl_dn_4: 0.3553 (0.3551)  loss_vfl_dn_5: 0.3552 (0.3550)  loss_vfl_enc_0: 0.8087 (0.8367)  time: 0.8198  data: 0.0093  max mem: 15225
Epoch: [5]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 15.1575 (15.1147)  loss_bbox: 0.1871 (0.1812)  loss_bbox_aux_0: 0.1946 (0.1968)  loss_bbox_aux_1: 0.1902 (0.1829)  loss_bbox_aux_2: 0.1981 (0.1810)  loss_bbox_aux_3: 0.1954 (0.1808)  loss_bbox_aux_4: 0.1920 (0.1809)  loss_bbox_dn_0: 0.2841 (0.2840)  loss_bbox_dn_1: 0.2105 (0.2182)  loss_bbox_dn_2: 0.1909 (0.2045)  loss_bbox_dn_3: 0.1876 (0.2013)  loss_bbox_dn_4: 0.1871 (0.2004)  loss_bbox_dn_5: 0.1876 (0.2003)  loss_bbox_enc_0: 0.2364 (0.2325)  loss_giou: 0.4031 (0.4001)  loss_giou_aux_0: 0.4240 (0.4339)  loss_giou_aux_1: 0.4070 (0.4086)  loss_giou_aux_2: 0.3962 (0.4018)  loss_giou_aux_3: 0.4007 (0.4006)  loss_giou_aux_4: 0.4014 (0.3997)  loss_giou_dn_0: 0.5180 (0.5293)  loss_giou_dn_1: 0.4078 (0.4137)  loss_giou_dn_2: 0.3805 (0.3922)  loss_giou_dn_3: 0.3758 (0.3873)  loss_giou_dn_4: 0.3757 (0.3858)  loss_giou_dn_5: 0.3760 (0.3860)  loss_giou_enc_0: 0.4873 (0.4945)  loss_vfl: 0.5720 (0.5729)  loss_vfl_aux_0: 0.8036 (0.8317)  loss_vfl_aux_1: 0.7159 (0.7363)  loss_vfl_aux_2: 0.6327 (0.6493)  loss_vfl_aux_3: 0.5920 (0.6044)  loss_vfl_aux_4: 0.5724 (0.5812)  loss_vfl_dn_0: 0.4216 (0.4256)  loss_vfl_dn_1: 0.3755 (0.3722)  loss_vfl_dn_2: 0.3603 (0.3600)  loss_vfl_dn_3: 0.3564 (0.3566)  loss_vfl_dn_4: 0.3553 (0.3550)  loss_vfl_dn_5: 0.3560 (0.3548)  loss_vfl_enc_0: 0.8243 (0.8365)  time: 0.8369  data: 0.0089  max mem: 15225
Epoch: [5]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 14.4413 (15.1091)  loss_bbox: 0.1623 (0.1811)  loss_bbox_aux_0: 0.1804 (0.1966)  loss_bbox_aux_1: 0.1680 (0.1828)  loss_bbox_aux_2: 0.1607 (0.1809)  loss_bbox_aux_3: 0.1628 (0.1807)  loss_bbox_aux_4: 0.1641 (0.1808)  loss_bbox_dn_0: 0.2658 (0.2837)  loss_bbox_dn_1: 0.1970 (0.2180)  loss_bbox_dn_2: 0.1882 (0.2044)  loss_bbox_dn_3: 0.1823 (0.2011)  loss_bbox_dn_4: 0.1808 (0.2002)  loss_bbox_dn_5: 0.1813 (0.2001)  loss_bbox_enc_0: 0.2217 (0.2324)  loss_giou: 0.3875 (0.3999)  loss_giou_aux_0: 0.4220 (0.4337)  loss_giou_aux_1: 0.3951 (0.4084)  loss_giou_aux_2: 0.3860 (0.4017)  loss_giou_aux_3: 0.3921 (0.4005)  loss_giou_aux_4: 0.3871 (0.3996)  loss_giou_dn_0: 0.5051 (0.5289)  loss_giou_dn_1: 0.3952 (0.4135)  loss_giou_dn_2: 0.3791 (0.3921)  loss_giou_dn_3: 0.3758 (0.3872)  loss_giou_dn_4: 0.3757 (0.3857)  loss_giou_dn_5: 0.3760 (0.3859)  loss_giou_enc_0: 0.4879 (0.4945)  loss_vfl: 0.5472 (0.5728)  loss_vfl_aux_0: 0.8269 (0.8316)  loss_vfl_aux_1: 0.6886 (0.7358)  loss_vfl_aux_2: 0.5998 (0.6491)  loss_vfl_aux_3: 0.5857 (0.6042)  loss_vfl_aux_4: 0.5414 (0.5810)  loss_vfl_dn_0: 0.4168 (0.4255)  loss_vfl_dn_1: 0.3641 (0.3722)  loss_vfl_dn_2: 0.3535 (0.3600)  loss_vfl_dn_3: 0.3513 (0.3566)  loss_vfl_dn_4: 0.3503 (0.3549)  loss_vfl_dn_5: 0.3508 (0.3548)  loss_vfl_enc_0: 0.7790 (0.8361)  time: 0.7833  data: 0.0088  max mem: 15225
Epoch: [5] Total time: 0:21:49 (0.8621 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 14.4413 (15.1091)  loss_bbox: 0.1623 (0.1811)  loss_bbox_aux_0: 0.1804 (0.1966)  loss_bbox_aux_1: 0.1680 (0.1828)  loss_bbox_aux_2: 0.1607 (0.1809)  loss_bbox_aux_3: 0.1628 (0.1807)  loss_bbox_aux_4: 0.1641 (0.1808)  loss_bbox_dn_0: 0.2658 (0.2837)  loss_bbox_dn_1: 0.1970 (0.2180)  loss_bbox_dn_2: 0.1882 (0.2044)  loss_bbox_dn_3: 0.1823 (0.2011)  loss_bbox_dn_4: 0.1808 (0.2002)  loss_bbox_dn_5: 0.1813 (0.2001)  loss_bbox_enc_0: 0.2217 (0.2324)  loss_giou: 0.3875 (0.3999)  loss_giou_aux_0: 0.4220 (0.4337)  loss_giou_aux_1: 0.3951 (0.4084)  loss_giou_aux_2: 0.3860 (0.4017)  loss_giou_aux_3: 0.3921 (0.4005)  loss_giou_aux_4: 0.3871 (0.3996)  loss_giou_dn_0: 0.5051 (0.5289)  loss_giou_dn_1: 0.3952 (0.4135)  loss_giou_dn_2: 0.3791 (0.3921)  loss_giou_dn_3: 0.3758 (0.3872)  loss_giou_dn_4: 0.3757 (0.3857)  loss_giou_dn_5: 0.3760 (0.3859)  loss_giou_enc_0: 0.4879 (0.4945)  loss_vfl: 0.5472 (0.5728)  loss_vfl_aux_0: 0.8269 (0.8316)  loss_vfl_aux_1: 0.6886 (0.7358)  loss_vfl_aux_2: 0.5998 (0.6491)  loss_vfl_aux_3: 0.5857 (0.6042)  loss_vfl_aux_4: 0.5414 (0.5810)  loss_vfl_dn_0: 0.4168 (0.4255)  loss_vfl_dn_1: 0.3641 (0.3722)  loss_vfl_dn_2: 0.3535 (0.3600)  loss_vfl_dn_3: 0.3513 (0.3566)  loss_vfl_dn_4: 0.3503 (0.3549)  loss_vfl_dn_5: 0.3508 (0.3548)  loss_vfl_enc_0: 0.7790 (0.8361)
Test:  [ 0/75]  eta: 0:03:11    time: 2.5507  data: 1.9603  max mem: 15225
Test:  [10/75]  eta: 0:00:51    time: 0.7885  data: 0.1998  max mem: 15225
Test:  [20/75]  eta: 0:00:38    time: 0.6051  data: 0.0268  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6128  data: 0.0227  max mem: 15225
Test:  [40/75]  eta: 0:00:22    time: 0.6105  data: 0.0220  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6109  data: 0.0287  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.6019  data: 0.0214  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.5817  data: 0.0185  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.5922  data: 0.0185  max mem: 15225
Test: Total time: 0:00:47 (0.6325 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=12.28s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.444
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.684
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.496
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.057
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.472
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.598
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.671
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.552
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.679
best_stat: {'epoch': 2, 'coco_eval_bbox': 0.4528721068468995}
Epoch: [6]  [   0/1519]  eta: 4:52:16  lr: 0.000400  lr2: 0.000400  loss: 14.9954 (14.9954)  loss_bbox: 0.1569 (0.1569)  loss_bbox_aux_0: 0.1923 (0.1923)  loss_bbox_aux_1: 0.1651 (0.1651)  loss_bbox_aux_2: 0.1610 (0.1610)  loss_bbox_aux_3: 0.1580 (0.1580)  loss_bbox_aux_4: 0.1579 (0.1579)  loss_bbox_dn_0: 0.2733 (0.2733)  loss_bbox_dn_1: 0.2010 (0.2010)  loss_bbox_dn_2: 0.1878 (0.1878)  loss_bbox_dn_3: 0.1817 (0.1817)  loss_bbox_dn_4: 0.1795 (0.1795)  loss_bbox_dn_5: 0.1788 (0.1788)  loss_bbox_enc_0: 0.2152 (0.2152)  loss_giou: 0.3873 (0.3873)  loss_giou_aux_0: 0.4558 (0.4558)  loss_giou_aux_1: 0.4166 (0.4166)  loss_giou_aux_2: 0.3940 (0.3940)  loss_giou_aux_3: 0.3904 (0.3904)  loss_giou_aux_4: 0.3920 (0.3920)  loss_giou_dn_0: 0.5333 (0.5333)  loss_giou_dn_1: 0.4092 (0.4092)  loss_giou_dn_2: 0.3872 (0.3872)  loss_giou_dn_3: 0.3823 (0.3823)  loss_giou_dn_4: 0.3790 (0.3790)  loss_giou_dn_5: 0.3789 (0.3789)  loss_giou_enc_0: 0.4997 (0.4997)  loss_vfl: 0.6296 (0.6296)  loss_vfl_aux_0: 0.8367 (0.8367)  loss_vfl_aux_1: 0.7236 (0.7236)  loss_vfl_aux_2: 0.7012 (0.7012)  loss_vfl_aux_3: 0.6643 (0.6643)  loss_vfl_aux_4: 0.6376 (0.6376)  loss_vfl_dn_0: 0.4210 (0.4210)  loss_vfl_dn_1: 0.3677 (0.3677)  loss_vfl_dn_2: 0.3532 (0.3532)  loss_vfl_dn_3: 0.3506 (0.3506)  loss_vfl_dn_4: 0.3486 (0.3486)  loss_vfl_dn_5: 0.3488 (0.3488)  loss_vfl_enc_0: 0.7985 (0.7985)  time: 11.5451  data: 3.4392  max mem: 15225
Epoch: [6]  [ 100/1519]  eta: 0:22:20  lr: 0.000400  lr2: 0.000400  loss: 15.1318 (14.9029)  loss_bbox: 0.1772 (0.1794)  loss_bbox_aux_0: 0.1894 (0.1910)  loss_bbox_aux_1: 0.1924 (0.1819)  loss_bbox_aux_2: 0.1812 (0.1797)  loss_bbox_aux_3: 0.1833 (0.1799)  loss_bbox_aux_4: 0.1784 (0.1787)  loss_bbox_dn_0: 0.2726 (0.2734)  loss_bbox_dn_1: 0.2075 (0.2142)  loss_bbox_dn_2: 0.1963 (0.2026)  loss_bbox_dn_3: 0.1944 (0.1998)  loss_bbox_dn_4: 0.1936 (0.1990)  loss_bbox_dn_5: 0.1933 (0.1991)  loss_bbox_enc_0: 0.2304 (0.2264)  loss_giou: 0.3905 (0.3952)  loss_giou_aux_0: 0.4152 (0.4214)  loss_giou_aux_1: 0.4086 (0.4042)  loss_giou_aux_2: 0.3990 (0.3980)  loss_giou_aux_3: 0.3988 (0.3965)  loss_giou_aux_4: 0.3909 (0.3946)  loss_giou_dn_0: 0.5180 (0.5108)  loss_giou_dn_1: 0.4094 (0.4036)  loss_giou_dn_2: 0.3850 (0.3845)  loss_giou_dn_3: 0.3834 (0.3806)  loss_giou_dn_4: 0.3799 (0.3792)  loss_giou_dn_5: 0.3802 (0.3794)  loss_giou_enc_0: 0.4876 (0.4825)  loss_vfl: 0.5812 (0.5730)  loss_vfl_aux_0: 0.9101 (0.8419)  loss_vfl_aux_1: 0.7197 (0.6997)  loss_vfl_aux_2: 0.6528 (0.6342)  loss_vfl_aux_3: 0.6027 (0.5962)  loss_vfl_aux_4: 0.5804 (0.5801)  loss_vfl_dn_0: 0.4222 (0.4221)  loss_vfl_dn_1: 0.3718 (0.3691)  loss_vfl_dn_2: 0.3600 (0.3584)  loss_vfl_dn_3: 0.3580 (0.3556)  loss_vfl_dn_4: 0.3562 (0.3541)  loss_vfl_dn_5: 0.3548 (0.3540)  loss_vfl_enc_0: 0.8112 (0.8288)  time: 0.8230  data: 0.0096  max mem: 15225
Epoch: [6]  [ 200/1519]  eta: 0:19:33  lr: 0.000400  lr2: 0.000400  loss: 15.3983 (14.8257)  loss_bbox: 0.1804 (0.1779)  loss_bbox_aux_0: 0.1911 (0.1885)  loss_bbox_aux_1: 0.1783 (0.1802)  loss_bbox_aux_2: 0.1815 (0.1783)  loss_bbox_aux_3: 0.1770 (0.1785)  loss_bbox_aux_4: 0.1803 (0.1777)  loss_bbox_dn_0: 0.2637 (0.2697)  loss_bbox_dn_1: 0.1993 (0.2097)  loss_bbox_dn_2: 0.1843 (0.1976)  loss_bbox_dn_3: 0.1802 (0.1948)  loss_bbox_dn_4: 0.1787 (0.1941)  loss_bbox_dn_5: 0.1794 (0.1941)  loss_bbox_enc_0: 0.2225 (0.2245)  loss_giou: 0.4102 (0.3960)  loss_giou_aux_0: 0.4216 (0.4219)  loss_giou_aux_1: 0.4149 (0.4046)  loss_giou_aux_2: 0.4069 (0.3983)  loss_giou_aux_3: 0.4088 (0.3968)  loss_giou_aux_4: 0.4108 (0.3957)  loss_giou_dn_0: 0.5403 (0.5146)  loss_giou_dn_1: 0.4310 (0.4042)  loss_giou_dn_2: 0.3994 (0.3842)  loss_giou_dn_3: 0.3972 (0.3801)  loss_giou_dn_4: 0.3949 (0.3789)  loss_giou_dn_5: 0.3939 (0.3790)  loss_giou_enc_0: 0.4759 (0.4839)  loss_vfl: 0.5716 (0.5671)  loss_vfl_aux_0: 0.8691 (0.8369)  loss_vfl_aux_1: 0.7180 (0.6939)  loss_vfl_aux_2: 0.6336 (0.6293)  loss_vfl_aux_3: 0.6061 (0.5917)  loss_vfl_aux_4: 0.5741 (0.5732)  loss_vfl_dn_0: 0.4231 (0.4222)  loss_vfl_dn_1: 0.3718 (0.3688)  loss_vfl_dn_2: 0.3581 (0.3578)  loss_vfl_dn_3: 0.3554 (0.3550)  loss_vfl_dn_4: 0.3559 (0.3537)  loss_vfl_dn_5: 0.3548 (0.3536)  loss_vfl_enc_0: 0.8199 (0.8188)  time: 0.8782  data: 0.0094  max mem: 15225
Epoch: [6]  [ 300/1519]  eta: 0:18:16  lr: 0.000400  lr2: 0.000400  loss: 15.1718 (14.8237)  loss_bbox: 0.1696 (0.1784)  loss_bbox_aux_0: 0.1890 (0.1899)  loss_bbox_aux_1: 0.1710 (0.1808)  loss_bbox_aux_2: 0.1706 (0.1788)  loss_bbox_aux_3: 0.1657 (0.1781)  loss_bbox_aux_4: 0.1709 (0.1780)  loss_bbox_dn_0: 0.2847 (0.2725)  loss_bbox_dn_1: 0.2187 (0.2112)  loss_bbox_dn_2: 0.2088 (0.1988)  loss_bbox_dn_3: 0.2039 (0.1958)  loss_bbox_dn_4: 0.2001 (0.1951)  loss_bbox_dn_5: 0.2000 (0.1950)  loss_bbox_enc_0: 0.2287 (0.2265)  loss_giou: 0.4028 (0.3943)  loss_giou_aux_0: 0.4195 (0.4209)  loss_giou_aux_1: 0.4059 (0.4033)  loss_giou_aux_2: 0.4088 (0.3962)  loss_giou_aux_3: 0.3957 (0.3945)  loss_giou_aux_4: 0.3986 (0.3938)  loss_giou_dn_0: 0.5483 (0.5152)  loss_giou_dn_1: 0.4154 (0.4035)  loss_giou_dn_2: 0.3988 (0.3832)  loss_giou_dn_3: 0.3935 (0.3790)  loss_giou_dn_4: 0.3920 (0.3778)  loss_giou_dn_5: 0.3908 (0.3779)  loss_giou_enc_0: 0.5038 (0.4840)  loss_vfl: 0.5960 (0.5644)  loss_vfl_aux_0: 0.8727 (0.8357)  loss_vfl_aux_1: 0.7128 (0.6982)  loss_vfl_aux_2: 0.6694 (0.6307)  loss_vfl_aux_3: 0.6208 (0.5929)  loss_vfl_aux_4: 0.5963 (0.5711)  loss_vfl_dn_0: 0.4252 (0.4220)  loss_vfl_dn_1: 0.3712 (0.3686)  loss_vfl_dn_2: 0.3593 (0.3573)  loss_vfl_dn_3: 0.3543 (0.3543)  loss_vfl_dn_4: 0.3527 (0.3530)  loss_vfl_dn_5: 0.3523 (0.3528)  loss_vfl_enc_0: 0.8116 (0.8201)  time: 0.9612  data: 0.0096  max mem: 15225
Epoch: [6]  [ 400/1519]  eta: 0:16:31  lr: 0.000400  lr2: 0.000400  loss: 13.9517 (14.7999)  loss_bbox: 0.1660 (0.1786)  loss_bbox_aux_0: 0.1903 (0.1915)  loss_bbox_aux_1: 0.1719 (0.1812)  loss_bbox_aux_2: 0.1600 (0.1790)  loss_bbox_aux_3: 0.1631 (0.1784)  loss_bbox_aux_4: 0.1634 (0.1781)  loss_bbox_dn_0: 0.2426 (0.2742)  loss_bbox_dn_1: 0.1872 (0.2118)  loss_bbox_dn_2: 0.1778 (0.1991)  loss_bbox_dn_3: 0.1757 (0.1960)  loss_bbox_dn_4: 0.1756 (0.1952)  loss_bbox_dn_5: 0.1752 (0.1952)  loss_bbox_enc_0: 0.2248 (0.2284)  loss_giou: 0.3767 (0.3930)  loss_giou_aux_0: 0.4192 (0.4204)  loss_giou_aux_1: 0.3947 (0.4019)  loss_giou_aux_2: 0.3797 (0.3949)  loss_giou_aux_3: 0.3765 (0.3931)  loss_giou_aux_4: 0.3759 (0.3923)  loss_giou_dn_0: 0.4786 (0.5145)  loss_giou_dn_1: 0.3721 (0.4026)  loss_giou_dn_2: 0.3541 (0.3822)  loss_giou_dn_3: 0.3484 (0.3779)  loss_giou_dn_4: 0.3454 (0.3766)  loss_giou_dn_5: 0.3459 (0.3768)  loss_giou_enc_0: 0.4750 (0.4837)  loss_vfl: 0.5200 (0.5611)  loss_vfl_aux_0: 0.7666 (0.8319)  loss_vfl_aux_1: 0.6476 (0.6987)  loss_vfl_aux_2: 0.5666 (0.6277)  loss_vfl_aux_3: 0.5513 (0.5897)  loss_vfl_aux_4: 0.5288 (0.5682)  loss_vfl_dn_0: 0.4213 (0.4225)  loss_vfl_dn_1: 0.3650 (0.3688)  loss_vfl_dn_2: 0.3536 (0.3573)  loss_vfl_dn_3: 0.3493 (0.3542)  loss_vfl_dn_4: 0.3481 (0.3529)  loss_vfl_dn_5: 0.3484 (0.3527)  loss_vfl_enc_0: 0.7787 (0.8173)  time: 0.8292  data: 0.0103  max mem: 15225
Epoch: [6]  [ 500/1519]  eta: 0:14:50  lr: 0.000400  lr2: 0.000400  loss: 14.7956 (14.7904)  loss_bbox: 0.1691 (0.1788)  loss_bbox_aux_0: 0.1840 (0.1914)  loss_bbox_aux_1: 0.1704 (0.1810)  loss_bbox_aux_2: 0.1692 (0.1792)  loss_bbox_aux_3: 0.1702 (0.1786)  loss_bbox_aux_4: 0.1674 (0.1784)  loss_bbox_dn_0: 0.2742 (0.2737)  loss_bbox_dn_1: 0.2097 (0.2112)  loss_bbox_dn_2: 0.1993 (0.1986)  loss_bbox_dn_3: 0.1958 (0.1955)  loss_bbox_dn_4: 0.1950 (0.1947)  loss_bbox_dn_5: 0.1948 (0.1946)  loss_bbox_enc_0: 0.2218 (0.2285)  loss_giou: 0.3964 (0.3930)  loss_giou_aux_0: 0.4223 (0.4211)  loss_giou_aux_1: 0.4003 (0.4013)  loss_giou_aux_2: 0.3942 (0.3949)  loss_giou_aux_3: 0.3942 (0.3933)  loss_giou_aux_4: 0.3892 (0.3924)  loss_giou_dn_0: 0.5231 (0.5141)  loss_giou_dn_1: 0.4052 (0.4021)  loss_giou_dn_2: 0.3820 (0.3817)  loss_giou_dn_3: 0.3773 (0.3774)  loss_giou_dn_4: 0.3751 (0.3760)  loss_giou_dn_5: 0.3755 (0.3762)  loss_giou_enc_0: 0.4887 (0.4843)  loss_vfl: 0.5745 (0.5608)  loss_vfl_aux_0: 0.8242 (0.8286)  loss_vfl_aux_1: 0.7072 (0.6996)  loss_vfl_aux_2: 0.6455 (0.6281)  loss_vfl_aux_3: 0.5934 (0.5897)  loss_vfl_aux_4: 0.5796 (0.5682)  loss_vfl_dn_0: 0.4197 (0.4221)  loss_vfl_dn_1: 0.3678 (0.3684)  loss_vfl_dn_2: 0.3560 (0.3570)  loss_vfl_dn_3: 0.3527 (0.3539)  loss_vfl_dn_4: 0.3517 (0.3525)  loss_vfl_dn_5: 0.3516 (0.3523)  loss_vfl_enc_0: 0.8428 (0.8170)  time: 0.8163  data: 0.0092  max mem: 15225
Epoch: [6]  [ 600/1519]  eta: 0:13:17  lr: 0.000400  lr2: 0.000400  loss: 14.6880 (14.8069)  loss_bbox: 0.1725 (0.1793)  loss_bbox_aux_0: 0.1782 (0.1911)  loss_bbox_aux_1: 0.1768 (0.1811)  loss_bbox_aux_2: 0.1715 (0.1797)  loss_bbox_aux_3: 0.1711 (0.1792)  loss_bbox_aux_4: 0.1741 (0.1790)  loss_bbox_dn_0: 0.2593 (0.2739)  loss_bbox_dn_1: 0.2041 (0.2112)  loss_bbox_dn_2: 0.1933 (0.1987)  loss_bbox_dn_3: 0.1895 (0.1956)  loss_bbox_dn_4: 0.1874 (0.1948)  loss_bbox_dn_5: 0.1874 (0.1948)  loss_bbox_enc_0: 0.2215 (0.2282)  loss_giou: 0.3866 (0.3943)  loss_giou_aux_0: 0.4309 (0.4226)  loss_giou_aux_1: 0.4014 (0.4021)  loss_giou_aux_2: 0.3916 (0.3963)  loss_giou_aux_3: 0.3872 (0.3948)  loss_giou_aux_4: 0.3840 (0.3939)  loss_giou_dn_0: 0.5247 (0.5157)  loss_giou_dn_1: 0.4020 (0.4032)  loss_giou_dn_2: 0.3838 (0.3828)  loss_giou_dn_3: 0.3779 (0.3784)  loss_giou_dn_4: 0.3758 (0.3771)  loss_giou_dn_5: 0.3749 (0.3772)  loss_giou_enc_0: 0.4717 (0.4845)  loss_vfl: 0.5750 (0.5606)  loss_vfl_aux_0: 0.8058 (0.8303)  loss_vfl_aux_1: 0.7192 (0.6997)  loss_vfl_aux_2: 0.6282 (0.6270)  loss_vfl_aux_3: 0.5975 (0.5887)  loss_vfl_aux_4: 0.5849 (0.5675)  loss_vfl_dn_0: 0.4234 (0.4220)  loss_vfl_dn_1: 0.3715 (0.3685)  loss_vfl_dn_2: 0.3563 (0.3570)  loss_vfl_dn_3: 0.3536 (0.3540)  loss_vfl_dn_4: 0.3512 (0.3527)  loss_vfl_dn_5: 0.3512 (0.3525)  loss_vfl_enc_0: 0.7992 (0.8170)  time: 0.8313  data: 0.0096  max mem: 15225
Epoch: [6]  [ 700/1519]  eta: 0:11:56  lr: 0.000400  lr2: 0.000400  loss: 14.8364 (14.7924)  loss_bbox: 0.1656 (0.1786)  loss_bbox_aux_0: 0.1879 (0.1915)  loss_bbox_aux_1: 0.1725 (0.1805)  loss_bbox_aux_2: 0.1723 (0.1788)  loss_bbox_aux_3: 0.1642 (0.1785)  loss_bbox_aux_4: 0.1661 (0.1783)  loss_bbox_dn_0: 0.2727 (0.2737)  loss_bbox_dn_1: 0.2029 (0.2109)  loss_bbox_dn_2: 0.1909 (0.1983)  loss_bbox_dn_3: 0.1877 (0.1952)  loss_bbox_dn_4: 0.1872 (0.1944)  loss_bbox_dn_5: 0.1868 (0.1944)  loss_bbox_enc_0: 0.2343 (0.2280)  loss_giou: 0.3836 (0.3935)  loss_giou_aux_0: 0.4255 (0.4235)  loss_giou_aux_1: 0.3954 (0.4014)  loss_giou_aux_2: 0.3853 (0.3954)  loss_giou_aux_3: 0.3880 (0.3940)  loss_giou_aux_4: 0.3835 (0.3932)  loss_giou_dn_0: 0.5040 (0.5149)  loss_giou_dn_1: 0.3973 (0.4026)  loss_giou_dn_2: 0.3780 (0.3823)  loss_giou_dn_3: 0.3712 (0.3779)  loss_giou_dn_4: 0.3681 (0.3766)  loss_giou_dn_5: 0.3678 (0.3768)  loss_giou_enc_0: 0.5004 (0.4838)  loss_vfl: 0.5534 (0.5610)  loss_vfl_aux_0: 0.8568 (0.8285)  loss_vfl_aux_1: 0.6892 (0.6999)  loss_vfl_aux_2: 0.5872 (0.6275)  loss_vfl_aux_3: 0.5531 (0.5889)  loss_vfl_aux_4: 0.5479 (0.5680)  loss_vfl_dn_0: 0.4250 (0.4220)  loss_vfl_dn_1: 0.3687 (0.3682)  loss_vfl_dn_2: 0.3570 (0.3568)  loss_vfl_dn_3: 0.3528 (0.3537)  loss_vfl_dn_4: 0.3509 (0.3523)  loss_vfl_dn_5: 0.3509 (0.3521)  loss_vfl_enc_0: 0.8105 (0.8166)  time: 0.8531  data: 0.0094  max mem: 15225
Epoch: [6]  [ 800/1519]  eta: 0:10:25  lr: 0.000400  lr2: 0.000400  loss: 14.6296 (14.8082)  loss_bbox: 0.1847 (0.1795)  loss_bbox_aux_0: 0.1848 (0.1922)  loss_bbox_aux_1: 0.1769 (0.1814)  loss_bbox_aux_2: 0.1749 (0.1796)  loss_bbox_aux_3: 0.1837 (0.1793)  loss_bbox_aux_4: 0.1787 (0.1791)  loss_bbox_dn_0: 0.2775 (0.2754)  loss_bbox_dn_1: 0.2049 (0.2118)  loss_bbox_dn_2: 0.1926 (0.1992)  loss_bbox_dn_3: 0.1887 (0.1960)  loss_bbox_dn_4: 0.1893 (0.1953)  loss_bbox_dn_5: 0.1902 (0.1952)  loss_bbox_enc_0: 0.2313 (0.2288)  loss_giou: 0.3956 (0.3940)  loss_giou_aux_0: 0.4142 (0.4244)  loss_giou_aux_1: 0.4016 (0.4018)  loss_giou_aux_2: 0.3888 (0.3957)  loss_giou_aux_3: 0.3884 (0.3941)  loss_giou_aux_4: 0.3928 (0.3935)  loss_giou_dn_0: 0.5297 (0.5163)  loss_giou_dn_1: 0.3942 (0.4032)  loss_giou_dn_2: 0.3804 (0.3826)  loss_giou_dn_3: 0.3737 (0.3781)  loss_giou_dn_4: 0.3719 (0.3768)  loss_giou_dn_5: 0.3714 (0.3769)  loss_giou_enc_0: 0.4829 (0.4841)  loss_vfl: 0.5445 (0.5607)  loss_vfl_aux_0: 0.8084 (0.8275)  loss_vfl_aux_1: 0.6845 (0.6996)  loss_vfl_aux_2: 0.5888 (0.6274)  loss_vfl_aux_3: 0.5678 (0.5891)  loss_vfl_aux_4: 0.5481 (0.5681)  loss_vfl_dn_0: 0.4277 (0.4228)  loss_vfl_dn_1: 0.3684 (0.3684)  loss_vfl_dn_2: 0.3564 (0.3569)  loss_vfl_dn_3: 0.3521 (0.3538)  loss_vfl_dn_4: 0.3508 (0.3524)  loss_vfl_dn_5: 0.3509 (0.3522)  loss_vfl_enc_0: 0.8207 (0.8153)  time: 0.8222  data: 0.0095  max mem: 15225
Epoch: [6]  [ 900/1519]  eta: 0:08:55  lr: 0.000400  lr2: 0.000400  loss: 14.4469 (14.7819)  loss_bbox: 0.1730 (0.1789)  loss_bbox_aux_0: 0.1859 (0.1919)  loss_bbox_aux_1: 0.1810 (0.1813)  loss_bbox_aux_2: 0.1682 (0.1792)  loss_bbox_aux_3: 0.1695 (0.1787)  loss_bbox_aux_4: 0.1736 (0.1785)  loss_bbox_dn_0: 0.2744 (0.2743)  loss_bbox_dn_1: 0.2072 (0.2111)  loss_bbox_dn_2: 0.1996 (0.1985)  loss_bbox_dn_3: 0.1979 (0.1953)  loss_bbox_dn_4: 0.1964 (0.1945)  loss_bbox_dn_5: 0.1972 (0.1944)  loss_bbox_enc_0: 0.2259 (0.2291)  loss_giou: 0.3852 (0.3937)  loss_giou_aux_0: 0.4166 (0.4247)  loss_giou_aux_1: 0.3953 (0.4017)  loss_giou_aux_2: 0.3864 (0.3955)  loss_giou_aux_3: 0.3887 (0.3939)  loss_giou_aux_4: 0.3851 (0.3933)  loss_giou_dn_0: 0.4996 (0.5149)  loss_giou_dn_1: 0.3977 (0.4027)  loss_giou_dn_2: 0.3745 (0.3824)  loss_giou_dn_3: 0.3696 (0.3779)  loss_giou_dn_4: 0.3703 (0.3765)  loss_giou_dn_5: 0.3699 (0.3766)  loss_giou_enc_0: 0.4951 (0.4849)  loss_vfl: 0.5558 (0.5595)  loss_vfl_aux_0: 0.8108 (0.8237)  loss_vfl_aux_1: 0.6814 (0.6963)  loss_vfl_aux_2: 0.6281 (0.6252)  loss_vfl_aux_3: 0.5913 (0.5877)  loss_vfl_aux_4: 0.5589 (0.5667)  loss_vfl_dn_0: 0.4191 (0.4223)  loss_vfl_dn_1: 0.3653 (0.3681)  loss_vfl_dn_2: 0.3562 (0.3567)  loss_vfl_dn_3: 0.3525 (0.3536)  loss_vfl_dn_4: 0.3521 (0.3522)  loss_vfl_dn_5: 0.3517 (0.3520)  loss_vfl_enc_0: 0.7914 (0.8135)  time: 0.8277  data: 0.0094  max mem: 15225
Epoch: [6]  [1000/1519]  eta: 0:07:30  lr: 0.000400  lr2: 0.000400  loss: 14.7755 (14.7785)  loss_bbox: 0.1781 (0.1790)  loss_bbox_aux_0: 0.1822 (0.1921)  loss_bbox_aux_1: 0.1844 (0.1811)  loss_bbox_aux_2: 0.1798 (0.1791)  loss_bbox_aux_3: 0.1769 (0.1786)  loss_bbox_aux_4: 0.1723 (0.1785)  loss_bbox_dn_0: 0.2666 (0.2741)  loss_bbox_dn_1: 0.2033 (0.2110)  loss_bbox_dn_2: 0.1911 (0.1984)  loss_bbox_dn_3: 0.1872 (0.1952)  loss_bbox_dn_4: 0.1868 (0.1944)  loss_bbox_dn_5: 0.1864 (0.1943)  loss_bbox_enc_0: 0.2223 (0.2288)  loss_giou: 0.4022 (0.3938)  loss_giou_aux_0: 0.4255 (0.4251)  loss_giou_aux_1: 0.4023 (0.4017)  loss_giou_aux_2: 0.3992 (0.3954)  loss_giou_aux_3: 0.4002 (0.3939)  loss_giou_aux_4: 0.4020 (0.3933)  loss_giou_dn_0: 0.5056 (0.5146)  loss_giou_dn_1: 0.4048 (0.4026)  loss_giou_dn_2: 0.3871 (0.3824)  loss_giou_dn_3: 0.3840 (0.3779)  loss_giou_dn_4: 0.3823 (0.3765)  loss_giou_dn_5: 0.3826 (0.3766)  loss_giou_enc_0: 0.4888 (0.4848)  loss_vfl: 0.5365 (0.5589)  loss_vfl_aux_0: 0.7990 (0.8225)  loss_vfl_aux_1: 0.6737 (0.6966)  loss_vfl_aux_2: 0.6130 (0.6254)  loss_vfl_aux_3: 0.5632 (0.5877)  loss_vfl_aux_4: 0.5455 (0.5663)  loss_vfl_dn_0: 0.4214 (0.4223)  loss_vfl_dn_1: 0.3710 (0.3681)  loss_vfl_dn_2: 0.3586 (0.3567)  loss_vfl_dn_3: 0.3553 (0.3536)  loss_vfl_dn_4: 0.3543 (0.3522)  loss_vfl_dn_5: 0.3535 (0.3520)  loss_vfl_enc_0: 0.8070 (0.8129)  time: 1.0122  data: 0.0090  max mem: 15225
Epoch: [6]  [1100/1519]  eta: 0:06:03  lr: 0.000400  lr2: 0.000400  loss: 14.2516 (14.7454)  loss_bbox: 0.1599 (0.1785)  loss_bbox_aux_0: 0.1779 (0.1915)  loss_bbox_aux_1: 0.1724 (0.1808)  loss_bbox_aux_2: 0.1705 (0.1787)  loss_bbox_aux_3: 0.1645 (0.1782)  loss_bbox_aux_4: 0.1614 (0.1780)  loss_bbox_dn_0: 0.2546 (0.2730)  loss_bbox_dn_1: 0.1935 (0.2100)  loss_bbox_dn_2: 0.1745 (0.1975)  loss_bbox_dn_3: 0.1725 (0.1944)  loss_bbox_dn_4: 0.1691 (0.1936)  loss_bbox_dn_5: 0.1684 (0.1935)  loss_bbox_enc_0: 0.2204 (0.2283)  loss_giou: 0.3927 (0.3936)  loss_giou_aux_0: 0.4204 (0.4248)  loss_giou_aux_1: 0.3984 (0.4017)  loss_giou_aux_2: 0.3871 (0.3952)  loss_giou_aux_3: 0.3861 (0.3938)  loss_giou_aux_4: 0.3912 (0.3931)  loss_giou_dn_0: 0.5018 (0.5138)  loss_giou_dn_1: 0.3863 (0.4020)  loss_giou_dn_2: 0.3649 (0.3818)  loss_giou_dn_3: 0.3628 (0.3774)  loss_giou_dn_4: 0.3599 (0.3760)  loss_giou_dn_5: 0.3603 (0.3761)  loss_giou_enc_0: 0.4904 (0.4848)  loss_vfl: 0.5349 (0.5574)  loss_vfl_aux_0: 0.7322 (0.8182)  loss_vfl_aux_1: 0.6303 (0.6921)  loss_vfl_aux_2: 0.5743 (0.6234)  loss_vfl_aux_3: 0.5468 (0.5858)  loss_vfl_aux_4: 0.5477 (0.5647)  loss_vfl_dn_0: 0.4162 (0.4219)  loss_vfl_dn_1: 0.3659 (0.3678)  loss_vfl_dn_2: 0.3516 (0.3564)  loss_vfl_dn_3: 0.3488 (0.3533)  loss_vfl_dn_4: 0.3472 (0.3519)  loss_vfl_dn_5: 0.3464 (0.3517)  loss_vfl_enc_0: 0.7866 (0.8104)  time: 0.8478  data: 0.0096  max mem: 15225
Epoch: [6]  [1200/1519]  eta: 0:04:35  lr: 0.000400  lr2: 0.000400  loss: 14.5989 (14.7381)  loss_bbox: 0.1760 (0.1789)  loss_bbox_aux_0: 0.1943 (0.1914)  loss_bbox_aux_1: 0.1816 (0.1811)  loss_bbox_aux_2: 0.1703 (0.1788)  loss_bbox_aux_3: 0.1714 (0.1786)  loss_bbox_aux_4: 0.1707 (0.1784)  loss_bbox_dn_0: 0.2577 (0.2732)  loss_bbox_dn_1: 0.1945 (0.2101)  loss_bbox_dn_2: 0.1851 (0.1977)  loss_bbox_dn_3: 0.1863 (0.1946)  loss_bbox_dn_4: 0.1868 (0.1937)  loss_bbox_dn_5: 0.1868 (0.1937)  loss_bbox_enc_0: 0.2197 (0.2285)  loss_giou: 0.3998 (0.3936)  loss_giou_aux_0: 0.4334 (0.4243)  loss_giou_aux_1: 0.4091 (0.4015)  loss_giou_aux_2: 0.3906 (0.3951)  loss_giou_aux_3: 0.3934 (0.3939)  loss_giou_aux_4: 0.3983 (0.3931)  loss_giou_dn_0: 0.5067 (0.5131)  loss_giou_dn_1: 0.3889 (0.4015)  loss_giou_dn_2: 0.3683 (0.3815)  loss_giou_dn_3: 0.3625 (0.3770)  loss_giou_dn_4: 0.3636 (0.3756)  loss_giou_dn_5: 0.3645 (0.3758)  loss_giou_enc_0: 0.4770 (0.4847)  loss_vfl: 0.5344 (0.5568)  loss_vfl_aux_0: 0.7904 (0.8163)  loss_vfl_aux_1: 0.6916 (0.6902)  loss_vfl_aux_2: 0.6087 (0.6230)  loss_vfl_aux_3: 0.5728 (0.5850)  loss_vfl_aux_4: 0.5447 (0.5643)  loss_vfl_dn_0: 0.4204 (0.4217)  loss_vfl_dn_1: 0.3669 (0.3677)  loss_vfl_dn_2: 0.3566 (0.3563)  loss_vfl_dn_3: 0.3522 (0.3532)  loss_vfl_dn_4: 0.3502 (0.3518)  loss_vfl_dn_5: 0.3507 (0.3516)  loss_vfl_enc_0: 0.8076 (0.8109)  time: 0.8324  data: 0.0093  max mem: 15225
Epoch: [6]  [1300/1519]  eta: 0:03:08  lr: 0.000400  lr2: 0.000400  loss: 14.4047 (14.7202)  loss_bbox: 0.1727 (0.1786)  loss_bbox_aux_0: 0.1911 (0.1918)  loss_bbox_aux_1: 0.1763 (0.1812)  loss_bbox_aux_2: 0.1765 (0.1786)  loss_bbox_aux_3: 0.1732 (0.1784)  loss_bbox_aux_4: 0.1688 (0.1780)  loss_bbox_dn_0: 0.2749 (0.2732)  loss_bbox_dn_1: 0.2104 (0.2103)  loss_bbox_dn_2: 0.1946 (0.1978)  loss_bbox_dn_3: 0.1920 (0.1948)  loss_bbox_dn_4: 0.1932 (0.1939)  loss_bbox_dn_5: 0.1933 (0.1939)  loss_bbox_enc_0: 0.2250 (0.2284)  loss_giou: 0.3862 (0.3928)  loss_giou_aux_0: 0.4231 (0.4239)  loss_giou_aux_1: 0.3995 (0.4011)  loss_giou_aux_2: 0.3860 (0.3943)  loss_giou_aux_3: 0.3821 (0.3931)  loss_giou_aux_4: 0.3848 (0.3923)  loss_giou_dn_0: 0.5015 (0.5119)  loss_giou_dn_1: 0.3915 (0.4008)  loss_giou_dn_2: 0.3808 (0.3807)  loss_giou_dn_3: 0.3774 (0.3763)  loss_giou_dn_4: 0.3772 (0.3749)  loss_giou_dn_5: 0.3779 (0.3751)  loss_giou_enc_0: 0.4744 (0.4840)  loss_vfl: 0.5439 (0.5562)  loss_vfl_aux_0: 0.7650 (0.8137)  loss_vfl_aux_1: 0.6549 (0.6885)  loss_vfl_aux_2: 0.5907 (0.6221)  loss_vfl_aux_3: 0.5699 (0.5841)  loss_vfl_aux_4: 0.5582 (0.5637)  loss_vfl_dn_0: 0.4149 (0.4216)  loss_vfl_dn_1: 0.3639 (0.3676)  loss_vfl_dn_2: 0.3518 (0.3562)  loss_vfl_dn_3: 0.3491 (0.3531)  loss_vfl_dn_4: 0.3484 (0.3517)  loss_vfl_dn_5: 0.3481 (0.3515)  loss_vfl_enc_0: 0.8012 (0.8103)  time: 0.8157  data: 0.0094  max mem: 15225
Epoch: [6]  [1400/1519]  eta: 0:01:42  lr: 0.000400  lr2: 0.000400  loss: 14.5097 (14.7032)  loss_bbox: 0.1641 (0.1785)  loss_bbox_aux_0: 0.1757 (0.1913)  loss_bbox_aux_1: 0.1682 (0.1812)  loss_bbox_aux_2: 0.1666 (0.1784)  loss_bbox_aux_3: 0.1728 (0.1784)  loss_bbox_aux_4: 0.1756 (0.1780)  loss_bbox_dn_0: 0.2439 (0.2728)  loss_bbox_dn_1: 0.1851 (0.2101)  loss_bbox_dn_2: 0.1774 (0.1977)  loss_bbox_dn_3: 0.1736 (0.1946)  loss_bbox_dn_4: 0.1710 (0.1938)  loss_bbox_dn_5: 0.1709 (0.1937)  loss_bbox_enc_0: 0.2207 (0.2282)  loss_giou: 0.3807 (0.3924)  loss_giou_aux_0: 0.4148 (0.4229)  loss_giou_aux_1: 0.3916 (0.4006)  loss_giou_aux_2: 0.3830 (0.3939)  loss_giou_aux_3: 0.3854 (0.3927)  loss_giou_aux_4: 0.3832 (0.3919)  loss_giou_dn_0: 0.5068 (0.5108)  loss_giou_dn_1: 0.4034 (0.4002)  loss_giou_dn_2: 0.3840 (0.3803)  loss_giou_dn_3: 0.3782 (0.3760)  loss_giou_dn_4: 0.3761 (0.3746)  loss_giou_dn_5: 0.3767 (0.3747)  loss_giou_enc_0: 0.4624 (0.4834)  loss_vfl: 0.5247 (0.5557)  loss_vfl_aux_0: 0.7865 (0.8116)  loss_vfl_aux_1: 0.6693 (0.6866)  loss_vfl_aux_2: 0.6002 (0.6210)  loss_vfl_aux_3: 0.5702 (0.5831)  loss_vfl_aux_4: 0.5404 (0.5630)  loss_vfl_dn_0: 0.4176 (0.4213)  loss_vfl_dn_1: 0.3646 (0.3674)  loss_vfl_dn_2: 0.3557 (0.3561)  loss_vfl_dn_3: 0.3509 (0.3530)  loss_vfl_dn_4: 0.3497 (0.3516)  loss_vfl_dn_5: 0.3500 (0.3514)  loss_vfl_enc_0: 0.8083 (0.8101)  time: 0.8499  data: 0.0096  max mem: 15225
Epoch: [6]  [1500/1519]  eta: 0:00:16  lr: 0.000400  lr2: 0.000400  loss: 14.1502 (14.6788)  loss_bbox: 0.1556 (0.1782)  loss_bbox_aux_0: 0.1726 (0.1907)  loss_bbox_aux_1: 0.1714 (0.1810)  loss_bbox_aux_2: 0.1685 (0.1782)  loss_bbox_aux_3: 0.1599 (0.1781)  loss_bbox_aux_4: 0.1548 (0.1778)  loss_bbox_dn_0: 0.2626 (0.2721)  loss_bbox_dn_1: 0.1971 (0.2096)  loss_bbox_dn_2: 0.1884 (0.1972)  loss_bbox_dn_3: 0.1828 (0.1942)  loss_bbox_dn_4: 0.1815 (0.1933)  loss_bbox_dn_5: 0.1805 (0.1933)  loss_bbox_enc_0: 0.2161 (0.2276)  loss_giou: 0.3817 (0.3919)  loss_giou_aux_0: 0.4009 (0.4221)  loss_giou_aux_1: 0.3951 (0.4003)  loss_giou_aux_2: 0.3825 (0.3936)  loss_giou_aux_3: 0.3850 (0.3923)  loss_giou_aux_4: 0.3817 (0.3914)  loss_giou_dn_0: 0.4964 (0.5098)  loss_giou_dn_1: 0.3903 (0.3996)  loss_giou_dn_2: 0.3720 (0.3798)  loss_giou_dn_3: 0.3678 (0.3754)  loss_giou_dn_4: 0.3649 (0.3740)  loss_giou_dn_5: 0.3648 (0.3742)  loss_giou_enc_0: 0.4551 (0.4826)  loss_vfl: 0.5595 (0.5547)  loss_vfl_aux_0: 0.7420 (0.8089)  loss_vfl_aux_1: 0.6400 (0.6846)  loss_vfl_aux_2: 0.6020 (0.6191)  loss_vfl_aux_3: 0.5774 (0.5819)  loss_vfl_aux_4: 0.5737 (0.5620)  loss_vfl_dn_0: 0.4181 (0.4211)  loss_vfl_dn_1: 0.3647 (0.3673)  loss_vfl_dn_2: 0.3523 (0.3561)  loss_vfl_dn_3: 0.3479 (0.3529)  loss_vfl_dn_4: 0.3465 (0.3515)  loss_vfl_dn_5: 0.3465 (0.3514)  loss_vfl_enc_0: 0.7936 (0.8088)  time: 0.8100  data: 0.0091  max mem: 15225
Epoch: [6]  [1518/1519]  eta: 0:00:00  lr: 0.000400  lr2: 0.000400  loss: 14.5163 (14.6771)  loss_bbox: 0.1632 (0.1781)  loss_bbox_aux_0: 0.1835 (0.1906)  loss_bbox_aux_1: 0.1716 (0.1809)  loss_bbox_aux_2: 0.1623 (0.1781)  loss_bbox_aux_3: 0.1620 (0.1780)  loss_bbox_aux_4: 0.1638 (0.1777)  loss_bbox_dn_0: 0.2578 (0.2720)  loss_bbox_dn_1: 0.2058 (0.2096)  loss_bbox_dn_2: 0.1903 (0.1972)  loss_bbox_dn_3: 0.1860 (0.1941)  loss_bbox_dn_4: 0.1856 (0.1933)  loss_bbox_dn_5: 0.1863 (0.1932)  loss_bbox_enc_0: 0.2131 (0.2274)  loss_giou: 0.3738 (0.3919)  loss_giou_aux_0: 0.4001 (0.4221)  loss_giou_aux_1: 0.3835 (0.4003)  loss_giou_aux_2: 0.3755 (0.3935)  loss_giou_aux_3: 0.3784 (0.3923)  loss_giou_aux_4: 0.3776 (0.3915)  loss_giou_dn_0: 0.4979 (0.5099)  loss_giou_dn_1: 0.3887 (0.3997)  loss_giou_dn_2: 0.3692 (0.3798)  loss_giou_dn_3: 0.3666 (0.3755)  loss_giou_dn_4: 0.3662 (0.3741)  loss_giou_dn_5: 0.3673 (0.3742)  loss_giou_enc_0: 0.4552 (0.4825)  loss_vfl: 0.5299 (0.5546)  loss_vfl_aux_0: 0.7841 (0.8087)  loss_vfl_aux_1: 0.6767 (0.6847)  loss_vfl_aux_2: 0.6076 (0.6190)  loss_vfl_aux_3: 0.5614 (0.5817)  loss_vfl_aux_4: 0.5316 (0.5618)  loss_vfl_dn_0: 0.4179 (0.4211)  loss_vfl_dn_1: 0.3649 (0.3673)  loss_vfl_dn_2: 0.3526 (0.3560)  loss_vfl_dn_3: 0.3493 (0.3529)  loss_vfl_dn_4: 0.3485 (0.3515)  loss_vfl_dn_5: 0.3486 (0.3514)  loss_vfl_enc_0: 0.7874 (0.8087)  time: 0.7820  data: 0.0092  max mem: 15225
Epoch: [6] Total time: 0:21:48 (0.8616 s / it)
Averaged stats: lr: 0.000400  lr2: 0.000400  loss: 14.5163 (14.6771)  loss_bbox: 0.1632 (0.1781)  loss_bbox_aux_0: 0.1835 (0.1906)  loss_bbox_aux_1: 0.1716 (0.1809)  loss_bbox_aux_2: 0.1623 (0.1781)  loss_bbox_aux_3: 0.1620 (0.1780)  loss_bbox_aux_4: 0.1638 (0.1777)  loss_bbox_dn_0: 0.2578 (0.2720)  loss_bbox_dn_1: 0.2058 (0.2096)  loss_bbox_dn_2: 0.1903 (0.1972)  loss_bbox_dn_3: 0.1860 (0.1941)  loss_bbox_dn_4: 0.1856 (0.1933)  loss_bbox_dn_5: 0.1863 (0.1932)  loss_bbox_enc_0: 0.2131 (0.2274)  loss_giou: 0.3738 (0.3919)  loss_giou_aux_0: 0.4001 (0.4221)  loss_giou_aux_1: 0.3835 (0.4003)  loss_giou_aux_2: 0.3755 (0.3935)  loss_giou_aux_3: 0.3784 (0.3923)  loss_giou_aux_4: 0.3776 (0.3915)  loss_giou_dn_0: 0.4979 (0.5099)  loss_giou_dn_1: 0.3887 (0.3997)  loss_giou_dn_2: 0.3692 (0.3798)  loss_giou_dn_3: 0.3666 (0.3755)  loss_giou_dn_4: 0.3662 (0.3741)  loss_giou_dn_5: 0.3673 (0.3742)  loss_giou_enc_0: 0.4552 (0.4825)  loss_vfl: 0.5299 (0.5546)  loss_vfl_aux_0: 0.7841 (0.8087)  loss_vfl_aux_1: 0.6767 (0.6847)  loss_vfl_aux_2: 0.6076 (0.6190)  loss_vfl_aux_3: 0.5614 (0.5817)  loss_vfl_aux_4: 0.5316 (0.5618)  loss_vfl_dn_0: 0.4179 (0.4211)  loss_vfl_dn_1: 0.3649 (0.3673)  loss_vfl_dn_2: 0.3526 (0.3560)  loss_vfl_dn_3: 0.3493 (0.3529)  loss_vfl_dn_4: 0.3485 (0.3515)  loss_vfl_dn_5: 0.3486 (0.3514)  loss_vfl_enc_0: 0.7874 (0.8087)
Test:  [ 0/75]  eta: 0:03:11    time: 2.5566  data: 1.9664  max mem: 15225
Test:  [10/75]  eta: 0:00:50    time: 0.7724  data: 0.1989  max mem: 15225
Test:  [20/75]  eta: 0:00:39    time: 0.6253  data: 0.0268  max mem: 15225
Test:  [30/75]  eta: 0:00:30    time: 0.6234  data: 0.0231  max mem: 15225
Test:  [40/75]  eta: 0:00:23    time: 0.5965  data: 0.0231  max mem: 15225
Test:  [50/75]  eta: 0:00:16    time: 0.6205  data: 0.0300  max mem: 15225
Test:  [60/75]  eta: 0:00:09    time: 0.6109  data: 0.0212  max mem: 15225
Test:  [70/75]  eta: 0:00:03    time: 0.6111  data: 0.0382  max mem: 15225
Test:  [74/75]  eta: 0:00:00    time: 0.6055  data: 0.0395  max mem: 15225
Test: Total time: 0:00:47 (0.6392 s / it)
Averaged stats: 
Accumulating evaluation results...
DONE (t=11.46s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.443
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.680
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.494
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.054
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.473
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.586
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.541
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.675
best_stat: {'epoch': 2, 'coco_eval_bbox': 0.4528721068468995}
Epoch: [7]  [   0/1519]  eta: 4:39:15  lr: 0.000400  lr2: 0.000400  loss: 15.4475 (15.4475)  loss_bbox: 0.2371 (0.2371)  loss_bbox_aux_0: 0.2422 (0.2422)  loss_bbox_aux_1: 0.2629 (0.2629)  loss_bbox_aux_2: 0.2302 (0.2302)  loss_bbox_aux_3: 0.2469 (0.2469)  loss_bbox_aux_4: 0.2369 (0.2369)  loss_bbox_dn_0: 0.3489 (0.3489)  loss_bbox_dn_1: 0.2637 (0.2637)  loss_bbox_dn_2: 0.2403 (0.2403)  loss_bbox_dn_3: 0.2336 (0.2336)  loss_bbox_dn_4: 0.2322 (0.2322)  loss_bbox_dn_5: 0.2317 (0.2317)  loss_bbox_enc_0: 0.2650 (0.2650)  loss_giou: 0.4288 (0.4288)  loss_giou_aux_0: 0.4463 (0.4463)  loss_giou_aux_1: 0.4455 (0.4455)  loss_giou_aux_2: 0.4286 (0.4286)  loss_giou_aux_3: 0.4301 (0.4301)  loss_giou_aux_4: 0.4291 (0.4291)  loss_giou_dn_0: 0.5310 (0.5310)  loss_giou_dn_1: 0.4151 (0.4151)  loss_giou_dn_2: 0.3882 (0.3882)  loss_giou_dn_3: 0.3804 (0.3804)  loss_giou_dn_4: 0.3778 (0.3778)  loss_giou_dn_5: 0.3774 (0.3774)  loss_giou_enc_0: 0.4863 (0.4863)  loss_vfl: 0.4902 (0.4902)  loss_vfl_aux_0: 0.7687 (0.7687)  loss_vfl_aux_1: 0.6946 (0.6946)  loss_vfl_aux_2: 0.6089 (0.6089)  loss_vfl_aux_3: 0.5185 (0.5185)  loss_vfl_aux_4: 0.5016 (0.5016)  loss_vfl_dn_0: 0.4215 (0.4215)  loss_vfl_dn_1: 0.3712 (0.3712)  loss_vfl_dn_2: 0.3578 (0.3578)  loss_vfl_dn_3: 0.3541 (0.3541)  loss_vfl_dn_4: 0.3523 (0.3523)  loss_vfl_dn_5: 0.3528 (0.3528)  loss_vfl_enc_0: 0.8192 (0.8192)  time: 11.0308  data: 4.3203  max mem: 15225
Epoch: [7]  [ 100/1519]  eta: 0:22:31  lr: 0.000400  lr2: 0.000400  loss: 14.6020 (14.4284)  loss_bbox: 0.1795 (0.1765)  loss_bbox_aux_0: 0.1883 (0.1872)  loss_bbox_aux_1: 0.1834 (0.1798)  loss_bbox_aux_2: 0.1806 (0.1779)  loss_bbox_aux_3: 0.1806 (0.1778)  loss_bbox_aux_4: 0.1764 (0.1773)  loss_bbox_dn_0: 0.2818 (0.2699)  loss_bbox_dn_1: 0.2124 (0.2063)  loss_bbox_dn_2: 0.1977 (0.1932)  loss_bbox_dn_3: 0.1978 (0.1902)  loss_bbox_dn_4: 0.1997 (0.1892)  loss_bbox_dn_5: 0.1996 (0.1890)  loss_bbox_enc_0: 0.2358 (0.2284)  loss_giou: 0.3829 (0.3868)  loss_giou_aux_0: 0.4124 (0.4153)  loss_giou_aux_1: 0.3876 (0.3934)  loss_giou_aux_2: 0.3945 (0.3880)  loss_giou_aux_3: 0.3843 (0.3874)  loss_giou_aux_4: 0.3781 (0.3865)  loss_giou_dn_0: 0.5059 (0.5042)  loss_giou_dn_1: 0.3866 (0.3921)  loss_giou_dn_2: 0.3681 (0.3711)  loss_giou_dn_3: 0.3653 (0.3668)  loss_giou_dn_4: 0.3631 (0.3652)  loss_giou_dn_5: 0.3623 (0.3654)  loss_giou_enc_0: 0.4772 (0.4771)  loss_vfl: 0.5562 (0.5407)  loss_vfl_aux_0: 0.7802 (0.7833)  loss_vfl_aux_1: 0.6635 (0.6670)  loss_vfl_aux_2: 0.5898 (0.5978)  loss_vfl_aux_3: 0.5882 (0.5684)  loss_vfl_aux_4: 0.5645 (0.5457)  loss_vfl_dn_0: 0.4205 (0.4198)  loss_vfl_dn_1: 0.3669 (0.3664)  loss_vfl_dn_2: 0.3556 (0.3544)  loss_vfl_dn_3: 0.3501 (0.3515)  loss_vfl_dn_4: 0.3490 (0.3500)  loss_vfl_dn_5: 0.3490 (0.3501)  loss_vfl_enc_0: 0.7958 (0.7910)  time: 0.8339  data: 0.0105  max mem: 15225
Epoch: [7]  [ 200/1519]  eta: 0:20:42  lr: 0.000400  lr2: 0.000400  loss: 14.6177 (14.5349)  loss_bbox: 0.1638 (0.1774)  loss_bbox_aux_0: 0.1740 (0.1849)  loss_bbox_aux_1: 0.1729 (0.1806)  loss_bbox_aux_2: 0.1649 (0.1777)  loss_bbox_aux_3: 0.1638 (0.1774)  loss_bbox_aux_4: 0.1647 (0.1774)  loss_bbox_dn_0: 0.2737 (0.2713)  loss_bbox_dn_1: 0.2074 (0.2082)  loss_bbox_dn_2: 0.1964 (0.1954)  loss_bbox_dn_3: 0.1917 (0.1921)  loss_bbox_dn_4: 0.1907 (0.1911)  loss_bbox_dn_5: 0.1913 (0.1910)  loss_bbox_enc_0: 0.2188 (0.2273)  loss_giou: 0.3890 (0.3899)  loss_giou_aux_0: 0.4188 (0.4157)  loss_giou_aux_1: 0.4053 (0.3978)  loss_giou_aux_2: 0.4012 (0.3911)  loss_giou_aux_3: 0.3976 (0.3898)  loss_giou_aux_4: 0.3863 (0.3889)  loss_giou_dn_0: 0.5139 (0.5061)  loss_giou_dn_1: 0.4017 (0.3963)  loss_giou_dn_2: 0.3815 (0.3756)  loss_giou_dn_3: 0.3765 (0.3713)  loss_giou_dn_4: 0.3755 (0.3697)  loss_giou_dn_5: 0.3759 (0.3699)  loss_giou_enc_0: 0.4784 (0.4796)  loss_vfl: 0.5291 (0.5457)  loss_vfl_aux_0: 0.7951 (0.7930)  loss_vfl_aux_1: 0.6695 (0.6752)  loss_vfl_aux_2: 0.6079 (0.6091)  loss_vfl_aux_3: 0.5603 (0.5756)  loss_vfl_aux_4: 0.5390 (0.5525)  loss_vfl_dn_0: 0.4233 (0.4202)  loss_vfl_dn_1: 0.3686 (0.3666)  loss_vfl_dn_2: 0.3567 (0.3546)  loss_vfl_dn_3: 0.3538 (0.3515)  loss_vfl_dn_4: 0.3526 (0.3500)  loss_vfl_dn_5: 0.3529 (0.3500)  loss_vfl_enc_0: 0.7870 (0.7976)  time: 0.9660  data: 0.0099  max mem: 15225
Epoch: [7]  [ 300/1519]  eta: 0:18:33  lr: 0.000400  lr2: 0.000400  loss: 14.6574 (14.5449)  loss_bbox: 0.1625 (0.1767)  loss_bbox_aux_0: 0.1697 (0.1835)  loss_bbox_aux_1: 0.1657 (0.1793)  loss_bbox_aux_2: 0.1643 (0.1772)  loss_bbox_aux_3: 0.1630 (0.1770)  loss_bbox_aux_4: 0.1613 (0.1764)  loss_bbox_dn_0: 0.2655 (0.2702)  loss_bbox_dn_1: 0.2028 (0.2081)  loss_bbox_dn_2: 0.1872 (0.1951)  loss_bbox_dn_3: 0.1838 (0.1917)  loss_bbox_dn_4: 0.1866 (0.1908)  loss_bbox_dn_5: 0.1871 (0.1906)  loss_bbox_enc_0: 0.2077 (0.2269)  loss_giou: 0.3772 (0.3883)  loss_giou_aux_0: 0.4080 (0.4142)  loss_giou_aux_1: 0.3913 (0.3966)  loss_giou_aux_2: 0.3889 (0.3899)  loss_giou_aux_3: 0.3855 (0.3891)  loss_giou_aux_4: 0.3857 (0.3876)  loss_giou_dn_0: 0.5066 (0.5049)  loss_giou_dn_1: 0.3954 (0.3958)  loss_giou_dn_2: 0.3733 (0.3751)  loss_giou_dn_3: 0.3653 (0.3708)  loss_giou_dn_4: 0.3642 (0.3692)  loss_giou_dn_5: 0.3641 (0.3694)  loss_giou_enc_0: 0.4763 (0.4801)  loss_vfl: 0.5678 (0.5476)  loss_vfl_aux_0: 0.8570 (0.8004)  loss_vfl_aux_1: 0.7469 (0.6856)  loss_vfl_aux_2: 0.6595 (0.6155)  loss_vfl_aux_3: 0.5955 (0.5761)  loss_vfl_aux_4: 0.5759 (0.5552)  loss_vfl_dn_0: 0.4241 (0.4200)  loss_vfl_dn_1: 0.3702 (0.3669)  loss_vfl_dn_2: 0.3535 (0.3546)  loss_vfl_dn_3: 0.3502 (0.3515)  loss_vfl_dn_4: 0.3478 (0.3499)  loss_vfl_dn_5: 0.3478 (0.3499)  loss_vfl_enc_0: 0.8231 (0.7973)  time: 0.8283  data: 0.0095  max mem: 15225
Epoch: [7]  [ 400/1519]  eta: 0:16:37  lr: 0.000400  lr2: 0.000400  loss: 14.4501 (14.5641)  loss_bbox: 0.1668 (0.1758)  loss_bbox_aux_0: 0.1739 (0.1825)  loss_bbox_aux_1: 0.1689 (0.1780)  loss_bbox_aux_2: 0.1682 (0.1756)  loss_bbox_aux_3: 0.1685 (0.1759)  loss_bbox_aux_4: 0.1685 (0.1754)  loss_bbox_dn_0: 0.2587 (0.2693)  loss_bbox_dn_1: 0.2005 (0.2075)  loss_bbox_dn_2: 0.1878 (0.1941)  loss_bbox_dn_3: 0.1873 (0.1909)  loss_bbox_dn_4: 0.1876 (0.1899)  loss_bbox_dn_5: 0.1866 (0.1898)  loss_bbox_enc_0: 0.2200 (0.2245)  loss_giou: 0.3852 (0.3883)  loss_giou_aux_0: 0.4058 (0.4147)  loss_giou_aux_1: 0.3981 (0.3978)  loss_giou_aux_2: 0.3856 (0.3900)  loss_giou_aux_3: 0.3835 (0.3890)  loss_giou_aux_4: 0.3818 (0.3876)  loss_giou_dn_0: 0.5098 (0.5054)  loss_giou_dn_1: 0.4026 (0.3968)  loss_giou_dn_2: 0.3759 (0.3755)  loss_giou_dn_3: 0.3741 (0.3709)  loss_giou_dn_4: 0.3702 (0.3694)  loss_giou_dn_5: 0.3723 (0.3696)  loss_giou_enc_0: 0.4760 (0.4788)  loss_vfl: 0.5304 (0.5470)  loss_vfl_aux_0: 0.7963 (0.8059)  loss_vfl_aux_1: 0.7056 (0.7007)  loss_vfl_aux_2: 0.6470 (0.6234)  loss_vfl_aux_3: 0.5926 (0.5774)  loss_vfl_aux_4: 0.5597 (0.5551)  loss_vfl_dn_0: 0.4202 (0.4202)  loss_vfl_dn_1: 0.3685 (0.3677)  loss_vfl_dn_2: 0.3544 (0.3549)  loss_vfl_dn_3: 0.3519 (0.3516)  loss_vfl_dn_4: 0.3513 (0.3501)  loss_vfl_dn_5: 0.3516 (0.3501)  loss_vfl_enc_0: 0.7833 (0.7968)  time: 0.8265  data: 0.0091  max mem: 15225
Epoch: [7]  [ 500/1519]  eta: 0:14:58  lr: 0.000400  lr2: 0.000400  loss: 13.8950 (14.5388)  loss_bbox: 0.1648 (0.1749)  loss_bbox_aux_0: 0.1657 (0.1819)  loss_bbox_aux_1: 0.1717 (0.1776)  loss_bbox_aux_2: 0.1596 (0.1748)  loss_bbox_aux_3: 0.1646 (0.1749)  loss_bbox_aux_4: 0.1644 (0.1744)  loss_bbox_dn_0: 0.2449 (0.2670)  loss_bbox_dn_1: 0.1811 (0.2055)  loss_bbox_dn_2: 0.1712 (0.1922)  loss_bbox_dn_3: 0.1715 (0.1891)  loss_bbox_dn_4: 0.1719 (0.1882)  loss_bbox_dn_5: 0.1693 (0.1881)  loss_bbox_enc_0: 0.2115 (0.2242)  loss_giou: 0.3609 (0.3875)  loss_giou_aux_0: 0.3903 (0.4137)  loss_giou_aux_1: 0.3796 (0.3975)  loss_giou_aux_2: 0.3743 (0.3890)  loss_giou_aux_3: 0.3643 (0.3882)  loss_giou_aux_4: 0.3694 (0.3868)  loss_giou_dn_0: 0.4773 (0.5040)  loss_giou_dn_1: 0.3771 (0.3955)  loss_giou_dn_2: 0.3575 (0.3743)  loss_giou_dn_3: 0.3559 (0.3699)  loss_giou_dn_4: 0.3526 (0.3684)  loss_giou_dn_5: 0.3527 (0.3686)  loss_giou_enc_0: 0.4619 (0.4785)  loss_vfl: 0.5176 (0.5458)  loss_vfl_aux_0: 0.7787 (0.8073)  loss_vfl_aux_1: 0.7489 (0.7101)  loss_vfl_aux_2: 0.6149 (0.6259)  loss_vfl_aux_3: 0.5585 (0.5771)  loss_vfl_aux_4: 0.5211 (0.5541)  loss_vfl_dn_0: 0.4164 (0.4198)  loss_vfl_dn_1: 0.3651 (0.3674)  loss_vfl_dn_2: 0.3531 (0.3544)  loss_vfl_dn_3: 0.3498 (0.3511)  loss_vfl_dn_4: 0.3491 (0.3496)  loss_vfl_dn_5: 0.3489 (0.3496)  loss_vfl_enc_0: 0.7608 (0.7921)  time: 0.8443  data: 0.0096  max mem: 15225
Epoch: [7]  [ 600/1519]  eta: 0:13:32  lr: 0.000400  lr2: 0.000400  loss: 14.1204 (14.5102)  loss_bbox: 0.1649 (0.1748)  loss_bbox_aux_0: 0.1810 (0.1819)  loss_bbox_aux_1: 0.1755 (0.1771)  loss_bbox_aux_2: 0.1746 (0.1744)  loss_bbox_aux_3: 0.1670 (0.1747)  loss_bbox_aux_4: 0.1655 (0.1742)  loss_bbox_dn_0: 0.2527 (0.2668)  loss_bbox_dn_1: 0.1906 (0.2051)  loss_bbox_dn_2: 0.1777 (0.1919)  loss_bbox_dn_3: 0.1761 (0.1888)  loss_bbox_dn_4: 0.1755 (0.1879)  loss_bbox_dn_5: 0.1759 (0.1878)  loss_bbox_enc_0: 0.2075 (0.2238)  loss_giou: 0.3821 (0.3865)  loss_giou_aux_0: 0.4067 (0.4127)  loss_giou_aux_1: 0.3967 (0.3960)  loss_giou_aux_2: 0.3879 (0.3878)  loss_giou_aux_3: 0.3822 (0.3872)  loss_giou_aux_4: 0.3822 (0.3858)  loss_giou_dn_0: 0.4895 (0.5026)  loss_giou_dn_1: 0.3908 (0.3942)  loss_giou_dn_2: 0.3701 (0.3732)  loss_giou_dn_3: 0.3655 (0.3687)  loss_giou_dn_4: 0.3634 (0.3673)  loss_giou_dn_5: 0.3642 (0.3675)  loss_giou_enc_0: 0.4645 (0.4768)  loss_vfl: 0.5250 (0.5443)  loss_vfl_aux_0: 0.8084 (0.8061)  loss_vfl_aux_1: 0.6800 (0.7100)  loss_vfl_aux_2: 0.5815 (0.6233)  loss_vfl_aux_3: 0.5485 (0.5750)  loss_vfl_aux_4: 0.5298 (0.5524)  loss_vfl_dn_0: 0.4196 (0.4197)  loss_vfl_dn_1: 0.3640 (0.3668)  loss_vfl_dn_2: 0.3540 (0.3541)  loss_vfl_dn_3: 0.3489 (0.3508)  loss_vfl_dn_4: 0.3470 (0.3493)  loss_vfl_dn_5: 0.3465 (0.3493)  loss_vfl_enc_0: 0.7975 (0.7936)  time: 0.8227  data: 0.0098  max mem: 15225
